{
	"id": "6c97a7140e19a7ad35d54a800c2758f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\ncontract MemCoin is ERC20, Ownable {\r\n    error TransferFromZero();\r\n    error TransferToZero();\r\n    error ArithmeticError();\r\n    error TokenAmountMustBePositive();\r\n    error TaxTooHigh();\r\n    error InsufficientFunds();\r\n\r\n    uint256 public buyTax = 5;\r\n    uint256 public sellTax = 10;\r\n    uint256 public liquidityShare = 50;\r\n    uint256 public burnShare = 20;\r\n    uint256 public rewardsShare = 30;\r\n\r\n    IUniswapV2Router02 public uniswaprouter;\r\n    address public uniswapPair;\r\n    address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    mapping(address => bool) public isExcludedFromTax;\r\n\r\n    event TaxCollected(uint256 amount);\r\n    event LiquidityAdded(uint256 tokens, uint256 eth);\r\n\r\n    constructor(\r\n        string memory _name, \r\n        string memory _symbol, \r\n        address routerAddress\r\n    ) ERC20(_name, _symbol) Ownable(msg.sender) {\r\n        uniswaprouter = IUniswapV2Router02(routerAddress);\r\n        uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH());\r\n\r\n        isExcludedFromTax[msg.sender] = true;\r\n        isExcludedFromTax[address(this)] = true;\r\n\r\n        _mint(msg.sender, 1_000_000_000 * 10**decimals());\r\n    }\r\n\r\n    function transfer(address sender, address recipient, uint256 amount) external{\r\n        require(sender != address(0), TransferFromZero());\r\n        require(recipient != address(0), TransferToZero());\r\n\r\n        if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {\r\n            super._transfer(sender, recipient, amount);\r\n            return;\r\n        }\r\n\r\n        bool isBuy = recipient == uniswapPair;\r\n        bool isSell = sender == uniswapPair;\r\n\r\n        uint256 taxAmount;\r\n        if(isBuy) {\r\n            taxAmount = (amount * buyTax) / 100;\r\n        }else if(isSell) {\r\n            taxAmount = (amount * sellTax) / 100;\r\n        }\r\n\r\n        uint256 netAmount = amount - taxAmount;\r\n        require(amount == netAmount + taxAmount, ArithmeticError());\r\n\r\n        if (taxAmount > 0) {\r\n            super._transfer(sender, address(this), taxAmount);\r\n            emit TaxCollected(taxAmount);\r\n\r\n            uint256 liquidityTokens = (taxAmount * liquidityShare) / 100;\r\n            uint256 burnTokens = (taxAmount * burnShare) / 100;\r\n            uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens;\r\n\r\n            if (burnTokens > 0) {\r\n                super._burn(address(this), burnTokens);\r\n            }\r\n        }\r\n\r\n        super._transfer(sender, recipient, netAmount);\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAmount > 0, TokenAmountMustBePositive());\r\n\r\n        _approve(address(this), address(uniswaprouter), tokenAmount);\r\n\r\n        uniswaprouter.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            tokenAmount,\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n\r\n        emit LiquidityAdded(tokenAmount, address(this).balance);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external onlyOwner {\r\n        require(msg.sender != address(0), TransferToZero());\r\n        require(amount > address(this).balance, InsufficientFunds());\r\n\r\n        uint256 balance = address(this).balance;\r\n\r\n        payable(owner()).transfer(balance);\r\n    }\r\n\r\n    function excludeFromTax(address account, bool excluded) external onlyOwner {\r\n        isExcludedFromTax[account] = excluded;\r\n    }\r\n\r\n    function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {\r\n        require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh());\r\n        buyTax = _buyTax;\r\n        sellTax = _sellTax;\r\n    }\r\n}"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mem.sol": {
				"MemCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ArithmeticError",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientFunds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TaxTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAmountMustBePositive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZero",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TaxCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellTax",
									"type": "uint256"
								}
							],
							"name": "setTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswaprouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mem.sol\":322:4045  contract MemCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mem.sol\":577:578  5 */\n  0x05\n    /* \"contracts/mem.sol\":553:578  uint256 public buyTax = 5 */\n  0x06\n  sstore\n    /* \"contracts/mem.sol\":610:612  10 */\n  0x0a\n    /* \"contracts/mem.sol\":585:612  uint256 public sellTax = 10 */\n  0x07\n  sstore\n    /* \"contracts/mem.sol\":651:653  50 */\n  0x32\n    /* \"contracts/mem.sol\":619:653  uint256 public liquidityShare = 50 */\n  0x08\n  sstore\n    /* \"contracts/mem.sol\":687:689  20 */\n  0x14\n    /* \"contracts/mem.sol\":660:689  uint256 public burnShare = 20 */\n  0x09\n  sstore\n    /* \"contracts/mem.sol\":726:728  30 */\n  0x1e\n    /* \"contracts/mem.sol\":696:728  uint256 public rewardsShare = 30 */\n  0x0a\n  sstore\n    /* \"contracts/mem.sol\":1063:1564  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/mem.sol\":1208:1218  msg.sender */\n  caller\n    /* \"contracts/mem.sol\":1184:1189  _name */\n  dup4\n    /* \"contracts/mem.sol\":1191:1198  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/mem.sol\":1266:1279  routerAddress */\n  dup1\n    /* \"contracts/mem.sol\":1231:1244  uniswaprouter */\n  0x0b\n  0x00\n    /* \"contracts/mem.sol\":1231:1280  uniswaprouter = IUniswapV2Router02(routerAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1323:1336  uniswaprouter */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/mem.sol\":1323:1344  uniswaprouter.factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc45a0155\n    /* \"contracts/mem.sol\":1323:1346  uniswaprouter.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"contracts/mem.sol\":1305:1358  IUniswapV2Factory(uniswaprouter.factory()).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"contracts/mem.sol\":1367:1371  this */\n  address\n    /* \"contracts/mem.sol\":1374:1387  uniswaprouter */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/mem.sol\":1374:1392  uniswaprouter.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"contracts/mem.sol\":1374:1394  uniswaprouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_24:\n    /* \"contracts/mem.sol\":1305:1395  IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_29:\n    /* \"contracts/mem.sol\":1291:1302  uniswapPair */\n  0x0c\n  0x00\n    /* \"contracts/mem.sol\":1291:1395  uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1440:1444  true */\n  0x01\n    /* \"contracts/mem.sol\":1408:1425  isExcludedFromTax */\n  0x0d\n    /* \"contracts/mem.sol\":1408:1437  isExcludedFromTax[msg.sender] */\n  0x00\n    /* \"contracts/mem.sol\":1426:1436  msg.sender */\n  caller\n    /* \"contracts/mem.sol\":1408:1437  isExcludedFromTax[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/mem.sol\":1408:1444  isExcludedFromTax[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1490:1494  true */\n  0x01\n    /* \"contracts/mem.sol\":1455:1472  isExcludedFromTax */\n  0x0d\n    /* \"contracts/mem.sol\":1455:1487  isExcludedFromTax[address(this)] */\n  0x00\n    /* \"contracts/mem.sol\":1481:1485  this */\n  address\n    /* \"contracts/mem.sol\":1455:1487  isExcludedFromTax[address(this)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/mem.sol\":1455:1494  isExcludedFromTax[address(this)] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1507:1556  _mint(msg.sender, 1_000_000_000 * 10**decimals()) */\n  tag_30\n    /* \"contracts/mem.sol\":1513:1523  msg.sender */\n  caller\n    /* \"contracts/mem.sol\":1545:1555  decimals() */\n  tag_31\n    /* \"contracts/mem.sol\":1545:1553  decimals */\n  shl(0x20, tag_32)\n    /* \"contracts/mem.sol\":1545:1555  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/mem.sol\":1541:1543  10 */\n  0x0a\n    /* \"contracts/mem.sol\":1541:1555  10**decimals() */\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"contracts/mem.sol\":1525:1538  1_000_000_000 */\n  0x3b9aca00\n    /* \"contracts/mem.sol\":1525:1555  1_000_000_000 * 10**decimals() */\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"contracts/mem.sol\":1507:1512  _mint */\n  shl(0x20, tag_37)\n    /* \"contracts/mem.sol\":1507:1556  _mint(msg.sender, 1_000_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"contracts/mem.sol\":1063:1564  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/mem.sol\":322:4045  contract MemCoin is ERC20, Ownable {... */\n  jump(tag_38)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_50)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_52\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_55)\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_58:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_59:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_60:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_61:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_62:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_63:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_64:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_65:\n    /* \"#utility.yul\":957:984   */\n  tag_110\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_63\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_112\n  tag_64\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1030:1118   */\ntag_111:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_66:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_114\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_115\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_65\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_67:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_118\n  tag_64\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1434:1490   */\ntag_117:\n    /* \"#utility.yul\":1508:1537   */\n  tag_119\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_68:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_69:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_122\n    /* \"#utility.yul\":1885:1934   */\n  tag_123\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_67\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1869:1935   */\n  tag_66\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_125\n  tag_62\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2010:2122   */\ntag_124:\n    /* \"#utility.yul\":2131:2183   */\n  tag_126\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_68\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_70:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_129\n  tag_61\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2292:2414   */\ntag_128:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_130\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_69\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_71:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_72:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_133\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_71\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_73:\n    /* \"#utility.yul\":2877:2901   */\n  tag_135\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_72\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_136:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_74:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_138\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_73\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  0x00\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_141\n  tag_59\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3222:3341   */\ntag_140:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_143\n  tag_60\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3417:3534   */\ntag_142:\n    /* \"#utility.yul\":3558:3632   */\n  tag_144\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_70\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_146\n  tag_60\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3719:3836   */\ntag_145:\n    /* \"#utility.yul\":3860:3934   */\n  tag_147\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_70\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_148\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_74\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_75:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_76:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_77:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_152:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_154\n  tag_76\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4617:4701   */\ntag_153:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_78:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_79:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_80:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_81:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_159\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_80\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5332:5371   */\n  tag_160\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_80\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_82:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_83:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_84:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_164\n    /* \"#utility.yul\":5721:5755   */\n  tag_165\n    /* \"#utility.yul\":5730:5754   */\n  tag_166\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_82\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5721:5755   */\n  tag_83\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5703:5756   */\n  tag_82\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_85:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_86:\n    /* \"#utility.yul\":5959:5998   */\n  tag_169\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_84\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6020:6111   */\n  tag_170\n    /* \"#utility.yul\":6069:6110   */\n  tag_171\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_81\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_87:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6190:6191   */\n  0x00\n    /* \"#utility.yul\":6183:6191   */\n  swap1\n  pop\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_88:\n    /* \"#utility.yul\":6280:6312   */\n  tag_174\n  tag_87\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6321:6386   */\n  tag_175\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_86\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_89:\n    /* \"#utility.yul\":6458:6578   */\ntag_177:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_180\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_88\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_177)\ntag_179:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_90:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_183\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_78\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6809:6838   */\n  tag_184\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_79\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_185:\n    /* \"#utility.yul\":7036:7116   */\n  tag_186\n    /* \"#utility.yul\":7092:7114   */\n  tag_187\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_79\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_89\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_182:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_91:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_92:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_190\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_91\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_93:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_192\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_92\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_9:\n    /* \"#utility.yul\":7853:7890   */\n  tag_194\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_75\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_196\n  tag_64\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7941:7997   */\ntag_195:\n    /* \"#utility.yul\":8021:8059   */\n  tag_197\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_77\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8106:8173   */\n  tag_198\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_90\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_201:\n    /* \"#utility.yul\":9047:9114   */\n  tag_202\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_93\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_199)\n    /* \"#utility.yul\":8268:8886   */\ntag_200:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_203\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_78\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_204:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_204)\ntag_206:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_208\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_92\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_207:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_199:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9255   */\ntag_94:\n    /* \"#utility.yul\":9224:9248   */\n  tag_210\n    /* \"#utility.yul\":9242:9247   */\n  dup2\n    /* \"#utility.yul\":9224:9248   */\n  tag_72\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9219:9222   */\n  dup3\n    /* \"#utility.yul\":9212:9249   */\n  mstore\n    /* \"#utility.yul\":9137:9255   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9261:9483   */\ntag_14:\n    /* \"#utility.yul\":9354:9358   */\n  0x00\n    /* \"#utility.yul\":9392:9394   */\n  0x20\n    /* \"#utility.yul\":9381:9390   */\n  dup3\n    /* \"#utility.yul\":9377:9395   */\n  add\n    /* \"#utility.yul\":9369:9395   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9476   */\n  tag_212\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9462:9471   */\n  dup4\n    /* \"#utility.yul\":9458:9475   */\n  add\n    /* \"#utility.yul\":9449:9455   */\n  dup5\n    /* \"#utility.yul\":9405:9476   */\n  tag_94\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9261:9483   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9489:9840   */\ntag_21:\n    /* \"#utility.yul\":9559:9565   */\n  0x00\n    /* \"#utility.yul\":9608:9610   */\n  0x20\n    /* \"#utility.yul\":9596:9605   */\n  dup3\n    /* \"#utility.yul\":9587:9594   */\n  dup5\n    /* \"#utility.yul\":9583:9606   */\n  sub\n    /* \"#utility.yul\":9579:9611   */\n  slt\n    /* \"#utility.yul\":9576:9695   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":9614:9693   */\n  tag_215\n  tag_59\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9576:9695   */\ntag_214:\n    /* \"#utility.yul\":9734:9735   */\n  0x00\n    /* \"#utility.yul\":9759:9823   */\n  tag_216\n    /* \"#utility.yul\":9815:9822   */\n  dup5\n    /* \"#utility.yul\":9806:9812   */\n  dup3\n    /* \"#utility.yul\":9795:9804   */\n  dup6\n    /* \"#utility.yul\":9791:9813   */\n  add\n    /* \"#utility.yul\":9759:9823   */\n  tag_74\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9749:9823   */\n  swap2\n  pop\n    /* \"#utility.yul\":9705:9833   */\n  pop\n    /* \"#utility.yul\":9489:9840   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9846:10178   */\ntag_26:\n    /* \"#utility.yul\":9967:9971   */\n  0x00\n    /* \"#utility.yul\":10005:10007   */\n  0x40\n    /* \"#utility.yul\":9994:10003   */\n  dup3\n    /* \"#utility.yul\":9990:10008   */\n  add\n    /* \"#utility.yul\":9982:10008   */\n  swap1\n  pop\n    /* \"#utility.yul\":10018:10089   */\n  tag_218\n    /* \"#utility.yul\":10086:10087   */\n  0x00\n    /* \"#utility.yul\":10075:10084   */\n  dup4\n    /* \"#utility.yul\":10071:10088   */\n  add\n    /* \"#utility.yul\":10062:10068   */\n  dup6\n    /* \"#utility.yul\":10018:10089   */\n  tag_94\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10099:10171   */\n  tag_219\n    /* \"#utility.yul\":10167:10169   */\n  0x20\n    /* \"#utility.yul\":10156:10165   */\n  dup4\n    /* \"#utility.yul\":10152:10170   */\n  add\n    /* \"#utility.yul\":10143:10149   */\n  dup5\n    /* \"#utility.yul\":10099:10171   */\n  tag_94\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9846:10178   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10184:10364   */\ntag_95:\n    /* \"#utility.yul\":10232:10309   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10229:10230   */\n  0x00\n    /* \"#utility.yul\":10222:10310   */\n  mstore\n    /* \"#utility.yul\":10329:10333   */\n  0x11\n    /* \"#utility.yul\":10326:10327   */\n  0x04\n    /* \"#utility.yul\":10319:10334   */\n  mstore\n    /* \"#utility.yul\":10353:10357   */\n  0x24\n    /* \"#utility.yul\":10350:10351   */\n  0x00\n    /* \"#utility.yul\":10343:10358   */\n  revert\n    /* \"#utility.yul\":10370:10472   */\ntag_96:\n    /* \"#utility.yul\":10412:10420   */\n  0x00\n    /* \"#utility.yul\":10459:10464   */\n  dup2\n    /* \"#utility.yul\":10456:10457   */\n  0x01\n    /* \"#utility.yul\":10452:10465   */\n  shr\n    /* \"#utility.yul\":10431:10465   */\n  swap1\n  pop\n    /* \"#utility.yul\":10370:10472   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10478:11326   */\ntag_97:\n    /* \"#utility.yul\":10539:10544   */\n  0x00\n    /* \"#utility.yul\":10546:10550   */\n  0x00\n    /* \"#utility.yul\":10570:10576   */\n  dup3\n    /* \"#utility.yul\":10561:10576   */\n  swap2\n  pop\n    /* \"#utility.yul\":10594:10599   */\n  dup4\n    /* \"#utility.yul\":10585:10599   */\n  swap1\n  pop\n    /* \"#utility.yul\":10608:11320   */\ntag_223:\n    /* \"#utility.yul\":10629:10630   */\n  0x01\n    /* \"#utility.yul\":10619:10627   */\n  dup6\n    /* \"#utility.yul\":10616:10631   */\n  gt\n    /* \"#utility.yul\":10608:11320   */\n  iszero\n  tag_225\n  jumpi\n    /* \"#utility.yul\":10724:10728   */\n  dup1\n    /* \"#utility.yul\":10719:10722   */\n  dup7\n    /* \"#utility.yul\":10715:10729   */\n  div\n    /* \"#utility.yul\":10709:10713   */\n  dup2\n    /* \"#utility.yul\":10706:10730   */\n  gt\n    /* \"#utility.yul\":10703:10753   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":10733:10751   */\n  tag_227\n  tag_95\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10703:10753   */\ntag_226:\n    /* \"#utility.yul\":10783:10784   */\n  0x01\n    /* \"#utility.yul\":10773:10781   */\n  dup6\n    /* \"#utility.yul\":10769:10785   */\n  and\n    /* \"#utility.yul\":10766:11217   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":11198:11202   */\n  dup1\n    /* \"#utility.yul\":11191:11196   */\n  dup3\n    /* \"#utility.yul\":11187:11203   */\n  mul\n    /* \"#utility.yul\":11178:11203   */\n  swap2\n  pop\n    /* \"#utility.yul\":10766:11217   */\ntag_228:\n    /* \"#utility.yul\":11248:11252   */\n  dup1\n    /* \"#utility.yul\":11242:11246   */\n  dup2\n    /* \"#utility.yul\":11238:11253   */\n  mul\n    /* \"#utility.yul\":11230:11253   */\n  swap1\n  pop\n    /* \"#utility.yul\":11278:11310   */\n  tag_229\n    /* \"#utility.yul\":11301:11309   */\n  dup6\n    /* \"#utility.yul\":11278:11310   */\n  tag_96\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11266:11310   */\n  swap5\n  pop\n    /* \"#utility.yul\":10608:11320   */\n  jump(tag_223)\ntag_225:\n    /* \"#utility.yul\":10478:11326   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11332:12405   */\ntag_98:\n    /* \"#utility.yul\":11386:11391   */\n  0x00\n    /* \"#utility.yul\":11577:11585   */\n  dup3\n    /* \"#utility.yul\":11567:11607   */\n  tag_231\n  jumpi\n    /* \"#utility.yul\":11598:11599   */\n  0x01\n    /* \"#utility.yul\":11589:11599   */\n  swap1\n  pop\n    /* \"#utility.yul\":11600:11605   */\n  jump(tag_230)\n    /* \"#utility.yul\":11567:11607   */\ntag_231:\n    /* \"#utility.yul\":11626:11630   */\n  dup2\n    /* \"#utility.yul\":11616:11652   */\n  tag_232\n  jumpi\n    /* \"#utility.yul\":11643:11644   */\n  0x00\n    /* \"#utility.yul\":11634:11644   */\n  swap1\n  pop\n    /* \"#utility.yul\":11645:11650   */\n  jump(tag_230)\n    /* \"#utility.yul\":11616:11652   */\ntag_232:\n    /* \"#utility.yul\":11712:11716   */\n  dup2\n    /* \"#utility.yul\":11760:11761   */\n  0x01\n    /* \"#utility.yul\":11755:11782   */\n  dup2\n  eq\n  tag_234\n  jumpi\n    /* \"#utility.yul\":11796:11797   */\n  0x02\n    /* \"#utility.yul\":11791:11982   */\n  dup2\n  eq\n  tag_235\n  jumpi\n    /* \"#utility.yul\":11705:11982   */\n  jump(tag_233)\n    /* \"#utility.yul\":11755:11782   */\ntag_234:\n    /* \"#utility.yul\":11773:11774   */\n  0x01\n    /* \"#utility.yul\":11764:11774   */\n  swap2\n  pop\n    /* \"#utility.yul\":11775:11780   */\n  pop\n  jump(tag_230)\n    /* \"#utility.yul\":11791:11982   */\ntag_235:\n    /* \"#utility.yul\":11836:11839   */\n  0xff\n    /* \"#utility.yul\":11826:11834   */\n  dup5\n    /* \"#utility.yul\":11823:11840   */\n  gt\n    /* \"#utility.yul\":11820:11863   */\n  iszero\n  tag_236\n  jumpi\n    /* \"#utility.yul\":11843:11861   */\n  tag_237\n  tag_95\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11820:11863   */\ntag_236:\n    /* \"#utility.yul\":11892:11900   */\n  dup4\n    /* \"#utility.yul\":11889:11890   */\n  0x02\n    /* \"#utility.yul\":11885:11901   */\n  exp\n    /* \"#utility.yul\":11876:11901   */\n  swap2\n  pop\n    /* \"#utility.yul\":11927:11930   */\n  dup5\n    /* \"#utility.yul\":11920:11925   */\n  dup3\n    /* \"#utility.yul\":11917:11931   */\n  gt\n    /* \"#utility.yul\":11914:11954   */\n  iszero\n  tag_238\n  jumpi\n    /* \"#utility.yul\":11934:11952   */\n  tag_239\n  tag_95\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11914:11954   */\ntag_238:\n    /* \"#utility.yul\":11967:11972   */\n  pop\n  jump(tag_230)\n    /* \"#utility.yul\":11705:11982   */\ntag_233:\n  pop\n    /* \"#utility.yul\":12091:12093   */\n  0x20\n    /* \"#utility.yul\":12081:12089   */\n  dup4\n    /* \"#utility.yul\":12078:12094   */\n  lt\n    /* \"#utility.yul\":12072:12075   */\n  0x0133\n    /* \"#utility.yul\":12066:12070   */\n  dup4\n    /* \"#utility.yul\":12063:12076   */\n  lt\n    /* \"#utility.yul\":12059:12095   */\n  and\n    /* \"#utility.yul\":12041:12043   */\n  0x4e\n    /* \"#utility.yul\":12031:12039   */\n  dup5\n    /* \"#utility.yul\":12028:12044   */\n  lt\n    /* \"#utility.yul\":12023:12025   */\n  0x0b\n    /* \"#utility.yul\":12017:12021   */\n  dup5\n    /* \"#utility.yul\":12014:12026   */\n  lt\n    /* \"#utility.yul\":12010:12045   */\n  and\n    /* \"#utility.yul\":11994:12105   */\n  or\n    /* \"#utility.yul\":11991:12237   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":12147:12155   */\n  dup3\n    /* \"#utility.yul\":12141:12145   */\n  dup3\n    /* \"#utility.yul\":12137:12156   */\n  exp\n    /* \"#utility.yul\":12128:12156   */\n  swap1\n  pop\n    /* \"#utility.yul\":12182:12185   */\n  dup4\n    /* \"#utility.yul\":12175:12180   */\n  dup2\n    /* \"#utility.yul\":12172:12186   */\n  gt\n    /* \"#utility.yul\":12169:12209   */\n  iszero\n  tag_241\n  jumpi\n    /* \"#utility.yul\":12189:12207   */\n  tag_242\n  tag_95\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12169:12209   */\ntag_241:\n    /* \"#utility.yul\":12222:12227   */\n  jump(tag_230)\n    /* \"#utility.yul\":11991:12237   */\ntag_240:\n    /* \"#utility.yul\":12262:12304   */\n  tag_243\n    /* \"#utility.yul\":12300:12303   */\n  dup5\n    /* \"#utility.yul\":12290:12298   */\n  dup5\n    /* \"#utility.yul\":12284:12288   */\n  dup5\n    /* \"#utility.yul\":12281:12282   */\n  0x01\n    /* \"#utility.yul\":12262:12304   */\n  tag_97\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12247:12304   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":12336:12340   */\n  dup2\n    /* \"#utility.yul\":12331:12334   */\n  dup5\n    /* \"#utility.yul\":12327:12341   */\n  div\n    /* \"#utility.yul\":12320:12325   */\n  dup2\n    /* \"#utility.yul\":12317:12342   */\n  gt\n    /* \"#utility.yul\":12314:12365   */\n  iszero\n  tag_244\n  jumpi\n    /* \"#utility.yul\":12345:12363   */\n  tag_245\n  tag_95\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12314:12365   */\ntag_244:\n    /* \"#utility.yul\":12394:12398   */\n  dup2\n    /* \"#utility.yul\":12387:12392   */\n  dup2\n    /* \"#utility.yul\":12383:12399   */\n  mul\n    /* \"#utility.yul\":12374:12399   */\n  swap1\n  pop\n    /* \"#utility.yul\":11332:12405   */\ntag_230:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12411:12497   */\ntag_99:\n    /* \"#utility.yul\":12446:12453   */\n  0x00\n    /* \"#utility.yul\":12486:12490   */\n  0xff\n    /* \"#utility.yul\":12479:12484   */\n  dup3\n    /* \"#utility.yul\":12475:12491   */\n  and\n    /* \"#utility.yul\":12464:12491   */\n  swap1\n  pop\n    /* \"#utility.yul\":12411:12497   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12503:12784   */\ntag_34:\n    /* \"#utility.yul\":12561:12566   */\n  0x00\n    /* \"#utility.yul\":12585:12608   */\n  tag_248\n    /* \"#utility.yul\":12603:12607   */\n  dup3\n    /* \"#utility.yul\":12585:12608   */\n  tag_82\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":12577:12608   */\n  swap2\n  pop\n    /* \"#utility.yul\":12629:12654   */\n  tag_249\n    /* \"#utility.yul\":12645:12653   */\n  dup4\n    /* \"#utility.yul\":12629:12654   */\n  tag_99\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12617:12654   */\n  swap3\n  pop\n    /* \"#utility.yul\":12673:12777   */\n  tag_250\n    /* \"#utility.yul\":12710:12776   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12700:12708   */\n  dup5\n    /* \"#utility.yul\":12694:12698   */\n  dup5\n    /* \"#utility.yul\":12673:12777   */\n  tag_98\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12664:12777   */\n  swap1\n  pop\n    /* \"#utility.yul\":12503:12784   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12790:13200   */\ntag_36:\n    /* \"#utility.yul\":12830:12837   */\n  0x00\n    /* \"#utility.yul\":12853:12873   */\n  tag_252\n    /* \"#utility.yul\":12871:12872   */\n  dup3\n    /* \"#utility.yul\":12853:12873   */\n  tag_82\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12848:12873   */\n  swap2\n  pop\n    /* \"#utility.yul\":12887:12907   */\n  tag_253\n    /* \"#utility.yul\":12905:12906   */\n  dup4\n    /* \"#utility.yul\":12887:12907   */\n  tag_82\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":12882:12907   */\n  swap3\n  pop\n    /* \"#utility.yul\":12942:12943   */\n  dup3\n    /* \"#utility.yul\":12939:12940   */\n  dup3\n    /* \"#utility.yul\":12935:12944   */\n  mul\n    /* \"#utility.yul\":12964:12994   */\n  tag_254\n    /* \"#utility.yul\":12982:12993   */\n  dup2\n    /* \"#utility.yul\":12964:12994   */\n  tag_82\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":12953:12994   */\n  swap2\n  pop\n    /* \"#utility.yul\":13143:13144   */\n  dup3\n    /* \"#utility.yul\":13134:13141   */\n  dup3\n    /* \"#utility.yul\":13130:13145   */\n  div\n    /* \"#utility.yul\":13127:13128   */\n  dup5\n    /* \"#utility.yul\":13124:13146   */\n  eq\n    /* \"#utility.yul\":13104:13105   */\n  dup4\n    /* \"#utility.yul\":13097:13106   */\n  iszero\n    /* \"#utility.yul\":13077:13160   */\n  or\n    /* \"#utility.yul\":13054:13193   */\n  tag_255\n  jumpi\n    /* \"#utility.yul\":13173:13191   */\n  tag_256\n  tag_95\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":13054:13193   */\ntag_255:\n    /* \"#utility.yul\":12838:13200   */\n  pop\n    /* \"#utility.yul\":12790:13200   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13206:13397   */\ntag_49:\n    /* \"#utility.yul\":13246:13249   */\n  0x00\n    /* \"#utility.yul\":13265:13285   */\n  tag_258\n    /* \"#utility.yul\":13283:13284   */\n  dup3\n    /* \"#utility.yul\":13265:13285   */\n  tag_82\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":13260:13285   */\n  swap2\n  pop\n    /* \"#utility.yul\":13299:13319   */\n  tag_259\n    /* \"#utility.yul\":13317:13318   */\n  dup4\n    /* \"#utility.yul\":13299:13319   */\n  tag_82\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":13294:13319   */\n  swap3\n  pop\n    /* \"#utility.yul\":13342:13343   */\n  dup3\n    /* \"#utility.yul\":13339:13340   */\n  dup3\n    /* \"#utility.yul\":13335:13344   */\n  add\n    /* \"#utility.yul\":13328:13344   */\n  swap1\n  pop\n    /* \"#utility.yul\":13363:13366   */\n  dup1\n    /* \"#utility.yul\":13360:13361   */\n  dup3\n    /* \"#utility.yul\":13357:13367   */\n  gt\n    /* \"#utility.yul\":13354:13390   */\n  iszero\n  tag_260\n  jumpi\n    /* \"#utility.yul\":13370:13388   */\n  tag_261\n  tag_95\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":13354:13390   */\ntag_260:\n    /* \"#utility.yul\":13206:13397   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13403:13521   */\ntag_100:\n    /* \"#utility.yul\":13490:13514   */\n  tag_263\n    /* \"#utility.yul\":13508:13513   */\n  dup2\n    /* \"#utility.yul\":13490:13514   */\n  tag_82\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":13485:13488   */\n  dup3\n    /* \"#utility.yul\":13478:13515   */\n  mstore\n    /* \"#utility.yul\":13403:13521   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13527:13969   */\ntag_53:\n    /* \"#utility.yul\":13676:13680   */\n  0x00\n    /* \"#utility.yul\":13714:13716   */\n  0x60\n    /* \"#utility.yul\":13703:13712   */\n  dup3\n    /* \"#utility.yul\":13699:13717   */\n  add\n    /* \"#utility.yul\":13691:13717   */\n  swap1\n  pop\n    /* \"#utility.yul\":13727:13798   */\n  tag_265\n    /* \"#utility.yul\":13795:13796   */\n  0x00\n    /* \"#utility.yul\":13784:13793   */\n  dup4\n    /* \"#utility.yul\":13780:13797   */\n  add\n    /* \"#utility.yul\":13771:13777   */\n  dup7\n    /* \"#utility.yul\":13727:13798   */\n  tag_94\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":13808:13880   */\n  tag_266\n    /* \"#utility.yul\":13876:13878   */\n  0x20\n    /* \"#utility.yul\":13865:13874   */\n  dup4\n    /* \"#utility.yul\":13861:13879   */\n  add\n    /* \"#utility.yul\":13852:13858   */\n  dup6\n    /* \"#utility.yul\":13808:13880   */\n  tag_100\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":13890:13962   */\n  tag_267\n    /* \"#utility.yul\":13958:13960   */\n  0x40\n    /* \"#utility.yul\":13947:13956   */\n  dup4\n    /* \"#utility.yul\":13943:13961   */\n  add\n    /* \"#utility.yul\":13934:13940   */\n  dup5\n    /* \"#utility.yul\":13890:13962   */\n  tag_100\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":13527:13969   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13975:14197   */\ntag_57:\n    /* \"#utility.yul\":14068:14072   */\n  0x00\n    /* \"#utility.yul\":14106:14108   */\n  0x20\n    /* \"#utility.yul\":14095:14104   */\n  dup3\n    /* \"#utility.yul\":14091:14109   */\n  add\n    /* \"#utility.yul\":14083:14109   */\n  swap1\n  pop\n    /* \"#utility.yul\":14119:14190   */\n  tag_269\n    /* \"#utility.yul\":14187:14188   */\n  0x00\n    /* \"#utility.yul\":14176:14185   */\n  dup4\n    /* \"#utility.yul\":14172:14189   */\n  add\n    /* \"#utility.yul\":14163:14169   */\n  dup5\n    /* \"#utility.yul\":14119:14190   */\n  tag_100\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":13975:14197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/mem.sol\":322:4045  contract MemCoin is ERC20, Ownable {... */\ntag_38:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mem.sol\":322:4045  contract MemCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc647b20e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xcb4ca631\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xcb4ca631\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xc647b20e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6a30647\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbeabacc8\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x2431ba73\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x33727077\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x33727077\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4e6fd6c4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2431ba73\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x05bf0a54\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x15291cd4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/mem.sol\":660:689  uint256 public burnShare = 20 */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":619:653  uint256 public liquidityShare = 50 */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":737:776  IUniswapV2Router02 public uniswaprouter */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":3401:3694  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":696:728  uint256 public rewardsShare = 30 */\n    tag_12:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":816:897  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":553:578  uint256 public buyTax = 5 */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":2897:3393  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":1572:2889  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/mem.sol\":3841:4042  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/mem.sol\":3702:3833  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/mem.sol\":783:809  address public uniswapPair */\n    tag_24:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":906:955  mapping(address => bool) public isExcludedFromTax */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":585:612  uint256 public sellTax = 10 */\n    tag_26:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/mem.sol\":660:689  uint256 public burnShare = 20 */\n    tag_35:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":619:653  uint256 public liquidityShare = 50 */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":737:776  IUniswapV2Router02 public uniswaprouter */\n    tag_60:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":3401:3694  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/mem.sol\":3495:3496  0 */\n      0x00\n        /* \"contracts/mem.sol\":3473:3497  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3473:3483  msg.sender */\n      caller\n        /* \"contracts/mem.sol\":3473:3497  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":3465:3516  require(msg.sender != address(0), TransferToZero()) */\n      tag_153\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/mem.sol\":3544:3565  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3535:3541  amount */\n      dup2\n        /* \"contracts/mem.sol\":3535:3565  amount > address(this).balance */\n      gt\n        /* \"contracts/mem.sol\":3527:3587  require(amount > address(this).balance, InsufficientFunds()) */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x356680b700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/mem.sol\":3600:3615  uint256 balance */\n      0x00\n        /* \"contracts/mem.sol\":3618:3639  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3600:3639  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":3660:3667  owner() */\n      tag_155\n        /* \"contracts/mem.sol\":3660:3665  owner */\n      tag_92\n        /* \"contracts/mem.sol\":3660:3667  owner() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/mem.sol\":3652:3677  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3652:3686  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"contracts/mem.sol\":3678:3685  balance */\n      dup3\n        /* \"contracts/mem.sol\":3652:3686  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n        /* \"contracts/mem.sol\":3454:3694  {... */\n      pop\n        /* \"contracts/mem.sol\":3401:3694  function withdraw(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mem.sol\":696:728  uint256 public rewardsShare = 30 */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":816:897  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_75:\n        /* \"contracts/mem.sol\":855:897  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/mem.sol\":816:897  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":553:578  uint256 public buyTax = 5 */\n    tag_79:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":2897:3393  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/mem.sol\":2992:2993  0 */\n      0x00\n        /* \"contracts/mem.sol\":2978:2989  tokenAmount */\n      dup2\n        /* \"contracts/mem.sol\":2978:2993  tokenAmount > 0 */\n      gt\n        /* \"contracts/mem.sol\":2970:3023  require(tokenAmount > 0, TokenAmountMustBePositive()) */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x671d94d800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/mem.sol\":3036:3096  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      tag_163\n        /* \"contracts/mem.sol\":3053:3057  this */\n      address\n        /* \"contracts/mem.sol\":3068:3081  uniswaprouter */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3084:3095  tokenAmount */\n      dup4\n        /* \"contracts/mem.sol\":3036:3044  _approve */\n      tag_141\n        /* \"contracts/mem.sol\":3036:3096  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/mem.sol\":3109:3122  uniswaprouter */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3109:3138  uniswaprouter.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"contracts/mem.sol\":3146:3167  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3191:3195  this */\n      address\n        /* \"contracts/mem.sol\":3211:3222  tokenAmount */\n      dup5\n        /* \"contracts/mem.sol\":3237:3238  0 */\n      0x00\n        /* \"contracts/mem.sol\":3253:3254  0 */\n      0x00\n        /* \"contracts/mem.sol\":3269:3276  owner() */\n      tag_164\n        /* \"contracts/mem.sol\":3269:3274  owner */\n      tag_92\n        /* \"contracts/mem.sol\":3269:3276  owner() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/mem.sol\":3291:3306  block.timestamp */\n      timestamp\n        /* \"contracts/mem.sol\":3109:3317  uniswaprouter.addLiquidityETH{value: address(this).balance}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":3335:3385  LiquidityAdded(tokenAmount, address(this).balance) */\n      0x38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b\n        /* \"contracts/mem.sol\":3350:3361  tokenAmount */\n      dup2\n        /* \"contracts/mem.sol\":3363:3384  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3335:3385  LiquidityAdded(tokenAmount, address(this).balance) */\n      mload(0x40)\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/mem.sol\":2897:3393  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_132\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_132\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":1572:2889  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_103:\n        /* \"contracts/mem.sol\":1686:1687  0 */\n      0x00\n        /* \"contracts/mem.sol\":1668:1688  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1668:1674  sender */\n      dup4\n        /* \"contracts/mem.sol\":1668:1688  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":1660:1709  require(sender != address(0), TransferFromZero()) */\n      tag_190\n      jumpi\n      mload(0x40)\n      0xf38f85c300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/mem.sol\":1749:1750  0 */\n      0x00\n        /* \"contracts/mem.sol\":1728:1751  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1728:1737  recipient */\n      dup3\n        /* \"contracts/mem.sol\":1728:1751  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":1720:1770  require(recipient != address(0), TransferToZero()) */\n      tag_191\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/mem.sol\":1787:1804  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":1787:1812  isExcludedFromTax[sender] */\n      0x00\n        /* \"contracts/mem.sol\":1805:1811  sender */\n      dup5\n        /* \"contracts/mem.sol\":1787:1812  isExcludedFromTax[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/mem.sol\":1787:1844  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/mem.sol\":1816:1833  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":1816:1844  isExcludedFromTax[recipient] */\n      0x00\n        /* \"contracts/mem.sol\":1834:1843  recipient */\n      dup4\n        /* \"contracts/mem.sol\":1816:1844  isExcludedFromTax[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/mem.sol\":1787:1844  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n    tag_192:\n        /* \"contracts/mem.sol\":1783:1936  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/mem.sol\":1861:1903  super._transfer(sender, recipient, amount) */\n      tag_194\n        /* \"contracts/mem.sol\":1877:1883  sender */\n      dup4\n        /* \"contracts/mem.sol\":1885:1894  recipient */\n      dup4\n        /* \"contracts/mem.sol\":1896:1902  amount */\n      dup4\n        /* \"contracts/mem.sol\":1861:1876  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":1861:1903  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/mem.sol\":1918:1925  return; */\n      jump(tag_189)\n        /* \"contracts/mem.sol\":1783:1936  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n    tag_193:\n        /* \"contracts/mem.sol\":1948:1958  bool isBuy */\n      0x00\n        /* \"contracts/mem.sol\":1974:1985  uniswapPair */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1961:1985  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1961:1970  recipient */\n      dup4\n        /* \"contracts/mem.sol\":1961:1985  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mem.sol\":1948:1985  bool isBuy = recipient == uniswapPair */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":1996:2007  bool isSell */\n      0x00\n        /* \"contracts/mem.sol\":2020:2031  uniswapPair */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2010:2031  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2010:2016  sender */\n      dup6\n        /* \"contracts/mem.sol\":2010:2031  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mem.sol\":1996:2031  bool isSell = sender == uniswapPair */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2044:2061  uint256 taxAmount */\n      0x00\n        /* \"contracts/mem.sol\":2075:2080  isBuy */\n      dup3\n        /* \"contracts/mem.sol\":2072:2223  if(isBuy) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/mem.sol\":2129:2132  100 */\n      0x64\n        /* \"contracts/mem.sol\":2119:2125  buyTax */\n      sload(0x06)\n        /* \"contracts/mem.sol\":2110:2116  amount */\n      dup6\n        /* \"contracts/mem.sol\":2110:2125  amount * buyTax */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/mem.sol\":2109:2132  (amount * buyTax) / 100 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/mem.sol\":2097:2132  taxAmount = (amount * buyTax) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2072:2223  if(isBuy) {... */\n      jump(tag_200)\n    tag_195:\n        /* \"contracts/mem.sol\":2152:2158  isSell */\n      dup2\n        /* \"contracts/mem.sol\":2149:2223  if(isSell) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/mem.sol\":2208:2211  100 */\n      0x64\n        /* \"contracts/mem.sol\":2197:2204  sellTax */\n      sload(0x07)\n        /* \"contracts/mem.sol\":2188:2194  amount */\n      dup6\n        /* \"contracts/mem.sol\":2188:2204  amount * sellTax */\n      tag_202\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_202:\n        /* \"contracts/mem.sol\":2187:2211  (amount * sellTax) / 100 */\n      tag_203\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_203:\n        /* \"contracts/mem.sol\":2175:2211  taxAmount = (amount * sellTax) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2149:2223  if(isSell) {... */\n    tag_201:\n        /* \"contracts/mem.sol\":2072:2223  if(isBuy) {... */\n    tag_200:\n        /* \"contracts/mem.sol\":2235:2252  uint256 netAmount */\n      0x00\n        /* \"contracts/mem.sol\":2264:2273  taxAmount */\n      dup2\n        /* \"contracts/mem.sol\":2255:2261  amount */\n      dup6\n        /* \"contracts/mem.sol\":2255:2273  amount - taxAmount */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/mem.sol\":2235:2273  uint256 netAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2314:2323  taxAmount */\n      dup2\n        /* \"contracts/mem.sol\":2302:2311  netAmount */\n      dup2\n        /* \"contracts/mem.sol\":2302:2323  netAmount + taxAmount */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/mem.sol\":2292:2298  amount */\n      dup6\n        /* \"contracts/mem.sol\":2292:2323  amount == netAmount + taxAmount */\n      eq\n        /* \"contracts/mem.sol\":2284:2343  require(amount == netAmount + taxAmount, ArithmeticError()) */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x1f825c6a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/mem.sol\":2372:2373  0 */\n      0x00\n        /* \"contracts/mem.sol\":2360:2369  taxAmount */\n      dup3\n        /* \"contracts/mem.sol\":2360:2373  taxAmount > 0 */\n      gt\n        /* \"contracts/mem.sol\":2356:2824  if (taxAmount > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/mem.sol\":2390:2439  super._transfer(sender, address(this), taxAmount) */\n      tag_210\n        /* \"contracts/mem.sol\":2406:2412  sender */\n      dup8\n        /* \"contracts/mem.sol\":2422:2426  this */\n      address\n        /* \"contracts/mem.sol\":2429:2438  taxAmount */\n      dup5\n        /* \"contracts/mem.sol\":2390:2405  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2390:2439  super._transfer(sender, address(this), taxAmount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/mem.sol\":2459:2482  TaxCollected(taxAmount) */\n      0x092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6\n        /* \"contracts/mem.sol\":2472:2481  taxAmount */\n      dup3\n        /* \"contracts/mem.sol\":2459:2482  TaxCollected(taxAmount) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/mem.sol\":2499:2522  uint256 liquidityTokens */\n      0x00\n        /* \"contracts/mem.sol\":2556:2559  100 */\n      0x64\n        /* \"contracts/mem.sol\":2538:2552  liquidityShare */\n      sload(0x08)\n        /* \"contracts/mem.sol\":2526:2535  taxAmount */\n      dup5\n        /* \"contracts/mem.sol\":2526:2552  taxAmount * liquidityShare */\n      tag_212\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_212:\n        /* \"contracts/mem.sol\":2525:2559  (taxAmount * liquidityShare) / 100 */\n      tag_213\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_213:\n        /* \"contracts/mem.sol\":2499:2559  uint256 liquidityTokens = (taxAmount * liquidityShare) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2574:2592  uint256 burnTokens */\n      0x00\n        /* \"contracts/mem.sol\":2621:2624  100 */\n      0x64\n        /* \"contracts/mem.sol\":2608:2617  burnShare */\n      sload(0x09)\n        /* \"contracts/mem.sol\":2596:2605  taxAmount */\n      dup6\n        /* \"contracts/mem.sol\":2596:2617  taxAmount * burnShare */\n      tag_214\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_214:\n        /* \"contracts/mem.sol\":2595:2624  (taxAmount * burnShare) / 100 */\n      tag_215\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_215:\n        /* \"contracts/mem.sol\":2574:2624  uint256 burnTokens = (taxAmount * burnShare) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2639:2660  uint256 rewardsTokens */\n      0x00\n        /* \"contracts/mem.sol\":2693:2703  burnTokens */\n      dup2\n        /* \"contracts/mem.sol\":2675:2690  liquidityTokens */\n      dup4\n        /* \"contracts/mem.sol\":2663:2672  taxAmount */\n      dup7\n        /* \"contracts/mem.sol\":2663:2690  taxAmount - liquidityTokens */\n      tag_216\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_216:\n        /* \"contracts/mem.sol\":2663:2703  taxAmount - liquidityTokens - burnTokens */\n      tag_217\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_217:\n        /* \"contracts/mem.sol\":2639:2703  uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2737:2738  0 */\n      0x00\n        /* \"contracts/mem.sol\":2724:2734  burnTokens */\n      dup3\n        /* \"contracts/mem.sol\":2724:2738  burnTokens > 0 */\n      gt\n        /* \"contracts/mem.sol\":2720:2813  if (burnTokens > 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/mem.sol\":2759:2797  super._burn(address(this), burnTokens) */\n      tag_219\n        /* \"contracts/mem.sol\":2779:2783  this */\n      address\n        /* \"contracts/mem.sol\":2786:2796  burnTokens */\n      dup4\n        /* \"contracts/mem.sol\":2759:2770  super._burn */\n      tag_220\n        /* \"contracts/mem.sol\":2759:2797  super._burn(address(this), burnTokens) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/mem.sol\":2720:2813  if (burnTokens > 0) {... */\n    tag_218:\n        /* \"contracts/mem.sol\":2375:2824  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":2356:2824  if (taxAmount > 0) {... */\n    tag_209:\n        /* \"contracts/mem.sol\":2836:2881  super._transfer(sender, recipient, netAmount) */\n      tag_221\n        /* \"contracts/mem.sol\":2852:2858  sender */\n      dup8\n        /* \"contracts/mem.sol\":2860:2869  recipient */\n      dup8\n        /* \"contracts/mem.sol\":2871:2880  netAmount */\n      dup4\n        /* \"contracts/mem.sol\":2836:2851  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2836:2881  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/mem.sol\":1649:2889  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":1572:2889  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_189:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":3841:4042  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"contracts/mem.sol\":3943:3945  10 */\n      0x0a\n        /* \"contracts/mem.sol\":3932:3939  _buyTax */\n      dup3\n        /* \"contracts/mem.sol\":3932:3945  _buyTax <= 10 */\n      gt\n      iszero\n        /* \"contracts/mem.sol\":3932:3963  _buyTax <= 10 && _sellTax <= 20 */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/mem.sol\":3961:3963  20 */\n      0x14\n        /* \"contracts/mem.sol\":3949:3957  _sellTax */\n      dup2\n        /* \"contracts/mem.sol\":3949:3963  _sellTax <= 20 */\n      gt\n      iszero\n        /* \"contracts/mem.sol\":3932:3963  _buyTax <= 10 && _sellTax <= 20 */\n    tag_225:\n        /* \"contracts/mem.sol\":3924:3978  require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh()) */\n      tag_226\n      jumpi\n      mload(0x40)\n      0xaf1ee13400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/mem.sol\":3998:4005  _buyTax */\n      dup2\n        /* \"contracts/mem.sol\":3989:3995  buyTax */\n      0x06\n        /* \"contracts/mem.sol\":3989:4005  buyTax = _buyTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":4026:4034  _sellTax */\n      dup1\n        /* \"contracts/mem.sol\":4016:4023  sellTax */\n      0x07\n        /* \"contracts/mem.sol\":4016:4034  sellTax = _sellTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":3841:4042  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":3702:3833  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/mem.sol\":3817:3825  excluded */\n      dup1\n        /* \"contracts/mem.sol\":3788:3805  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":3788:3814  isExcludedFromTax[account] */\n      0x00\n        /* \"contracts/mem.sol\":3806:3813  account */\n      dup5\n        /* \"contracts/mem.sol\":3788:3814  isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mem.sol\":3788:3825  isExcludedFromTax[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":3702:3833  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":783:809  address public uniswapPair */\n    tag_113:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":906:955  mapping(address => bool) public isExcludedFromTax */\n    tag_117:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":585:612  uint256 public sellTax = 10 */\n    tag_120:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_272\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_275\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_275:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_276)\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_280)\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_282:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_283:\n        /* \"#utility.yul\":177:201   */\n      tag_320\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_282\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_37:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_322\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_283\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_284:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_285:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_286:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_287:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_288:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_328\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_284\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1146:1217   */\n      tag_329\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_285\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_330\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_286\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1316:1345   */\n      tag_331\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_287\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_41:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_333\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_288\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_290:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_292:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_293:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_339\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_292\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_294:\n        /* \"#utility.yul\":2311:2335   */\n      tag_341\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_293\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_342:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_295:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_344\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_294\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_296:\n        /* \"#utility.yul\":2584:2608   */\n      tag_346\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_282\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_347:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_297:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_349\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_296\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_44:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_352\n      tag_290\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2877:2996   */\n    tag_351:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_353\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_295\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_354\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_297\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_298:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_299:\n        /* \"#utility.yul\":3441:3462   */\n      tag_357\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_298\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_47:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_359\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_299\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_56:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_362\n      tag_290\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3801:3920   */\n    tag_361:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_363\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_295\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_364\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_295\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_365\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_297\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4376   */\n    tag_300:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4370   */\n      dup2\n        /* \"#utility.yul\":4358:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4524   */\n    tag_301:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4518   */\n      tag_368\n        /* \"#utility.yul\":4483:4517   */\n      tag_369\n        /* \"#utility.yul\":4492:4516   */\n      tag_370\n        /* \"#utility.yul\":4510:4515   */\n      dup5\n        /* \"#utility.yul\":4492:4516   */\n      tag_292\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4483:4517   */\n      tag_300\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4465:4518   */\n      tag_292\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4452:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4656   */\n    tag_302:\n        /* \"#utility.yul\":4580:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4650   */\n      tag_372\n        /* \"#utility.yul\":4644:4649   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      tag_301\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4600:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4815   */\n    tag_303:\n        /* \"#utility.yul\":4739:4748   */\n      0x00\n        /* \"#utility.yul\":4772:4809   */\n      tag_374\n        /* \"#utility.yul\":4803:4808   */\n      dup3\n        /* \"#utility.yul\":4772:4809   */\n      tag_302\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4759:4809   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5006   */\n    tag_304:\n        /* \"#utility.yul\":4935:4999   */\n      tag_376\n        /* \"#utility.yul\":4993:4998   */\n      dup2\n        /* \"#utility.yul\":4935:4999   */\n      tag_303\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4930:4933   */\n      dup3\n        /* \"#utility.yul\":4923:5000   */\n      mstore\n        /* \"#utility.yul\":4821:5006   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5012:5288   */\n    tag_62:\n        /* \"#utility.yul\":5132:5136   */\n      0x00\n        /* \"#utility.yul\":5170:5172   */\n      0x20\n        /* \"#utility.yul\":5159:5168   */\n      dup3\n        /* \"#utility.yul\":5155:5173   */\n      add\n        /* \"#utility.yul\":5147:5173   */\n      swap1\n      pop\n        /* \"#utility.yul\":5183:5281   */\n      tag_378\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5267:5276   */\n      dup4\n        /* \"#utility.yul\":5263:5280   */\n      add\n        /* \"#utility.yul\":5254:5260   */\n      dup5\n        /* \"#utility.yul\":5183:5281   */\n      tag_304\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5012:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5623   */\n    tag_65:\n        /* \"#utility.yul\":5353:5359   */\n      0x00\n        /* \"#utility.yul\":5402:5404   */\n      0x20\n        /* \"#utility.yul\":5390:5399   */\n      dup3\n        /* \"#utility.yul\":5381:5388   */\n      dup5\n        /* \"#utility.yul\":5377:5400   */\n      sub\n        /* \"#utility.yul\":5373:5405   */\n      slt\n        /* \"#utility.yul\":5370:5489   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5408:5487   */\n      tag_381\n      tag_290\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5370:5489   */\n    tag_380:\n        /* \"#utility.yul\":5528:5529   */\n      0x00\n        /* \"#utility.yul\":5553:5606   */\n      tag_382\n        /* \"#utility.yul\":5598:5605   */\n      dup5\n        /* \"#utility.yul\":5589:5595   */\n      dup3\n        /* \"#utility.yul\":5578:5587   */\n      dup6\n        /* \"#utility.yul\":5574:5596   */\n      add\n        /* \"#utility.yul\":5553:5606   */\n      tag_297\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5543:5606   */\n      swap2\n      pop\n        /* \"#utility.yul\":5499:5616   */\n      pop\n        /* \"#utility.yul\":5294:5623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5629:5715   */\n    tag_305:\n        /* \"#utility.yul\":5664:5671   */\n      0x00\n        /* \"#utility.yul\":5704:5708   */\n      0xff\n        /* \"#utility.yul\":5697:5702   */\n      dup3\n        /* \"#utility.yul\":5693:5709   */\n      and\n        /* \"#utility.yul\":5682:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5629:5715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5721:5833   */\n    tag_306:\n        /* \"#utility.yul\":5804:5826   */\n      tag_385\n        /* \"#utility.yul\":5820:5825   */\n      dup2\n        /* \"#utility.yul\":5804:5826   */\n      tag_305\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5799:5802   */\n      dup3\n        /* \"#utility.yul\":5792:5827   */\n      mstore\n        /* \"#utility.yul\":5721:5833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5839:6053   */\n    tag_70:\n        /* \"#utility.yul\":5928:5932   */\n      0x00\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup3\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5943:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6046   */\n      tag_387\n        /* \"#utility.yul\":6043:6044   */\n      0x00\n        /* \"#utility.yul\":6032:6041   */\n      dup4\n        /* \"#utility.yul\":6028:6045   */\n      add\n        /* \"#utility.yul\":6019:6025   */\n      dup5\n        /* \"#utility.yul\":5979:6046   */\n      tag_306\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5839:6053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6059:6177   */\n    tag_307:\n        /* \"#utility.yul\":6146:6170   */\n      tag_389\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6146:6170   */\n      tag_293\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6141:6144   */\n      dup3\n        /* \"#utility.yul\":6134:6171   */\n      mstore\n        /* \"#utility.yul\":6059:6177   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6183:6405   */\n    tag_77:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6327:6398   */\n      tag_391\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6384:6393   */\n      dup4\n        /* \"#utility.yul\":6380:6397   */\n      add\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6327:6398   */\n      tag_307\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6183:6405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6411:6740   */\n    tag_86:\n        /* \"#utility.yul\":6470:6476   */\n      0x00\n        /* \"#utility.yul\":6519:6521   */\n      0x20\n        /* \"#utility.yul\":6507:6516   */\n      dup3\n        /* \"#utility.yul\":6498:6505   */\n      dup5\n        /* \"#utility.yul\":6494:6517   */\n      sub\n        /* \"#utility.yul\":6490:6522   */\n      slt\n        /* \"#utility.yul\":6487:6606   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6525:6604   */\n      tag_394\n      tag_290\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6487:6606   */\n    tag_393:\n        /* \"#utility.yul\":6645:6646   */\n      0x00\n        /* \"#utility.yul\":6670:6723   */\n      tag_395\n        /* \"#utility.yul\":6715:6722   */\n      dup5\n        /* \"#utility.yul\":6706:6712   */\n      dup3\n        /* \"#utility.yul\":6695:6704   */\n      dup6\n        /* \"#utility.yul\":6691:6713   */\n      add\n        /* \"#utility.yul\":6670:6723   */\n      tag_295\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6660:6723   */\n      swap2\n      pop\n        /* \"#utility.yul\":6616:6733   */\n      pop\n        /* \"#utility.yul\":6411:6740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6746:7220   */\n    tag_106:\n        /* \"#utility.yul\":6814:6820   */\n      0x00\n        /* \"#utility.yul\":6822:6828   */\n      0x00\n        /* \"#utility.yul\":6871:6873   */\n      0x40\n        /* \"#utility.yul\":6859:6868   */\n      dup4\n        /* \"#utility.yul\":6850:6857   */\n      dup6\n        /* \"#utility.yul\":6846:6869   */\n      sub\n        /* \"#utility.yul\":6842:6874   */\n      slt\n        /* \"#utility.yul\":6839:6958   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6877:6956   */\n      tag_398\n      tag_290\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6839:6958   */\n    tag_397:\n        /* \"#utility.yul\":6997:6998   */\n      0x00\n        /* \"#utility.yul\":7022:7075   */\n      tag_399\n        /* \"#utility.yul\":7067:7074   */\n      dup6\n        /* \"#utility.yul\":7058:7064   */\n      dup3\n        /* \"#utility.yul\":7047:7056   */\n      dup7\n        /* \"#utility.yul\":7043:7065   */\n      add\n        /* \"#utility.yul\":7022:7075   */\n      tag_297\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7012:7075   */\n      swap3\n      pop\n        /* \"#utility.yul\":6968:7085   */\n      pop\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"#utility.yul\":7150:7203   */\n      tag_400\n        /* \"#utility.yul\":7195:7202   */\n      dup6\n        /* \"#utility.yul\":7186:7192   */\n      dup3\n        /* \"#utility.yul\":7175:7184   */\n      dup7\n        /* \"#utility.yul\":7171:7193   */\n      add\n        /* \"#utility.yul\":7150:7203   */\n      tag_297\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7140:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7095:7213   */\n      pop\n        /* \"#utility.yul\":6746:7220   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:7342   */\n    tag_308:\n        /* \"#utility.yul\":7296:7317   */\n      tag_402\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7296:7317   */\n      tag_298\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7289:7294   */\n      dup2\n        /* \"#utility.yul\":7286:7318   */\n      eq\n        /* \"#utility.yul\":7276:7336   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7332:7333   */\n      0x00\n        /* \"#utility.yul\":7329:7330   */\n      0x00\n        /* \"#utility.yul\":7322:7334   */\n      revert\n        /* \"#utility.yul\":7276:7336   */\n    tag_403:\n        /* \"#utility.yul\":7226:7342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7481   */\n    tag_309:\n        /* \"#utility.yul\":7391:7396   */\n      0x00\n        /* \"#utility.yul\":7429:7435   */\n      dup2\n        /* \"#utility.yul\":7416:7436   */\n      calldataload\n        /* \"#utility.yul\":7407:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7445:7475   */\n      tag_405\n        /* \"#utility.yul\":7469:7474   */\n      dup2\n        /* \"#utility.yul\":7445:7475   */\n      tag_308\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7348:7481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7487:7955   */\n    tag_110:\n        /* \"#utility.yul\":7552:7558   */\n      0x00\n        /* \"#utility.yul\":7560:7566   */\n      0x00\n        /* \"#utility.yul\":7609:7611   */\n      0x40\n        /* \"#utility.yul\":7597:7606   */\n      dup4\n        /* \"#utility.yul\":7588:7595   */\n      dup6\n        /* \"#utility.yul\":7584:7607   */\n      sub\n        /* \"#utility.yul\":7580:7612   */\n      slt\n        /* \"#utility.yul\":7577:7696   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7615:7694   */\n      tag_408\n      tag_290\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7577:7696   */\n    tag_407:\n        /* \"#utility.yul\":7735:7736   */\n      0x00\n        /* \"#utility.yul\":7760:7813   */\n      tag_409\n        /* \"#utility.yul\":7805:7812   */\n      dup6\n        /* \"#utility.yul\":7796:7802   */\n      dup3\n        /* \"#utility.yul\":7785:7794   */\n      dup7\n        /* \"#utility.yul\":7781:7803   */\n      add\n        /* \"#utility.yul\":7760:7813   */\n      tag_295\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7750:7813   */\n      swap3\n      pop\n        /* \"#utility.yul\":7706:7823   */\n      pop\n        /* \"#utility.yul\":7862:7864   */\n      0x20\n        /* \"#utility.yul\":7888:7938   */\n      tag_410\n        /* \"#utility.yul\":7930:7937   */\n      dup6\n        /* \"#utility.yul\":7921:7927   */\n      dup3\n        /* \"#utility.yul\":7910:7919   */\n      dup7\n        /* \"#utility.yul\":7906:7928   */\n      add\n        /* \"#utility.yul\":7888:7938   */\n      tag_309\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7878:7938   */\n      swap2\n      pop\n        /* \"#utility.yul\":7833:7948   */\n      pop\n        /* \"#utility.yul\":7487:7955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8435   */\n    tag_124:\n        /* \"#utility.yul\":8029:8035   */\n      0x00\n        /* \"#utility.yul\":8037:8043   */\n      0x00\n        /* \"#utility.yul\":8086:8088   */\n      0x40\n        /* \"#utility.yul\":8074:8083   */\n      dup4\n        /* \"#utility.yul\":8065:8072   */\n      dup6\n        /* \"#utility.yul\":8061:8084   */\n      sub\n        /* \"#utility.yul\":8057:8089   */\n      slt\n        /* \"#utility.yul\":8054:8173   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8092:8171   */\n      tag_413\n      tag_290\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8054:8173   */\n    tag_412:\n        /* \"#utility.yul\":8212:8213   */\n      0x00\n        /* \"#utility.yul\":8237:8290   */\n      tag_414\n        /* \"#utility.yul\":8282:8289   */\n      dup6\n        /* \"#utility.yul\":8273:8279   */\n      dup3\n        /* \"#utility.yul\":8262:8271   */\n      dup7\n        /* \"#utility.yul\":8258:8280   */\n      add\n        /* \"#utility.yul\":8237:8290   */\n      tag_295\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8227:8290   */\n      swap3\n      pop\n        /* \"#utility.yul\":8183:8300   */\n      pop\n        /* \"#utility.yul\":8339:8341   */\n      0x20\n        /* \"#utility.yul\":8365:8418   */\n      tag_415\n        /* \"#utility.yul\":8410:8417   */\n      dup6\n        /* \"#utility.yul\":8401:8407   */\n      dup3\n        /* \"#utility.yul\":8390:8399   */\n      dup7\n        /* \"#utility.yul\":8386:8408   */\n      add\n        /* \"#utility.yul\":8365:8418   */\n      tag_295\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8355:8418   */\n      swap2\n      pop\n        /* \"#utility.yul\":8310:8428   */\n      pop\n        /* \"#utility.yul\":7961:8435   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8621   */\n    tag_310:\n        /* \"#utility.yul\":8489:8566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8486:8487   */\n      0x00\n        /* \"#utility.yul\":8479:8567   */\n      mstore\n        /* \"#utility.yul\":8586:8590   */\n      0x22\n        /* \"#utility.yul\":8583:8584   */\n      0x04\n        /* \"#utility.yul\":8576:8591   */\n      mstore\n        /* \"#utility.yul\":8610:8614   */\n      0x24\n        /* \"#utility.yul\":8607:8608   */\n      0x00\n        /* \"#utility.yul\":8600:8615   */\n      revert\n        /* \"#utility.yul\":8627:8947   */\n    tag_132:\n        /* \"#utility.yul\":8671:8677   */\n      0x00\n        /* \"#utility.yul\":8708:8709   */\n      0x02\n        /* \"#utility.yul\":8702:8706   */\n      dup3\n        /* \"#utility.yul\":8698:8710   */\n      div\n        /* \"#utility.yul\":8688:8710   */\n      swap1\n      pop\n        /* \"#utility.yul\":8755:8756   */\n      0x01\n        /* \"#utility.yul\":8749:8753   */\n      dup3\n        /* \"#utility.yul\":8745:8757   */\n      and\n        /* \"#utility.yul\":8776:8794   */\n      dup1\n        /* \"#utility.yul\":8766:8847   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":8832:8836   */\n      0x7f\n        /* \"#utility.yul\":8824:8830   */\n      dup3\n        /* \"#utility.yul\":8820:8837   */\n      and\n        /* \"#utility.yul\":8810:8837   */\n      swap2\n      pop\n        /* \"#utility.yul\":8766:8847   */\n    tag_418:\n        /* \"#utility.yul\":8894:8896   */\n      0x20\n        /* \"#utility.yul\":8886:8892   */\n      dup3\n        /* \"#utility.yul\":8883:8897   */\n      lt\n        /* \"#utility.yul\":8863:8881   */\n      dup2\n        /* \"#utility.yul\":8860:8898   */\n      sub\n        /* \"#utility.yul\":8857:8941   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8913:8931   */\n      tag_420\n      tag_310\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8857:8941   */\n    tag_419:\n        /* \"#utility.yul\":8678:8947   */\n      pop\n        /* \"#utility.yul\":8627:8947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8953:9038   */\n    tag_311:\n        /* \"#utility.yul\":8998:9005   */\n      0x00\n        /* \"#utility.yul\":9027:9032   */\n      dup2\n        /* \"#utility.yul\":9016:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":8953:9038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9044:9202   */\n    tag_312:\n        /* \"#utility.yul\":9102:9111   */\n      0x00\n        /* \"#utility.yul\":9135:9196   */\n      tag_423\n        /* \"#utility.yul\":9153:9195   */\n      tag_424\n        /* \"#utility.yul\":9162:9194   */\n      tag_425\n        /* \"#utility.yul\":9188:9193   */\n      dup5\n        /* \"#utility.yul\":9162:9194   */\n      tag_311\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9153:9195   */\n      tag_300\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9135:9196   */\n      tag_282\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9122:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9044:9202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9208:9355   */\n    tag_313:\n        /* \"#utility.yul\":9303:9348   */\n      tag_427\n        /* \"#utility.yul\":9342:9347   */\n      dup2\n        /* \"#utility.yul\":9303:9348   */\n      tag_312\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9298:9301   */\n      dup3\n        /* \"#utility.yul\":9291:9349   */\n      mstore\n        /* \"#utility.yul\":9208:9355   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9361:10168   */\n    tag_166:\n        /* \"#utility.yul\":9610:9614   */\n      0x00\n        /* \"#utility.yul\":9648:9651   */\n      0xc0\n        /* \"#utility.yul\":9637:9646   */\n      dup3\n        /* \"#utility.yul\":9633:9652   */\n      add\n        /* \"#utility.yul\":9625:9652   */\n      swap1\n      pop\n        /* \"#utility.yul\":9662:9733   */\n      tag_429\n        /* \"#utility.yul\":9730:9731   */\n      0x00\n        /* \"#utility.yul\":9719:9728   */\n      dup4\n        /* \"#utility.yul\":9715:9732   */\n      add\n        /* \"#utility.yul\":9706:9712   */\n      dup10\n        /* \"#utility.yul\":9662:9733   */\n      tag_307\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9743:9815   */\n      tag_430\n        /* \"#utility.yul\":9811:9813   */\n      0x20\n        /* \"#utility.yul\":9800:9809   */\n      dup4\n        /* \"#utility.yul\":9796:9814   */\n      add\n        /* \"#utility.yul\":9787:9793   */\n      dup9\n        /* \"#utility.yul\":9743:9815   */\n      tag_283\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9825:9905   */\n      tag_431\n        /* \"#utility.yul\":9901:9903   */\n      0x40\n        /* \"#utility.yul\":9890:9899   */\n      dup4\n        /* \"#utility.yul\":9886:9904   */\n      add\n        /* \"#utility.yul\":9877:9883   */\n      dup8\n        /* \"#utility.yul\":9825:9905   */\n      tag_313\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9915:9995   */\n      tag_432\n        /* \"#utility.yul\":9991:9993   */\n      0x60\n        /* \"#utility.yul\":9980:9989   */\n      dup4\n        /* \"#utility.yul\":9976:9994   */\n      add\n        /* \"#utility.yul\":9967:9973   */\n      dup7\n        /* \"#utility.yul\":9915:9995   */\n      tag_313\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10005:10078   */\n      tag_433\n        /* \"#utility.yul\":10073:10076   */\n      0x80\n        /* \"#utility.yul\":10062:10071   */\n      dup4\n        /* \"#utility.yul\":10058:10077   */\n      add\n        /* \"#utility.yul\":10049:10055   */\n      dup6\n        /* \"#utility.yul\":10005:10078   */\n      tag_307\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10088:10161   */\n      tag_434\n        /* \"#utility.yul\":10156:10159   */\n      0xa0\n        /* \"#utility.yul\":10145:10154   */\n      dup4\n        /* \"#utility.yul\":10141:10160   */\n      add\n        /* \"#utility.yul\":10132:10138   */\n      dup5\n        /* \"#utility.yul\":10088:10161   */\n      tag_283\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9361:10168   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10174:10317   */\n    tag_314:\n        /* \"#utility.yul\":10231:10236   */\n      0x00\n        /* \"#utility.yul\":10262:10268   */\n      dup2\n        /* \"#utility.yul\":10256:10269   */\n      mload\n        /* \"#utility.yul\":10247:10269   */\n      swap1\n      pop\n        /* \"#utility.yul\":10278:10311   */\n      tag_436\n        /* \"#utility.yul\":10305:10310   */\n      dup2\n        /* \"#utility.yul\":10278:10311   */\n      tag_296\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10174:10317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10323:10986   */\n    tag_170:\n        /* \"#utility.yul\":10411:10417   */\n      0x00\n        /* \"#utility.yul\":10419:10425   */\n      0x00\n        /* \"#utility.yul\":10427:10433   */\n      0x00\n        /* \"#utility.yul\":10476:10478   */\n      0x60\n        /* \"#utility.yul\":10464:10473   */\n      dup5\n        /* \"#utility.yul\":10455:10462   */\n      dup7\n        /* \"#utility.yul\":10451:10474   */\n      sub\n        /* \"#utility.yul\":10447:10479   */\n      slt\n        /* \"#utility.yul\":10444:10563   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10482:10561   */\n      tag_439\n      tag_290\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10444:10563   */\n    tag_438:\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10627:10691   */\n      tag_440\n        /* \"#utility.yul\":10683:10690   */\n      dup7\n        /* \"#utility.yul\":10674:10680   */\n      dup3\n        /* \"#utility.yul\":10663:10672   */\n      dup8\n        /* \"#utility.yul\":10659:10681   */\n      add\n        /* \"#utility.yul\":10627:10691   */\n      tag_314\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10617:10691   */\n      swap4\n      pop\n        /* \"#utility.yul\":10573:10701   */\n      pop\n        /* \"#utility.yul\":10740:10742   */\n      0x20\n        /* \"#utility.yul\":10766:10830   */\n      tag_441\n        /* \"#utility.yul\":10822:10829   */\n      dup7\n        /* \"#utility.yul\":10813:10819   */\n      dup3\n        /* \"#utility.yul\":10802:10811   */\n      dup8\n        /* \"#utility.yul\":10798:10820   */\n      add\n        /* \"#utility.yul\":10766:10830   */\n      tag_314\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10756:10830   */\n      swap3\n      pop\n        /* \"#utility.yul\":10711:10840   */\n      pop\n        /* \"#utility.yul\":10879:10881   */\n      0x40\n        /* \"#utility.yul\":10905:10969   */\n      tag_442\n        /* \"#utility.yul\":10961:10968   */\n      dup7\n        /* \"#utility.yul\":10952:10958   */\n      dup3\n        /* \"#utility.yul\":10941:10950   */\n      dup8\n        /* \"#utility.yul\":10937:10959   */\n      add\n        /* \"#utility.yul\":10905:10969   */\n      tag_314\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10895:10969   */\n      swap2\n      pop\n        /* \"#utility.yul\":10850:10979   */\n      pop\n        /* \"#utility.yul\":10323:10986   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10992:11324   */\n    tag_172:\n        /* \"#utility.yul\":11113:11117   */\n      0x00\n        /* \"#utility.yul\":11151:11153   */\n      0x40\n        /* \"#utility.yul\":11140:11149   */\n      dup3\n        /* \"#utility.yul\":11136:11154   */\n      add\n        /* \"#utility.yul\":11128:11154   */\n      swap1\n      pop\n        /* \"#utility.yul\":11164:11235   */\n      tag_444\n        /* \"#utility.yul\":11232:11233   */\n      0x00\n        /* \"#utility.yul\":11221:11230   */\n      dup4\n        /* \"#utility.yul\":11217:11234   */\n      add\n        /* \"#utility.yul\":11208:11214   */\n      dup6\n        /* \"#utility.yul\":11164:11235   */\n      tag_283\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11245:11317   */\n      tag_445\n        /* \"#utility.yul\":11313:11315   */\n      0x20\n        /* \"#utility.yul\":11302:11311   */\n      dup4\n        /* \"#utility.yul\":11298:11316   */\n      add\n        /* \"#utility.yul\":11289:11295   */\n      dup5\n        /* \"#utility.yul\":11245:11317   */\n      tag_283\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10992:11324   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11330:11510   */\n    tag_315:\n        /* \"#utility.yul\":11378:11455   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11375:11376   */\n      0x00\n        /* \"#utility.yul\":11368:11456   */\n      mstore\n        /* \"#utility.yul\":11475:11479   */\n      0x11\n        /* \"#utility.yul\":11472:11473   */\n      0x04\n        /* \"#utility.yul\":11465:11480   */\n      mstore\n        /* \"#utility.yul\":11499:11503   */\n      0x24\n        /* \"#utility.yul\":11496:11497   */\n      0x00\n        /* \"#utility.yul\":11489:11504   */\n      revert\n        /* \"#utility.yul\":11516:11926   */\n    tag_197:\n        /* \"#utility.yul\":11556:11563   */\n      0x00\n        /* \"#utility.yul\":11579:11599   */\n      tag_448\n        /* \"#utility.yul\":11597:11598   */\n      dup3\n        /* \"#utility.yul\":11579:11599   */\n      tag_282\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11574:11599   */\n      swap2\n      pop\n        /* \"#utility.yul\":11613:11633   */\n      tag_449\n        /* \"#utility.yul\":11631:11632   */\n      dup4\n        /* \"#utility.yul\":11613:11633   */\n      tag_282\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11608:11633   */\n      swap3\n      pop\n        /* \"#utility.yul\":11668:11669   */\n      dup3\n        /* \"#utility.yul\":11665:11666   */\n      dup3\n        /* \"#utility.yul\":11661:11670   */\n      mul\n        /* \"#utility.yul\":11690:11720   */\n      tag_450\n        /* \"#utility.yul\":11708:11719   */\n      dup2\n        /* \"#utility.yul\":11690:11720   */\n      tag_282\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11679:11720   */\n      swap2\n      pop\n        /* \"#utility.yul\":11869:11870   */\n      dup3\n        /* \"#utility.yul\":11860:11867   */\n      dup3\n        /* \"#utility.yul\":11856:11871   */\n      div\n        /* \"#utility.yul\":11853:11854   */\n      dup5\n        /* \"#utility.yul\":11850:11872   */\n      eq\n        /* \"#utility.yul\":11830:11831   */\n      dup4\n        /* \"#utility.yul\":11823:11832   */\n      iszero\n        /* \"#utility.yul\":11803:11886   */\n      or\n        /* \"#utility.yul\":11780:11919   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":11899:11917   */\n      tag_452\n      tag_315\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11780:11919   */\n    tag_451:\n        /* \"#utility.yul\":11564:11926   */\n      pop\n        /* \"#utility.yul\":11516:11926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11932:12112   */\n    tag_316:\n        /* \"#utility.yul\":11980:12057   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11977:11978   */\n      0x00\n        /* \"#utility.yul\":11970:12058   */\n      mstore\n        /* \"#utility.yul\":12077:12081   */\n      0x12\n        /* \"#utility.yul\":12074:12075   */\n      0x04\n        /* \"#utility.yul\":12067:12082   */\n      mstore\n        /* \"#utility.yul\":12101:12105   */\n      0x24\n        /* \"#utility.yul\":12098:12099   */\n      0x00\n        /* \"#utility.yul\":12091:12106   */\n      revert\n        /* \"#utility.yul\":12118:12303   */\n    tag_199:\n        /* \"#utility.yul\":12158:12159   */\n      0x00\n        /* \"#utility.yul\":12175:12195   */\n      tag_455\n        /* \"#utility.yul\":12193:12194   */\n      dup3\n        /* \"#utility.yul\":12175:12195   */\n      tag_282\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12170:12195   */\n      swap2\n      pop\n        /* \"#utility.yul\":12209:12229   */\n      tag_456\n        /* \"#utility.yul\":12227:12228   */\n      dup4\n        /* \"#utility.yul\":12209:12229   */\n      tag_282\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12204:12229   */\n      swap3\n      pop\n        /* \"#utility.yul\":12248:12249   */\n      dup3\n        /* \"#utility.yul\":12238:12273   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":12253:12271   */\n      tag_458\n      tag_316\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12238:12273   */\n    tag_457:\n        /* \"#utility.yul\":12295:12296   */\n      dup3\n        /* \"#utility.yul\":12292:12293   */\n      dup3\n        /* \"#utility.yul\":12288:12297   */\n      div\n        /* \"#utility.yul\":12283:12297   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12309:12503   */\n    tag_205:\n        /* \"#utility.yul\":12349:12353   */\n      0x00\n        /* \"#utility.yul\":12369:12389   */\n      tag_460\n        /* \"#utility.yul\":12387:12388   */\n      dup3\n        /* \"#utility.yul\":12369:12389   */\n      tag_282\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12364:12389   */\n      swap2\n      pop\n        /* \"#utility.yul\":12403:12423   */\n      tag_461\n        /* \"#utility.yul\":12421:12422   */\n      dup4\n        /* \"#utility.yul\":12403:12423   */\n      tag_282\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12398:12423   */\n      swap3\n      pop\n        /* \"#utility.yul\":12447:12448   */\n      dup3\n        /* \"#utility.yul\":12444:12445   */\n      dup3\n        /* \"#utility.yul\":12440:12449   */\n      sub\n        /* \"#utility.yul\":12432:12449   */\n      swap1\n      pop\n        /* \"#utility.yul\":12471:12472   */\n      dup2\n        /* \"#utility.yul\":12465:12469   */\n      dup2\n        /* \"#utility.yul\":12462:12473   */\n      gt\n        /* \"#utility.yul\":12459:12496   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":12476:12494   */\n      tag_463\n      tag_315\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12459:12496   */\n    tag_462:\n        /* \"#utility.yul\":12309:12503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12509:12700   */\n    tag_207:\n        /* \"#utility.yul\":12549:12552   */\n      0x00\n        /* \"#utility.yul\":12568:12588   */\n      tag_465\n        /* \"#utility.yul\":12586:12587   */\n      dup3\n        /* \"#utility.yul\":12568:12588   */\n      tag_282\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12563:12588   */\n      swap2\n      pop\n        /* \"#utility.yul\":12602:12622   */\n      tag_466\n        /* \"#utility.yul\":12620:12621   */\n      dup4\n        /* \"#utility.yul\":12602:12622   */\n      tag_282\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12597:12622   */\n      swap3\n      pop\n        /* \"#utility.yul\":12645:12646   */\n      dup3\n        /* \"#utility.yul\":12642:12643   */\n      dup3\n        /* \"#utility.yul\":12638:12647   */\n      add\n        /* \"#utility.yul\":12631:12647   */\n      swap1\n      pop\n        /* \"#utility.yul\":12666:12669   */\n      dup1\n        /* \"#utility.yul\":12663:12664   */\n      dup3\n        /* \"#utility.yul\":12660:12670   */\n      gt\n        /* \"#utility.yul\":12657:12693   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":12673:12691   */\n      tag_468\n      tag_315\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12657:12693   */\n    tag_467:\n        /* \"#utility.yul\":12509:12700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:13148   */\n    tag_246:\n        /* \"#utility.yul\":12855:12859   */\n      0x00\n        /* \"#utility.yul\":12893:12895   */\n      0x60\n        /* \"#utility.yul\":12882:12891   */\n      dup3\n        /* \"#utility.yul\":12878:12896   */\n      add\n        /* \"#utility.yul\":12870:12896   */\n      swap1\n      pop\n        /* \"#utility.yul\":12906:12977   */\n      tag_470\n        /* \"#utility.yul\":12974:12975   */\n      0x00\n        /* \"#utility.yul\":12963:12972   */\n      dup4\n        /* \"#utility.yul\":12959:12976   */\n      add\n        /* \"#utility.yul\":12950:12956   */\n      dup7\n        /* \"#utility.yul\":12906:12977   */\n      tag_307\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12987:13059   */\n      tag_471\n        /* \"#utility.yul\":13055:13057   */\n      0x20\n        /* \"#utility.yul\":13044:13053   */\n      dup4\n        /* \"#utility.yul\":13040:13058   */\n      add\n        /* \"#utility.yul\":13031:13037   */\n      dup6\n        /* \"#utility.yul\":12987:13059   */\n      tag_283\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13069:13141   */\n      tag_472\n        /* \"#utility.yul\":13137:13139   */\n      0x40\n        /* \"#utility.yul\":13126:13135   */\n      dup4\n        /* \"#utility.yul\":13122:13140   */\n      add\n        /* \"#utility.yul\":13113:13119   */\n      dup5\n        /* \"#utility.yul\":13069:13141   */\n      tag_283\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12706:13148   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d2de35fc274d5b4b159b13db6189775216a40dcbf5a87bc43b901f5bea78b0664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1519": {
									"entryPoint": null,
									"id": 1519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1208,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1005,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1341,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1200,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14200:10",
										"nodeType": "YulBlock",
										"src": "0:14200:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:77:10",
													"nodeType": "YulBlock",
													"src": "1672:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:10"
																},
																"nativeSrc": "1683:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:10"
															},
															"nativeSrc": "1683:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:10"
																		},
																		"nativeSrc": "1722:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:10"
																},
																"nativeSrc": "1715:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:10"
															},
															"nativeSrc": "1715:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:139:10"
											},
											{
												"body": {
													"nativeSrc": "1850:339:10",
													"nodeType": "YulBlock",
													"src": "1850:339:10",
													"statements": [
														{
															"nativeSrc": "1860:75:10",
															"nodeType": "YulAssignment",
															"src": "1860:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:10"
																		},
																		"nativeSrc": "1885:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:10"
																},
																"nativeSrc": "1869:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:10"
																},
																"nativeSrc": "1944:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:10"
															},
															"nativeSrc": "1944:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:10"
														},
														{
															"nativeSrc": "1974:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:10"
																},
																"nativeSrc": "1985:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:10",
																"nodeType": "YulBlock",
																"src": "2039:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:10"
																			},
																			"nativeSrc": "2041:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:10"
																		},
																		"nativeSrc": "2041:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:10"
																		},
																		"nativeSrc": "2016:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:10"
																},
																"nativeSrc": "2013:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:10"
															},
															"nativeSrc": "2010:112:10",
															"nodeType": "YulIf",
															"src": "2010:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:10"
																},
																"nativeSrc": "2131:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:10"
															},
															"nativeSrc": "2131:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:10",
														"nodeType": "YulTypedName",
														"src": "1823:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:10",
														"nodeType": "YulTypedName",
														"src": "1828:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:10",
														"nodeType": "YulTypedName",
														"src": "1836:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:10",
														"nodeType": "YulTypedName",
														"src": "1844:5:10",
														"type": ""
													}
												],
												"src": "1755:434:10"
											},
											{
												"body": {
													"nativeSrc": "2282:282:10",
													"nodeType": "YulBlock",
													"src": "2282:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:10",
																"nodeType": "YulBlock",
																"src": "2331:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:10"
																			},
																			"nativeSrc": "2333:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:10"
																		},
																		"nativeSrc": "2333:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:10"
																				},
																				"nativeSrc": "2306:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:10"
																		},
																		"nativeSrc": "2302:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:10"
																},
																"nativeSrc": "2295:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:10"
															},
															"nativeSrc": "2292:122:10",
															"nodeType": "YulIf",
															"src": "2292:122:10"
														},
														{
															"nativeSrc": "2423:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:10"
																},
																"nativeSrc": "2437:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:10",
															"nodeType": "YulAssignment",
															"src": "2459:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:10"
																		},
																		"nativeSrc": "2527:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:10"
																},
																"nativeSrc": "2468:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:10",
														"nodeType": "YulTypedName",
														"src": "2260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:10",
														"nodeType": "YulTypedName",
														"src": "2268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:10",
														"nodeType": "YulTypedName",
														"src": "2276:5:10",
														"type": ""
													}
												],
												"src": "2209:355:10"
											},
											{
												"body": {
													"nativeSrc": "2615:81:10",
													"nodeType": "YulBlock",
													"src": "2615:81:10",
													"statements": [
														{
															"nativeSrc": "2625:65:10",
															"nodeType": "YulAssignment",
															"src": "2625:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nativeSrc": "2636:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:10",
														"nodeType": "YulTypedName",
														"src": "2597:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:10",
														"nodeType": "YulTypedName",
														"src": "2607:7:10",
														"type": ""
													}
												],
												"src": "2570:126:10"
											},
											{
												"body": {
													"nativeSrc": "2747:51:10",
													"nodeType": "YulBlock",
													"src": "2747:51:10",
													"statements": [
														{
															"nativeSrc": "2757:35:10",
															"nodeType": "YulAssignment",
															"src": "2757:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:10"
																},
																"nativeSrc": "2768:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:10",
														"nodeType": "YulTypedName",
														"src": "2729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:10",
														"nodeType": "YulTypedName",
														"src": "2739:7:10",
														"type": ""
													}
												],
												"src": "2702:96:10"
											},
											{
												"body": {
													"nativeSrc": "2847:79:10",
													"nodeType": "YulBlock",
													"src": "2847:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:10",
																"nodeType": "YulBlock",
																"src": "2904:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:10"
																			},
																			"nativeSrc": "2906:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:10"
																		},
																		"nativeSrc": "2906:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:10"
																				},
																				"nativeSrc": "2877:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:10"
																		},
																		"nativeSrc": "2867:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:10"
																},
																"nativeSrc": "2860:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:10"
															},
															"nativeSrc": "2857:63:10",
															"nodeType": "YulIf",
															"src": "2857:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:10",
														"nodeType": "YulTypedName",
														"src": "2840:5:10",
														"type": ""
													}
												],
												"src": "2804:122:10"
											},
											{
												"body": {
													"nativeSrc": "2995:80:10",
													"nodeType": "YulBlock",
													"src": "2995:80:10",
													"statements": [
														{
															"nativeSrc": "3005:22:10",
															"nodeType": "YulAssignment",
															"src": "3005:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:10"
																},
																"nativeSrc": "3014:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:10"
																},
																"nativeSrc": "3036:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:10"
															},
															"nativeSrc": "3036:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:10",
														"nodeType": "YulTypedName",
														"src": "2973:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:10",
														"nodeType": "YulTypedName",
														"src": "2981:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:10",
														"nodeType": "YulTypedName",
														"src": "2989:5:10",
														"type": ""
													}
												],
												"src": "2932:143:10"
											},
											{
												"body": {
													"nativeSrc": "3212:878:10",
													"nodeType": "YulBlock",
													"src": "3212:878:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:10",
																"nodeType": "YulBlock",
																"src": "3258:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:10"
																			},
																			"nativeSrc": "3260:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:10"
																		},
																		"nativeSrc": "3260:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:10"
																		},
																		"nativeSrc": "3229:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:10"
																},
																"nativeSrc": "3225:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:10"
															},
															"nativeSrc": "3222:119:10",
															"nodeType": "YulIf",
															"src": "3222:119:10"
														},
														{
															"nativeSrc": "3351:291:10",
															"nodeType": "YulBlock",
															"src": "3351:291:10",
															"statements": [
																{
																	"nativeSrc": "3366:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:10"
																				},
																				"nativeSrc": "3386:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:10"
																		},
																		"nativeSrc": "3380:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:10",
																		"nodeType": "YulBlock",
																		"src": "3451:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:10"
																					},
																					"nativeSrc": "3453:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:10"
																				},
																				"nativeSrc": "3453:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:10"
																		},
																		"nativeSrc": "3420:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:10"
																	},
																	"nativeSrc": "3417:117:10",
																	"nodeType": "YulIf",
																	"src": "3417:117:10"
																},
																{
																	"nativeSrc": "3548:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:10"
																				},
																				"nativeSrc": "3600:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:10"
																		},
																		"nativeSrc": "3558:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:10",
															"nodeType": "YulBlock",
															"src": "3652:292:10",
															"statements": [
																{
																	"nativeSrc": "3667:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:10"
																				},
																				"nativeSrc": "3687:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:10"
																		},
																		"nativeSrc": "3681:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:10",
																		"nodeType": "YulBlock",
																		"src": "3753:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:10"
																					},
																					"nativeSrc": "3755:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:10"
																				},
																				"nativeSrc": "3755:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:10"
																		},
																		"nativeSrc": "3722:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:10"
																	},
																	"nativeSrc": "3719:117:10",
																	"nodeType": "YulIf",
																	"src": "3719:117:10"
																},
																{
																	"nativeSrc": "3850:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:10"
																				},
																				"nativeSrc": "3902:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:10"
																		},
																		"nativeSrc": "3860:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:10",
															"nodeType": "YulBlock",
															"src": "3954:129:10",
															"statements": [
																{
																	"nativeSrc": "3969:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:10",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:10"
																				},
																				"nativeSrc": "4041:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:10"
																		},
																		"nativeSrc": "4009:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:10",
														"nodeType": "YulTypedName",
														"src": "3166:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:10",
														"nodeType": "YulTypedName",
														"src": "3177:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:10",
														"nodeType": "YulTypedName",
														"src": "3189:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:10",
														"nodeType": "YulTypedName",
														"src": "3197:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:10",
														"nodeType": "YulTypedName",
														"src": "3205:6:10",
														"type": ""
													}
												],
												"src": "3081:1009:10"
											},
											{
												"body": {
													"nativeSrc": "4155:40:10",
													"nodeType": "YulBlock",
													"src": "4155:40:10",
													"statements": [
														{
															"nativeSrc": "4166:22:10",
															"nodeType": "YulAssignment",
															"src": "4166:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:10"
																},
																"nativeSrc": "4176:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:10",
														"nodeType": "YulTypedName",
														"src": "4138:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:10",
														"nodeType": "YulTypedName",
														"src": "4148:6:10",
														"type": ""
													}
												],
												"src": "4096:99:10"
											},
											{
												"body": {
													"nativeSrc": "4229:152:10",
													"nodeType": "YulBlock",
													"src": "4229:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:10"
																},
																"nativeSrc": "4239:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:10"
															},
															"nativeSrc": "4239:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:10"
																},
																"nativeSrc": "4336:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:10"
															},
															"nativeSrc": "4336:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:10"
																},
																"nativeSrc": "4360:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:10"
															},
															"nativeSrc": "4360:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:10"
											},
											{
												"body": {
													"nativeSrc": "4438:269:10",
													"nodeType": "YulBlock",
													"src": "4438:269:10",
													"statements": [
														{
															"nativeSrc": "4448:22:10",
															"nodeType": "YulAssignment",
															"src": "4448:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:10"
																},
																"nativeSrc": "4458:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:10"
																}
															]
														},
														{
															"nativeSrc": "4479:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:10"
																},
																"nativeSrc": "4505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:10",
																"nodeType": "YulBlock",
																"src": "4556:51:10",
																"statements": [
																	{
																		"nativeSrc": "4570:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:10"
																			},
																			"nativeSrc": "4580:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:10"
																},
																"nativeSrc": "4529:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:10"
															},
															"nativeSrc": "4526:81:10",
															"nodeType": "YulIf",
															"src": "4526:81:10"
														},
														{
															"body": {
																"nativeSrc": "4659:42:10",
																"nodeType": "YulBlock",
																"src": "4659:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:10"
																			},
																			"nativeSrc": "4673:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:10"
																		},
																		"nativeSrc": "4673:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:10"
																		},
																		"nativeSrc": "4643:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:10"
																},
																"nativeSrc": "4620:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:10"
															},
															"nativeSrc": "4617:84:10",
															"nodeType": "YulIf",
															"src": "4617:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:10",
														"nodeType": "YulTypedName",
														"src": "4422:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:10",
														"nodeType": "YulTypedName",
														"src": "4431:6:10",
														"type": ""
													}
												],
												"src": "4387:320:10"
											},
											{
												"body": {
													"nativeSrc": "4767:87:10",
													"nodeType": "YulBlock",
													"src": "4767:87:10",
													"statements": [
														{
															"nativeSrc": "4777:11:10",
															"nodeType": "YulAssignment",
															"src": "4777:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:10",
																"nodeType": "YulIdentifier",
																"src": "4785:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:10"
																},
																"nativeSrc": "4798:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:10"
															},
															"nativeSrc": "4798:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:10"
														},
														{
															"nativeSrc": "4821:26:10",
															"nodeType": "YulAssignment",
															"src": "4821:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:10"
																},
																"nativeSrc": "4829:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:10",
														"nodeType": "YulTypedName",
														"src": "4754:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:10",
														"nodeType": "YulTypedName",
														"src": "4762:4:10",
														"type": ""
													}
												],
												"src": "4713:141:10"
											},
											{
												"body": {
													"nativeSrc": "4904:49:10",
													"nodeType": "YulBlock",
													"src": "4904:49:10",
													"statements": [
														{
															"nativeSrc": "4914:33:10",
															"nodeType": "YulAssignment",
															"src": "4914:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:10"
																		},
																		"nativeSrc": "4928:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:10"
																},
																"nativeSrc": "4924:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:10",
														"nodeType": "YulTypedName",
														"src": "4887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:10",
														"nodeType": "YulTypedName",
														"src": "4897:6:10",
														"type": ""
													}
												],
												"src": "4860:93:10"
											},
											{
												"body": {
													"nativeSrc": "5012:54:10",
													"nodeType": "YulBlock",
													"src": "5012:54:10",
													"statements": [
														{
															"nativeSrc": "5022:37:10",
															"nodeType": "YulAssignment",
															"src": "5022:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:10"
																},
																"nativeSrc": "5043:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:10",
														"nodeType": "YulTypedName",
														"src": "4987:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:10",
														"nodeType": "YulTypedName",
														"src": "4993:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:10",
														"nodeType": "YulTypedName",
														"src": "5003:8:10",
														"type": ""
													}
												],
												"src": "4959:107:10"
											},
											{
												"body": {
													"nativeSrc": "5148:317:10",
													"nodeType": "YulBlock",
													"src": "5148:317:10",
													"statements": [
														{
															"nativeSrc": "5158:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:10"
																},
																"nativeSrc": "5175:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:10",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:10"
																},
																"nativeSrc": "5214:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:10",
															"nodeType": "YulAssignment",
															"src": "5320:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:10"
																},
																"nativeSrc": "5332:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:10"
																}
															]
														},
														{
															"nativeSrc": "5380:30:10",
															"nodeType": "YulAssignment",
															"src": "5380:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:10"
																		},
																		"nativeSrc": "5400:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:10"
																},
																"nativeSrc": "5389:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:10"
																}
															]
														},
														{
															"nativeSrc": "5419:40:10",
															"nodeType": "YulAssignment",
															"src": "5419:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:10"
																		},
																		"nativeSrc": "5439:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:10"
																},
																"nativeSrc": "5429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:10",
														"nodeType": "YulTypedName",
														"src": "5109:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:10",
														"nodeType": "YulTypedName",
														"src": "5116:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:10",
														"nodeType": "YulTypedName",
														"src": "5128:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:10",
														"nodeType": "YulTypedName",
														"src": "5141:6:10",
														"type": ""
													}
												],
												"src": "5072:393:10"
											},
											{
												"body": {
													"nativeSrc": "5516:32:10",
													"nodeType": "YulBlock",
													"src": "5516:32:10",
													"statements": [
														{
															"nativeSrc": "5526:16:10",
															"nodeType": "YulAssignment",
															"src": "5526:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:10",
																"nodeType": "YulIdentifier",
																"src": "5537:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:10",
														"nodeType": "YulTypedName",
														"src": "5498:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:10",
														"nodeType": "YulTypedName",
														"src": "5508:7:10",
														"type": ""
													}
												],
												"src": "5471:77:10"
											},
											{
												"body": {
													"nativeSrc": "5586:28:10",
													"nodeType": "YulBlock",
													"src": "5586:28:10",
													"statements": [
														{
															"nativeSrc": "5596:12:10",
															"nodeType": "YulAssignment",
															"src": "5596:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:10",
																"nodeType": "YulIdentifier",
																"src": "5603:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:10",
														"nodeType": "YulTypedName",
														"src": "5572:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:10",
														"nodeType": "YulTypedName",
														"src": "5582:3:10",
														"type": ""
													}
												],
												"src": "5554:60:10"
											},
											{
												"body": {
													"nativeSrc": "5680:82:10",
													"nodeType": "YulBlock",
													"src": "5680:82:10",
													"statements": [
														{
															"nativeSrc": "5690:66:10",
															"nodeType": "YulAssignment",
															"src": "5690:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:10"
																				},
																				"nativeSrc": "5730:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:10"
																		},
																		"nativeSrc": "5721:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:10"
																},
																"nativeSrc": "5703:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:10",
														"nodeType": "YulTypedName",
														"src": "5660:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:10",
														"nodeType": "YulTypedName",
														"src": "5670:9:10",
														"type": ""
													}
												],
												"src": "5620:142:10"
											},
											{
												"body": {
													"nativeSrc": "5815:28:10",
													"nodeType": "YulBlock",
													"src": "5815:28:10",
													"statements": [
														{
															"nativeSrc": "5825:12:10",
															"nodeType": "YulAssignment",
															"src": "5825:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:10",
																"nodeType": "YulIdentifier",
																"src": "5832:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:10",
														"nodeType": "YulTypedName",
														"src": "5801:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:10",
														"nodeType": "YulTypedName",
														"src": "5811:3:10",
														"type": ""
													}
												],
												"src": "5768:75:10"
											},
											{
												"body": {
													"nativeSrc": "5925:193:10",
													"nodeType": "YulBlock",
													"src": "5925:193:10",
													"statements": [
														{
															"nativeSrc": "5935:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:10"
																},
																"nativeSrc": "5959:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:10",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:10"
																				},
																				"nativeSrc": "6048:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:10"
																				},
																				"nativeSrc": "6069:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:10"
																		},
																		"nativeSrc": "6020:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:10"
																},
																"nativeSrc": "6007:105:10",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:10"
															},
															"nativeSrc": "6007:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:10",
														"nodeType": "YulTypedName",
														"src": "5902:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:10",
														"nodeType": "YulTypedName",
														"src": "5908:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:10",
														"nodeType": "YulTypedName",
														"src": "5916:7:10",
														"type": ""
													}
												],
												"src": "5849:269:10"
											},
											{
												"body": {
													"nativeSrc": "6173:24:10",
													"nodeType": "YulBlock",
													"src": "6173:24:10",
													"statements": [
														{
															"nativeSrc": "6183:8:10",
															"nodeType": "YulAssignment",
															"src": "6183:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:10",
																"nodeType": "YulLiteral",
																"src": "6190:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:10",
														"nodeType": "YulTypedName",
														"src": "6169:3:10",
														"type": ""
													}
												],
												"src": "6124:73:10"
											},
											{
												"body": {
													"nativeSrc": "6256:136:10",
													"nodeType": "YulBlock",
													"src": "6256:136:10",
													"statements": [
														{
															"nativeSrc": "6266:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:10"
																},
																"nativeSrc": "6280:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:10"
																},
																"nativeSrc": "6321:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:10"
															},
															"nativeSrc": "6321:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:10",
														"nodeType": "YulTypedName",
														"src": "6242:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:10",
														"nodeType": "YulTypedName",
														"src": "6248:6:10",
														"type": ""
													}
												],
												"src": "6203:189:10"
											},
											{
												"body": {
													"nativeSrc": "6448:136:10",
													"nodeType": "YulBlock",
													"src": "6448:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:10",
																"nodeType": "YulBlock",
																"src": "6515:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:10"
																			},
																			"nativeSrc": "6529:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:10"
																		},
																		"nativeSrc": "6529:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:10"
																},
																"nativeSrc": "6465:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:10"
															},
															"nativeSrc": "6458:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:10",
																"nodeType": "YulBlock",
																"src": "6480:26:10",
																"statements": [
																	{
																		"nativeSrc": "6482:22:10",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:10"
																			},
																			"nativeSrc": "6491:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:10",
																"nodeType": "YulBlock",
																"src": "6462:2:10",
																"statements": []
															},
															"src": "6458:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:10",
														"nodeType": "YulTypedName",
														"src": "6436:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:10",
														"nodeType": "YulTypedName",
														"src": "6443:3:10",
														"type": ""
													}
												],
												"src": "6398:186:10"
											},
											{
												"body": {
													"nativeSrc": "6669:464:10",
													"nodeType": "YulBlock",
													"src": "6669:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:10",
																"nodeType": "YulBlock",
																"src": "6695:431:10",
																"statements": [
																	{
																		"nativeSrc": "6709:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:10"
																			},
																			"nativeSrc": "6725:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:10"
																					},
																					"nativeSrc": "6809:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:10"
																			},
																			"nativeSrc": "6795:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:10",
																			"nodeType": "YulBlock",
																			"src": "6996:27:10",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:10",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:10",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:10"
																			},
																			"nativeSrc": "6977:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:10"
																		},
																		"nativeSrc": "6974:49:10",
																		"nodeType": "YulIf",
																		"src": "6974:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:10"
																							},
																							"nativeSrc": "7092:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:10"
																					},
																					"nativeSrc": "7078:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:10"
																			},
																			"nativeSrc": "7036:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:10"
																		},
																		"nativeSrc": "7036:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:10"
																},
																"nativeSrc": "6683:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:10"
															},
															"nativeSrc": "6680:446:10",
															"nodeType": "YulIf",
															"src": "6680:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:10",
														"nodeType": "YulTypedName",
														"src": "6645:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:10",
														"nodeType": "YulTypedName",
														"src": "6652:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:10",
														"nodeType": "YulTypedName",
														"src": "6657:10:10",
														"type": ""
													}
												],
												"src": "6590:543:10"
											},
											{
												"body": {
													"nativeSrc": "7202:54:10",
													"nodeType": "YulBlock",
													"src": "7202:54:10",
													"statements": [
														{
															"nativeSrc": "7212:37:10",
															"nodeType": "YulAssignment",
															"src": "7212:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:10"
																},
																"nativeSrc": "7233:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:10",
														"nodeType": "YulTypedName",
														"src": "7177:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:10",
														"nodeType": "YulTypedName",
														"src": "7183:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:10",
														"nodeType": "YulTypedName",
														"src": "7193:8:10",
														"type": ""
													}
												],
												"src": "7139:117:10"
											},
											{
												"body": {
													"nativeSrc": "7313:118:10",
													"nodeType": "YulBlock",
													"src": "7313:118:10",
													"statements": [
														{
															"nativeSrc": "7323:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:10"
																				},
																				"nativeSrc": "7368:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:10"
																				},
																				"nativeSrc": "7383:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:10"
																		},
																		"nativeSrc": "7339:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:10"
																},
																"nativeSrc": "7335:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:10",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:10",
															"nodeType": "YulAssignment",
															"src": "7400:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:10"
																},
																"nativeSrc": "7410:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:10",
														"nodeType": "YulTypedName",
														"src": "7290:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:10",
														"nodeType": "YulTypedName",
														"src": "7296:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:10",
														"nodeType": "YulTypedName",
														"src": "7306:6:10",
														"type": ""
													}
												],
												"src": "7262:169:10"
											},
											{
												"body": {
													"nativeSrc": "7517:214:10",
													"nodeType": "YulBlock",
													"src": "7517:214:10",
													"statements": [
														{
															"nativeSrc": "7650:37:10",
															"nodeType": "YulAssignment",
															"src": "7650:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:10"
																},
																"nativeSrc": "7658:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:10"
																}
															]
														},
														{
															"nativeSrc": "7696:29:10",
															"nodeType": "YulAssignment",
															"src": "7696:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:10"
																		},
																		"nativeSrc": "7713:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:10"
																},
																"nativeSrc": "7704:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:10",
														"nodeType": "YulTypedName",
														"src": "7498:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:10",
														"nodeType": "YulTypedName",
														"src": "7504:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:10",
														"nodeType": "YulTypedName",
														"src": "7512:4:10",
														"type": ""
													}
												],
												"src": "7436:295:10"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:10",
													"nodeType": "YulBlock",
													"src": "7828:1303:10",
													"statements": [
														{
															"nativeSrc": "7839:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:10"
																},
																"nativeSrc": "7853:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:10",
																"nodeType": "YulBlock",
																"src": "7975:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:10"
																			},
																			"nativeSrc": "7977:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:10"
																		},
																		"nativeSrc": "7977:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:10"
																},
																"nativeSrc": "7944:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:10"
															},
															"nativeSrc": "7941:56:10",
															"nodeType": "YulIf",
															"src": "7941:56:10"
														},
														{
															"nativeSrc": "8007:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:10"
																		},
																		"nativeSrc": "8047:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:10"
																},
																"nativeSrc": "8021:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:10"
																},
																"nativeSrc": "8106:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:10"
															},
															"nativeSrc": "8106:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:10"
														},
														{
															"nativeSrc": "8183:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:10",
																"nodeType": "YulLiteral",
																"src": "8200:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:10",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:10",
															"nodeType": "YulAssignment",
															"src": "8211:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:10",
																"nodeType": "YulLiteral",
																"src": "8224:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:10",
																		"nodeType": "YulBlock",
																		"src": "8275:611:10",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:10",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:10"
																							},
																							"nativeSrc": "8316:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:10"
																					},
																					"nativeSrc": "8304:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:10",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:10"
																					},
																					"nativeSrc": "8354:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:10",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:10",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:10",
																					"nodeType": "YulBlock",
																					"src": "8472:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:10"
																												},
																												"nativeSrc": "8511:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:10"
																										},
																										"nativeSrc": "8505:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:10"
																								},
																								"nativeSrc": "8490:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:10"
																							},
																							"nativeSrc": "8490:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:10"
																						},
																						{
																							"nativeSrc": "8549:24:10",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:10"
																								},
																								"nativeSrc": "8559:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:10"
																								},
																								"nativeSrc": "8603:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:10"
																					},
																					"nativeSrc": "8435:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:10"
																				},
																				"nativeSrc": "8427:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:10",
																					"nodeType": "YulBlock",
																					"src": "8450:21:10",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:10",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:10",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:10"
																								},
																								"nativeSrc": "8457:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:10",
																					"nodeType": "YulBlock",
																					"src": "8431:3:10",
																					"statements": []
																				},
																				"src": "8427:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:10",
																					"nodeType": "YulBlock",
																					"src": "8671:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:10"
																										},
																										"nativeSrc": "8712:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:10"
																								},
																								"nativeSrc": "8706:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:10"
																												},
																												"nativeSrc": "8794:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:10"
																										},
																										"nativeSrc": "8764:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:10"
																								},
																								"nativeSrc": "8749:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:10"
																							},
																							"nativeSrc": "8749:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:10"
																					},
																					"nativeSrc": "8651:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:10"
																				},
																				"nativeSrc": "8648:179:10",
																				"nodeType": "YulIf",
																				"src": "8648:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:10",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:10"
																									},
																									"nativeSrc": "8857:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:10",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:10"
																							},
																							"nativeSrc": "8853:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:10"
																					},
																					"nativeSrc": "8840:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:10"
																				},
																				"nativeSrc": "8840:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:10"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:10",
																	"nodeType": "YulCase",
																	"src": "8268:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:10",
																		"nodeType": "YulBlock",
																		"src": "8903:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:10",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:10",
																					"nodeType": "YulBlock",
																					"src": "8954:67:10",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:10",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:10"
																										},
																										"nativeSrc": "8987:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:10"
																								},
																								"nativeSrc": "8981:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:10"
																				},
																				"nativeSrc": "8944:77:10",
																				"nodeType": "YulIf",
																				"src": "8944:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:10"
																							},
																							"nativeSrc": "9047:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:10"
																					},
																					"nativeSrc": "9034:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:10"
																				},
																				"nativeSrc": "9034:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:10",
																	"nodeType": "YulCase",
																	"src": "8895:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:10"
																},
																"nativeSrc": "8245:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:10"
															},
															"nativeSrc": "8238:887:10",
															"nodeType": "YulSwitch",
															"src": "8238:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:10",
														"nodeType": "YulTypedName",
														"src": "7817:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:10",
														"nodeType": "YulTypedName",
														"src": "7823:3:10",
														"type": ""
													}
												],
												"src": "7736:1395:10"
											},
											{
												"body": {
													"nativeSrc": "9202:53:10",
													"nodeType": "YulBlock",
													"src": "9202:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9242:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9242:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9224:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9224:17:10"
																		},
																		"nativeSrc": "9224:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:10"
																},
																"nativeSrc": "9212:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9212:37:10"
															},
															"nativeSrc": "9212:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9212:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9137:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9190:5:10",
														"nodeType": "YulTypedName",
														"src": "9190:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9197:3:10",
														"nodeType": "YulTypedName",
														"src": "9197:3:10",
														"type": ""
													}
												],
												"src": "9137:118:10"
											},
											{
												"body": {
													"nativeSrc": "9359:124:10",
													"nodeType": "YulBlock",
													"src": "9359:124:10",
													"statements": [
														{
															"nativeSrc": "9369:26:10",
															"nodeType": "YulAssignment",
															"src": "9369:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9381:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9377:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:10"
																},
																"nativeSrc": "9377:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9377:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9473:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:10"
																		},
																		"nativeSrc": "9458:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9405:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9405:43:10"
																},
																"nativeSrc": "9405:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9405:71:10"
															},
															"nativeSrc": "9405:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9405:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9261:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9331:9:10",
														"nodeType": "YulTypedName",
														"src": "9331:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9343:6:10",
														"nodeType": "YulTypedName",
														"src": "9343:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9354:4:10",
														"nodeType": "YulTypedName",
														"src": "9354:4:10",
														"type": ""
													}
												],
												"src": "9261:222:10"
											},
											{
												"body": {
													"nativeSrc": "9566:274:10",
													"nodeType": "YulBlock",
													"src": "9566:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9612:83:10",
																"nodeType": "YulBlock",
																"src": "9612:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9614:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9614:77:10"
																			},
																			"nativeSrc": "9614:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9614:79:10"
																		},
																		"nativeSrc": "9614:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9614:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9587:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9587:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9596:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9596:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9583:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:10"
																		},
																		"nativeSrc": "9583:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9583:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9608:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9579:3:10"
																},
																"nativeSrc": "9579:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9579:32:10"
															},
															"nativeSrc": "9576:119:10",
															"nodeType": "YulIf",
															"src": "9576:119:10"
														},
														{
															"nativeSrc": "9705:128:10",
															"nodeType": "YulBlock",
															"src": "9705:128:10",
															"statements": [
																{
																	"nativeSrc": "9720:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9720:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9734:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9734:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9724:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9724:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9749:74:10",
																	"nodeType": "YulAssignment",
																	"src": "9749:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9795:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9795:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9806:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9806:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9791:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9791:3:10"
																				},
																				"nativeSrc": "9791:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9791:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9815:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9815:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "9759:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "9759:31:10"
																		},
																		"nativeSrc": "9759:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9759:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9749:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9749:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "9489:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9536:9:10",
														"nodeType": "YulTypedName",
														"src": "9536:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9547:7:10",
														"nodeType": "YulTypedName",
														"src": "9547:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9559:6:10",
														"nodeType": "YulTypedName",
														"src": "9559:6:10",
														"type": ""
													}
												],
												"src": "9489:351:10"
											},
											{
												"body": {
													"nativeSrc": "9972:206:10",
													"nodeType": "YulBlock",
													"src": "9972:206:10",
													"statements": [
														{
															"nativeSrc": "9982:26:10",
															"nodeType": "YulAssignment",
															"src": "9982:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9994:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9994:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10005:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10005:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:10"
																},
																"nativeSrc": "9990:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9990:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9982:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10062:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10062:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10075:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10075:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10086:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10086:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10071:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:10"
																		},
																		"nativeSrc": "10071:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10071:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10018:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10018:43:10"
																},
																"nativeSrc": "10018:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10018:71:10"
															},
															"nativeSrc": "10018:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10018:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10143:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10143:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10156:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10167:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10167:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10152:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:10"
																		},
																		"nativeSrc": "10152:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10152:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10099:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10099:43:10"
																},
																"nativeSrc": "10099:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10099:72:10"
															},
															"nativeSrc": "10099:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10099:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9846:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9936:9:10",
														"nodeType": "YulTypedName",
														"src": "9936:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9948:6:10",
														"nodeType": "YulTypedName",
														"src": "9948:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9956:6:10",
														"nodeType": "YulTypedName",
														"src": "9956:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9967:4:10",
														"nodeType": "YulTypedName",
														"src": "9967:4:10",
														"type": ""
													}
												],
												"src": "9846:332:10"
											},
											{
												"body": {
													"nativeSrc": "10212:152:10",
													"nodeType": "YulBlock",
													"src": "10212:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10229:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10229:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10232:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10232:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10222:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10222:6:10"
																},
																"nativeSrc": "10222:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10222:88:10"
															},
															"nativeSrc": "10222:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10222:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10326:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10326:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10329:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10329:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10319:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10319:6:10"
																},
																"nativeSrc": "10319:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10319:15:10"
															},
															"nativeSrc": "10319:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10319:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10350:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10350:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10353:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10353:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:10"
																},
																"nativeSrc": "10343:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10343:15:10"
															},
															"nativeSrc": "10343:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10343:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10184:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10184:180:10"
											},
											{
												"body": {
													"nativeSrc": "10421:51:10",
													"nodeType": "YulBlock",
													"src": "10421:51:10",
													"statements": [
														{
															"nativeSrc": "10431:34:10",
															"nodeType": "YulAssignment",
															"src": "10431:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10456:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10456:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10459:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "10452:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:10"
																},
																"nativeSrc": "10452:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10452:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10431:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "10431:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "10370:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10402:5:10",
														"nodeType": "YulTypedName",
														"src": "10402:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10412:8:10",
														"nodeType": "YulTypedName",
														"src": "10412:8:10",
														"type": ""
													}
												],
												"src": "10370:102:10"
											},
											{
												"body": {
													"nativeSrc": "10551:775:10",
													"nodeType": "YulBlock",
													"src": "10551:775:10",
													"statements": [
														{
															"nativeSrc": "10561:15:10",
															"nodeType": "YulAssignment",
															"src": "10561:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "10570:6:10",
																"nodeType": "YulIdentifier",
																"src": "10570:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10561:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10561:5:10"
																}
															]
														},
														{
															"nativeSrc": "10585:14:10",
															"nodeType": "YulAssignment",
															"src": "10585:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "10594:5:10",
																"nodeType": "YulIdentifier",
																"src": "10594:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10585:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10585:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10643:677:10",
																"nodeType": "YulBlock",
																"src": "10643:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10731:22:10",
																			"nodeType": "YulBlock",
																			"src": "10731:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10733:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "10733:16:10"
																						},
																						"nativeSrc": "10733:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10733:18:10"
																					},
																					"nativeSrc": "10733:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "10733:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10709:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "10709:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10719:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10719:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10724:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "10724:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10715:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "10715:3:10"
																					},
																					"nativeSrc": "10715:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10715:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10706:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "10706:2:10"
																			},
																			"nativeSrc": "10706:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10706:24:10"
																		},
																		"nativeSrc": "10703:50:10",
																		"nodeType": "YulIf",
																		"src": "10703:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "10798:419:10",
																			"nodeType": "YulBlock",
																			"src": "10798:419:10",
																			"statements": [
																				{
																					"nativeSrc": "11178:25:10",
																					"nodeType": "YulAssignment",
																					"src": "11178:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "11191:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "11191:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "11198:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "11198:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "11187:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11187:3:10"
																						},
																						"nativeSrc": "11187:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11187:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "11178:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "11178:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10773:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "10773:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10783:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10783:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10769:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10769:3:10"
																			},
																			"nativeSrc": "10769:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10769:16:10"
																		},
																		"nativeSrc": "10766:451:10",
																		"nodeType": "YulIf",
																		"src": "10766:451:10"
																	},
																	{
																		"nativeSrc": "11230:23:10",
																		"nodeType": "YulAssignment",
																		"src": "11230:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11242:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "11242:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "11248:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "11248:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "11238:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11238:3:10"
																			},
																			"nativeSrc": "11238:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11238:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "11230:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11230:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11266:44:10",
																		"nodeType": "YulAssignment",
																		"src": "11266:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11301:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "11301:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "11278:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "11278:22:10"
																			},
																			"nativeSrc": "11278:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11278:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "11266:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "11266:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10619:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "10619:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10629:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10616:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10616:2:10"
																},
																"nativeSrc": "10616:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10616:15:10"
															},
															"nativeSrc": "10608:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10632:2:10",
																"nodeType": "YulBlock",
																"src": "10632:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10612:3:10",
																"nodeType": "YulBlock",
																"src": "10612:3:10",
																"statements": []
															},
															"src": "10608:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "10478:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "10506:6:10",
														"nodeType": "YulTypedName",
														"src": "10506:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "10514:5:10",
														"nodeType": "YulTypedName",
														"src": "10514:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10521:8:10",
														"nodeType": "YulTypedName",
														"src": "10521:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10531:3:10",
														"nodeType": "YulTypedName",
														"src": "10531:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10539:5:10",
														"nodeType": "YulTypedName",
														"src": "10539:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10546:4:10",
														"nodeType": "YulTypedName",
														"src": "10546:4:10",
														"type": ""
													}
												],
												"src": "10478:848:10"
											},
											{
												"body": {
													"nativeSrc": "11392:1013:10",
													"nodeType": "YulBlock",
													"src": "11392:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11587:20:10",
																"nodeType": "YulBlock",
																"src": "11587:20:10",
																"statements": [
																	{
																		"nativeSrc": "11589:10:10",
																		"nodeType": "YulAssignment",
																		"src": "11589:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11598:1:10",
																			"nodeType": "YulLiteral",
																			"src": "11598:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11589:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11589:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11600:5:10",
																		"nodeType": "YulLeave",
																		"src": "11600:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11577:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "11577:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11570:6:10"
																},
																"nativeSrc": "11570:16:10",
																"nodeType": "YulFunctionCall",
																"src": "11570:16:10"
															},
															"nativeSrc": "11567:40:10",
															"nodeType": "YulIf",
															"src": "11567:40:10"
														},
														{
															"body": {
																"nativeSrc": "11632:20:10",
																"nodeType": "YulBlock",
																"src": "11632:20:10",
																"statements": [
																	{
																		"nativeSrc": "11634:10:10",
																		"nodeType": "YulAssignment",
																		"src": "11634:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11643:1:10",
																			"nodeType": "YulLiteral",
																			"src": "11643:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11634:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11645:5:10",
																		"nodeType": "YulLeave",
																		"src": "11645:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11626:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11626:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11619:6:10"
																},
																"nativeSrc": "11619:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11619:12:10"
															},
															"nativeSrc": "11616:36:10",
															"nodeType": "YulIf",
															"src": "11616:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11762:20:10",
																		"nodeType": "YulBlock",
																		"src": "11762:20:10",
																		"statements": [
																			{
																				"nativeSrc": "11764:10:10",
																				"nodeType": "YulAssignment",
																				"src": "11764:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11773:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11773:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11764:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "11764:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11775:5:10",
																				"nodeType": "YulLeave",
																				"src": "11775:5:10"
																			}
																		]
																	},
																	"nativeSrc": "11755:27:10",
																	"nodeType": "YulCase",
																	"src": "11755:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11760:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11760:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11806:176:10",
																		"nodeType": "YulBlock",
																		"src": "11806:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11841:22:10",
																					"nodeType": "YulBlock",
																					"src": "11841:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11843:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "11843:16:10"
																								},
																								"nativeSrc": "11843:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "11843:18:10"
																							},
																							"nativeSrc": "11843:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "11843:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11826:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "11826:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11836:3:10",
																							"nodeType": "YulLiteral",
																							"src": "11836:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11823:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "11823:2:10"
																					},
																					"nativeSrc": "11823:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11823:17:10"
																				},
																				"nativeSrc": "11820:43:10",
																				"nodeType": "YulIf",
																				"src": "11820:43:10"
																			},
																			{
																				"nativeSrc": "11876:25:10",
																				"nodeType": "YulAssignment",
																				"src": "11876:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11889:1:10",
																							"nodeType": "YulLiteral",
																							"src": "11889:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11892:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "11892:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11885:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "11885:3:10"
																					},
																					"nativeSrc": "11885:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11885:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11876:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "11876:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11932:22:10",
																					"nodeType": "YulBlock",
																					"src": "11932:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11934:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "11934:16:10"
																								},
																								"nativeSrc": "11934:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "11934:18:10"
																							},
																							"nativeSrc": "11934:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "11934:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11920:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "11920:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11927:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11927:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11917:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "11917:2:10"
																					},
																					"nativeSrc": "11917:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11917:14:10"
																				},
																				"nativeSrc": "11914:40:10",
																				"nodeType": "YulIf",
																				"src": "11914:40:10"
																			},
																			{
																				"nativeSrc": "11967:5:10",
																				"nodeType": "YulLeave",
																				"src": "11967:5:10"
																			}
																		]
																	},
																	"nativeSrc": "11791:191:10",
																	"nodeType": "YulCase",
																	"src": "11791:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11796:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11796:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11712:4:10",
																"nodeType": "YulIdentifier",
																"src": "11712:4:10"
															},
															"nativeSrc": "11705:277:10",
															"nodeType": "YulSwitch",
															"src": "11705:277:10"
														},
														{
															"body": {
																"nativeSrc": "12114:123:10",
																"nodeType": "YulBlock",
																"src": "12114:123:10",
																"statements": [
																	{
																		"nativeSrc": "12128:28:10",
																		"nodeType": "YulAssignment",
																		"src": "12128:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12141:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "12141:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "12147:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "12147:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "12137:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12137:3:10"
																			},
																			"nativeSrc": "12137:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12137:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12128:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12187:22:10",
																			"nodeType": "YulBlock",
																			"src": "12187:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "12189:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "12189:16:10"
																						},
																						"nativeSrc": "12189:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "12189:18:10"
																					},
																					"nativeSrc": "12189:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "12189:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "12175:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "12175:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "12182:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12182:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12172:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "12172:2:10"
																			},
																			"nativeSrc": "12172:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12172:14:10"
																		},
																		"nativeSrc": "12169:40:10",
																		"nodeType": "YulIf",
																		"src": "12169:40:10"
																	},
																	{
																		"nativeSrc": "12222:5:10",
																		"nodeType": "YulLeave",
																		"src": "12222:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12017:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "12017:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12023:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12023:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12014:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12014:2:10"
																				},
																				"nativeSrc": "12014:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12014:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12031:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "12031:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12041:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12041:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12028:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12028:2:10"
																				},
																				"nativeSrc": "12028:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12028:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12010:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12010:3:10"
																		},
																		"nativeSrc": "12010:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12010:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12066:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "12066:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12072:3:10",
																						"nodeType": "YulLiteral",
																						"src": "12072:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12063:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12063:2:10"
																				},
																				"nativeSrc": "12063:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12063:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12081:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "12081:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12091:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12091:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12078:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12078:2:10"
																				},
																				"nativeSrc": "12078:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12078:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12059:3:10"
																		},
																		"nativeSrc": "12059:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12059:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11994:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11994:2:10"
																},
																"nativeSrc": "11994:111:10",
																"nodeType": "YulFunctionCall",
																"src": "11994:111:10"
															},
															"nativeSrc": "11991:246:10",
															"nodeType": "YulIf",
															"src": "11991:246:10"
														},
														{
															"nativeSrc": "12247:57:10",
															"nodeType": "YulAssignment",
															"src": "12247:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12281:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12281:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "12284:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12284:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12290:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12290:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "12300:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12300:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "12262:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "12262:18:10"
																},
																"nativeSrc": "12262:42:10",
																"nodeType": "YulFunctionCall",
																"src": "12262:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12247:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12247:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "12254:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12254:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12343:22:10",
																"nodeType": "YulBlock",
																"src": "12343:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12345:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12345:16:10"
																			},
																			"nativeSrc": "12345:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12345:18:10"
																		},
																		"nativeSrc": "12345:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12345:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "12320:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12320:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "12331:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12331:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "12336:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12336:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "12327:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12327:3:10"
																		},
																		"nativeSrc": "12327:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12327:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12317:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12317:2:10"
																},
																"nativeSrc": "12317:25:10",
																"nodeType": "YulFunctionCall",
																"src": "12317:25:10"
															},
															"nativeSrc": "12314:51:10",
															"nodeType": "YulIf",
															"src": "12314:51:10"
														},
														{
															"nativeSrc": "12374:25:10",
															"nodeType": "YulAssignment",
															"src": "12374:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "12387:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12387:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "12394:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12394:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:10"
																},
																"nativeSrc": "12383:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12383:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12374:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12374:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "11332:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11362:4:10",
														"nodeType": "YulTypedName",
														"src": "11362:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11368:8:10",
														"nodeType": "YulTypedName",
														"src": "11368:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11378:3:10",
														"nodeType": "YulTypedName",
														"src": "11378:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11386:5:10",
														"nodeType": "YulTypedName",
														"src": "11386:5:10",
														"type": ""
													}
												],
												"src": "11332:1073:10"
											},
											{
												"body": {
													"nativeSrc": "12454:43:10",
													"nodeType": "YulBlock",
													"src": "12454:43:10",
													"statements": [
														{
															"nativeSrc": "12464:27:10",
															"nodeType": "YulAssignment",
															"src": "12464:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12479:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12479:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12486:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12486:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12475:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12475:3:10"
																},
																"nativeSrc": "12475:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12475:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12464:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12464:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "12411:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12436:5:10",
														"nodeType": "YulTypedName",
														"src": "12436:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12446:7:10",
														"nodeType": "YulTypedName",
														"src": "12446:7:10",
														"type": ""
													}
												],
												"src": "12411:86:10"
											},
											{
												"body": {
													"nativeSrc": "12567:217:10",
													"nodeType": "YulBlock",
													"src": "12567:217:10",
													"statements": [
														{
															"nativeSrc": "12577:31:10",
															"nodeType": "YulAssignment",
															"src": "12577:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12603:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12603:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12585:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12585:17:10"
																},
																"nativeSrc": "12585:23:10",
																"nodeType": "YulFunctionCall",
																"src": "12585:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12577:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12577:4:10"
																}
															]
														},
														{
															"nativeSrc": "12617:37:10",
															"nodeType": "YulAssignment",
															"src": "12617:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12645:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12645:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12629:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "12629:15:10"
																},
																"nativeSrc": "12629:25:10",
																"nodeType": "YulFunctionCall",
																"src": "12629:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12617:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "12617:8:10"
																}
															]
														},
														{
															"nativeSrc": "12664:113:10",
															"nodeType": "YulAssignment",
															"src": "12664:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12694:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12694:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12700:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12700:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12710:66:10",
																		"nodeType": "YulLiteral",
																		"src": "12710:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12673:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "12673:20:10"
																},
																"nativeSrc": "12673:104:10",
																"nodeType": "YulFunctionCall",
																"src": "12673:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12664:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12664:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "12503:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12542:4:10",
														"nodeType": "YulTypedName",
														"src": "12542:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12548:8:10",
														"nodeType": "YulTypedName",
														"src": "12548:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12561:5:10",
														"nodeType": "YulTypedName",
														"src": "12561:5:10",
														"type": ""
													}
												],
												"src": "12503:281:10"
											},
											{
												"body": {
													"nativeSrc": "12838:362:10",
													"nodeType": "YulBlock",
													"src": "12838:362:10",
													"statements": [
														{
															"nativeSrc": "12848:25:10",
															"nodeType": "YulAssignment",
															"src": "12848:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12871:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12871:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12853:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12853:17:10"
																},
																"nativeSrc": "12853:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12853:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12848:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12848:1:10"
																}
															]
														},
														{
															"nativeSrc": "12882:25:10",
															"nodeType": "YulAssignment",
															"src": "12882:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12905:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12905:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12887:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12887:17:10"
																},
																"nativeSrc": "12887:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12887:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12882:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12882:1:10"
																}
															]
														},
														{
															"nativeSrc": "12916:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12916:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12939:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12939:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12942:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12942:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12935:3:10"
																},
																"nativeSrc": "12935:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12935:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12920:11:10",
																	"nodeType": "YulTypedName",
																	"src": "12920:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12953:41:10",
															"nodeType": "YulAssignment",
															"src": "12953:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12982:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "12982:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12964:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12964:17:10"
																},
																"nativeSrc": "12964:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12964:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12953:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12953:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13171:22:10",
																"nodeType": "YulBlock",
																"src": "13171:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13173:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13173:16:10"
																			},
																			"nativeSrc": "13173:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13173:18:10"
																		},
																		"nativeSrc": "13173:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13173:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13104:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "13104:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13097:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "13097:6:10"
																				},
																				"nativeSrc": "13097:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13097:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13127:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "13127:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13134:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "13134:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13143:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "13143:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13130:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "13130:3:10"
																						},
																						"nativeSrc": "13130:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "13130:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13124:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "13124:2:10"
																				},
																				"nativeSrc": "13124:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13124:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13077:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13077:2:10"
																		},
																		"nativeSrc": "13077:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13077:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13057:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13057:6:10"
																},
																"nativeSrc": "13057:113:10",
																"nodeType": "YulFunctionCall",
																"src": "13057:113:10"
															},
															"nativeSrc": "13054:139:10",
															"nodeType": "YulIf",
															"src": "13054:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12790:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12821:1:10",
														"nodeType": "YulTypedName",
														"src": "12821:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12824:1:10",
														"nodeType": "YulTypedName",
														"src": "12824:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12830:7:10",
														"nodeType": "YulTypedName",
														"src": "12830:7:10",
														"type": ""
													}
												],
												"src": "12790:410:10"
											},
											{
												"body": {
													"nativeSrc": "13250:147:10",
													"nodeType": "YulBlock",
													"src": "13250:147:10",
													"statements": [
														{
															"nativeSrc": "13260:25:10",
															"nodeType": "YulAssignment",
															"src": "13260:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13283:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13283:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13265:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13265:17:10"
																},
																"nativeSrc": "13265:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13265:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13260:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13260:1:10"
																}
															]
														},
														{
															"nativeSrc": "13294:25:10",
															"nodeType": "YulAssignment",
															"src": "13294:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13317:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13317:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13299:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13299:17:10"
																},
																"nativeSrc": "13299:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13299:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13294:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13294:1:10"
																}
															]
														},
														{
															"nativeSrc": "13328:16:10",
															"nodeType": "YulAssignment",
															"src": "13328:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13339:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13339:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13342:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13342:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13335:3:10"
																},
																"nativeSrc": "13335:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13335:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13328:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13328:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13368:22:10",
																"nodeType": "YulBlock",
																"src": "13368:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13370:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13370:16:10"
																			},
																			"nativeSrc": "13370:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13370:18:10"
																		},
																		"nativeSrc": "13370:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13370:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13360:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13360:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13363:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13363:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13357:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13357:2:10"
																},
																"nativeSrc": "13357:10:10",
																"nodeType": "YulFunctionCall",
																"src": "13357:10:10"
															},
															"nativeSrc": "13354:36:10",
															"nodeType": "YulIf",
															"src": "13354:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13206:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13237:1:10",
														"nodeType": "YulTypedName",
														"src": "13237:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13240:1:10",
														"nodeType": "YulTypedName",
														"src": "13240:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13246:3:10",
														"nodeType": "YulTypedName",
														"src": "13246:3:10",
														"type": ""
													}
												],
												"src": "13206:191:10"
											},
											{
												"body": {
													"nativeSrc": "13468:53:10",
													"nodeType": "YulBlock",
													"src": "13468:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13485:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13485:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13508:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13490:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "13490:17:10"
																		},
																		"nativeSrc": "13490:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13490:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13478:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13478:6:10"
																},
																"nativeSrc": "13478:37:10",
																"nodeType": "YulFunctionCall",
																"src": "13478:37:10"
															},
															"nativeSrc": "13478:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "13478:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13403:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13456:5:10",
														"nodeType": "YulTypedName",
														"src": "13456:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13463:3:10",
														"nodeType": "YulTypedName",
														"src": "13463:3:10",
														"type": ""
													}
												],
												"src": "13403:118:10"
											},
											{
												"body": {
													"nativeSrc": "13681:288:10",
													"nodeType": "YulBlock",
													"src": "13681:288:10",
													"statements": [
														{
															"nativeSrc": "13691:26:10",
															"nodeType": "YulAssignment",
															"src": "13691:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13703:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13703:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13714:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13714:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13699:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13699:3:10"
																},
																"nativeSrc": "13699:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13699:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13691:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13691:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13771:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13771:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13784:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13795:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13795:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13780:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:10"
																		},
																		"nativeSrc": "13780:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13780:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13727:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13727:43:10"
																},
																"nativeSrc": "13727:71:10",
																"nodeType": "YulFunctionCall",
																"src": "13727:71:10"
															},
															"nativeSrc": "13727:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "13727:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13852:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13852:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13865:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13876:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13876:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13861:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13861:3:10"
																		},
																		"nativeSrc": "13861:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13861:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13808:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13808:43:10"
																},
																"nativeSrc": "13808:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13808:72:10"
															},
															"nativeSrc": "13808:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13808:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13934:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13934:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13947:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13947:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13958:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13958:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:10"
																		},
																		"nativeSrc": "13943:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13943:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13890:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13890:43:10"
																},
																"nativeSrc": "13890:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13890:72:10"
															},
															"nativeSrc": "13890:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13890:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13527:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13637:9:10",
														"nodeType": "YulTypedName",
														"src": "13637:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13649:6:10",
														"nodeType": "YulTypedName",
														"src": "13649:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13657:6:10",
														"nodeType": "YulTypedName",
														"src": "13657:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13665:6:10",
														"nodeType": "YulTypedName",
														"src": "13665:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13676:4:10",
														"nodeType": "YulTypedName",
														"src": "13676:4:10",
														"type": ""
													}
												],
												"src": "13527:442:10"
											},
											{
												"body": {
													"nativeSrc": "14073:124:10",
													"nodeType": "YulBlock",
													"src": "14073:124:10",
													"statements": [
														{
															"nativeSrc": "14083:26:10",
															"nodeType": "YulAssignment",
															"src": "14083:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14095:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14095:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14106:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14106:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14091:3:10"
																},
																"nativeSrc": "14091:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14091:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14083:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14083:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14163:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14163:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14176:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14176:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14187:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14187:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14172:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14172:3:10"
																		},
																		"nativeSrc": "14172:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14172:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14119:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14119:43:10"
																},
																"nativeSrc": "14119:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14119:71:10"
															},
															"nativeSrc": "14119:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14119:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13975:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14045:9:10",
														"nodeType": "YulTypedName",
														"src": "14045:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14057:6:10",
														"nodeType": "YulTypedName",
														"src": "14057:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14068:4:10",
														"nodeType": "YulTypedName",
														"src": "14068:4:10",
														"type": ""
													}
												],
												"src": "13975:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526005600655600a60075560326008556014600955601e600a55348015610028575f5ffd5b50604051612d24380380612d24833981810160405281019061004a91906108fd565b338383816003908161005c9190610b95565b50806004908161006c9190610b95565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d69190610c73565b60405180910390fd5b6100ee816103ed60201b60201c565b5080600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610199573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101bd9190610c8c565b73ffffffffffffffffffffffffffffffffffffffff1663c9c6539630600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610243573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102679190610c8c565b6040518363ffffffff1660e01b8152600401610284929190610cb7565b6020604051808303815f875af11580156102a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c49190610c8c565b600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506001600d5f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103e5336103bf6104b060201b60201c565b600a6103cb9190610e46565b633b9aca006103da9190610e90565b6104b860201b60201c565b505050610f61565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610528575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161051f9190610c73565b60405180910390fd5b6105395f838361053d60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361058d578060025f8282546105819190610ed1565b9250508190555061065b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610616578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161060d93929190610f13565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a2578060025f82825403925050819055506106ec565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107499190610f48565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107b58261076f565b810181811067ffffffffffffffff821117156107d4576107d361077f565b5b80604052505050565b5f6107e6610756565b90506107f282826107ac565b919050565b5f67ffffffffffffffff8211156108115761081061077f565b5b61081a8261076f565b9050602081019050919050565b8281835e5f83830152505050565b5f610847610842846107f7565b6107dd565b9050828152602081018484840111156108635761086261076b565b5b61086e848285610827565b509392505050565b5f82601f83011261088a57610889610767565b5b815161089a848260208601610835565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108cc826108a3565b9050919050565b6108dc816108c2565b81146108e6575f5ffd5b50565b5f815190506108f7816108d3565b92915050565b5f5f5f606084860312156109145761091361075f565b5b5f84015167ffffffffffffffff81111561093157610930610763565b5b61093d86828701610876565b935050602084015167ffffffffffffffff81111561095e5761095d610763565b5b61096a86828701610876565b925050604061097b868287016108e9565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806109d357607f821691505b6020821081036109e6576109e561098f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610a487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a0d565b610a528683610a0d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610a96610a91610a8c84610a6a565b610a73565b610a6a565b9050919050565b5f819050919050565b610aaf83610a7c565b610ac3610abb82610a9d565b848454610a19565b825550505050565b5f5f905090565b610ada610acb565b610ae5818484610aa6565b505050565b5b81811015610b0857610afd5f82610ad2565b600181019050610aeb565b5050565b601f821115610b4d57610b1e816109ec565b610b27846109fe565b81016020851015610b36578190505b610b4a610b42856109fe565b830182610aea565b50505b505050565b5f82821c905092915050565b5f610b6d5f1984600802610b52565b1980831691505092915050565b5f610b858383610b5e565b9150826002028217905092915050565b610b9e82610985565b67ffffffffffffffff811115610bb757610bb661077f565b5b610bc182546109bc565b610bcc828285610b0c565b5f60209050601f831160018114610bfd575f8415610beb578287015190505b610bf58582610b7a565b865550610c5c565b601f198416610c0b866109ec565b5f5b82811015610c3257848901518255600182019150602085019450602081019050610c0d565b86831015610c4f5784890151610c4b601f891682610b5e565b8355505b6001600288020188555050505b505050505050565b610c6d816108c2565b82525050565b5f602082019050610c865f830184610c64565b92915050565b5f60208284031215610ca157610ca061075f565b5b5f610cae848285016108e9565b91505092915050565b5f604082019050610cca5f830185610c64565b610cd76020830184610c64565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610d6057808604811115610d3c57610d3b610cde565b5b6001851615610d4b5780820291505b8081029050610d5985610d0b565b9450610d20565b94509492505050565b5f82610d785760019050610e33565b81610d85575f9050610e33565b8160018114610d9b5760028114610da557610dd4565b6001915050610e33565b60ff841115610db757610db6610cde565b5b8360020a915084821115610dce57610dcd610cde565b5b50610e33565b5060208310610133831016604e8410600b8410161715610e095782820a905083811115610e0457610e03610cde565b5b610e33565b610e168484846001610d17565b92509050818404811115610e2d57610e2c610cde565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610e5082610a6a565b9150610e5b83610e3a565b9250610e887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610d69565b905092915050565b5f610e9a82610a6a565b9150610ea583610a6a565b9250828202610eb381610a6a565b91508282048414831517610eca57610ec9610cde565b5b5092915050565b5f610edb82610a6a565b9150610ee683610a6a565b9250828201905080821115610efe57610efd610cde565b5b92915050565b610f0d81610a6a565b82525050565b5f606082019050610f265f830186610c64565b610f336020830185610f04565b610f406040830184610f04565b949350505050565b5f602082019050610f5b5f830184610f04565b92915050565b611db680610f6e5f395ff3fe608060405234801561000f575f5ffd5b506004361061018c575f3560e01c806370a08231116100dc578063c647b20e11610095578063cb4ca6311161006f578063cb4ca6311461044e578063cc1776d31461047e578063dd62ed3e1461049c578063f2fde38b146104cc5761018c565b8063c647b20e146103f8578063c6a3064714610414578063c816841b146104305761018c565b806370a0823114610336578063715018a6146103665780638da5cb5b1461037057806395d89b411461038e578063a9059cbb146103ac578063beabacc8146103dc5761018c565b80632431ba7311610149578063337270771161012357806333727077146102c05780634e6fd6c4146102de5780634f7041a5146102fc57806351c6590a1461031a5761018c565b80632431ba73146102685780632e1a7d4d14610286578063313ce567146102a25761018c565b806305bf0a541461019057806306fdde03146101ae578063095ea7b3146101cc57806315291cd4146101fc57806318160ddd1461021a57806323b872dd14610238575b5f5ffd5b6101986104e8565b6040516101a5919061169e565b60405180910390f35b6101b66104ee565b6040516101c39190611727565b60405180910390f35b6101e660048036038101906101e191906117cf565b61057e565b6040516101f39190611827565b60405180910390f35b6102046105a0565b604051610211919061169e565b60405180910390f35b6102226105a6565b60405161022f919061169e565b60405180910390f35b610252600480360381019061024d9190611840565b6105af565b60405161025f9190611827565b60405180910390f35b6102706105dd565b60405161027d91906118eb565b60405180910390f35b6102a0600480360381019061029b9190611904565b610602565b005b6102aa6106fb565b6040516102b7919061194a565b60405180910390f35b6102c8610703565b6040516102d5919061169e565b60405180910390f35b6102e6610709565b6040516102f39190611972565b60405180910390f35b61030461070f565b604051610311919061169e565b60405180910390f35b610334600480360381019061032f9190611904565b610715565b005b610350600480360381019061034b919061198b565b61086e565b60405161035d919061169e565b60405180910390f35b61036e6108b3565b005b6103786108c6565b6040516103859190611972565b60405180910390f35b6103966108ee565b6040516103a39190611727565b60405180910390f35b6103c660048036038101906103c191906117cf565b61097e565b6040516103d39190611827565b60405180910390f35b6103f660048036038101906103f19190611840565b6109a0565b005b610412600480360381019061040d91906119b6565b610d29565b005b61042e60048036038101906104299190611a1e565b610d8b565b005b610438610deb565b6040516104459190611972565b60405180910390f35b6104686004803603810190610463919061198b565b610e10565b6040516104759190611827565b60405180910390f35b610486610e2d565b604051610493919061169e565b60405180910390f35b6104b660048036038101906104b19190611a5c565b610e33565b6040516104c3919061169e565b60405180910390f35b6104e660048036038101906104e1919061198b565b610eb5565b005b60095481565b6060600380546104fd90611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611ac7565b80156105745780601f1061054b57610100808354040283529160200191610574565b820191905f5260205f20905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b5f5f610588610f39565b9050610595818585610f40565b600191505092915050565b60085481565b5f600254905090565b5f5f6105b9610f39565b90506105c6858285610f52565b6105d1858585610fe5565b60019150509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060a6110d5565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361066f576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781116106a8576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506106b46108c6565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106f6573d5f5f3e3d5ffd5b505050565b5f6012905090565b600a5481565b61dead81565b60065481565b61071d6110d5565b5f8111610756576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078230600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610f40565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6107cc6108c6565b426040518863ffffffff1660e01b81526004016107ee96959493929190611b30565b60606040518083038185885af115801561080a573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061082f9190611ba3565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8147604051610863929190611bf3565b60405180910390a150565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108bb6110d5565b6108c45f61115c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108fd90611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461092990611ac7565b80156109745780601f1061094b57610100808354040283529160200191610974565b820191905f5260205f20905b81548152906001019060200180831161095757829003601f168201915b5050505050905090565b5f5f610988610f39565b9050610995818585610fe5565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a05576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6a576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610b055750600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610b1a57610b15838383610fe5565b610d24565b5f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610be857606460065485610bd79190611c47565b610be19190611cb5565b9050610c0c565b8115610c0b57606460075485610bfe9190611c47565b610c089190611cb5565b90505b5b5f8185610c199190611ce5565b90508181610c279190611d18565b8514610c5f576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610d1457610c72873084610fe5565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610ca1919061169e565b60405180910390a15f606460085484610cba9190611c47565b610cc49190611cb5565b90505f606460095485610cd79190611c47565b610ce19190611cb5565b90505f818386610cf19190611ce5565b610cfb9190611ce5565b90505f821115610d1057610d0f308361121f565b5b5050505b610d1f878783610fe5565b505050505b505050565b610d316110d5565b600a8211158015610d43575060148111155b610d79576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600681905550806007819055505050565b610d936110d5565b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052805f5260405f205f915054906101000a900460ff1681565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ebd6110d5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f249190611972565b60405180910390fd5b610f368161115c565b50565b5f33905090565b610f4d838383600161129e565b505050565b5f610f5d8484610e33565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610fdf5781811015610fd0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fc793929190611d4b565b60405180910390fd5b610fde84848484035f61129e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611055575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161104c9190611972565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110bc9190611972565b60405180910390fd5b6110d083838361146d565b505050565b6110dd610f39565b73ffffffffffffffffffffffffffffffffffffffff166110fb6108c6565b73ffffffffffffffffffffffffffffffffffffffff161461115a5761111e610f39565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111519190611972565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361128f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112869190611972565b60405180910390fd5b61129a825f8361146d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361130e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113059190611972565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361137e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113759190611972565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611467578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161145e919061169e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114bd578060025f8282546114b19190611d18565b9250508190555061158b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611546578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161153d93929190611d4b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115d2578060025f828254039250508190555061161c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611679919061169e565b60405180910390a3505050565b5f819050919050565b61169881611686565b82525050565b5f6020820190506116b15f83018461168f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116f9826116b7565b61170381856116c1565b93506117138185602086016116d1565b61171c816116df565b840191505092915050565b5f6020820190508181035f83015261173f81846116ef565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117748261174b565b9050919050565b6117848161176a565b811461178e575f5ffd5b50565b5f8135905061179f8161177b565b92915050565b6117ae81611686565b81146117b8575f5ffd5b50565b5f813590506117c9816117a5565b92915050565b5f5f604083850312156117e5576117e4611747565b5b5f6117f285828601611791565b9250506020611803858286016117bb565b9150509250929050565b5f8115159050919050565b6118218161180d565b82525050565b5f60208201905061183a5f830184611818565b92915050565b5f5f5f6060848603121561185757611856611747565b5b5f61186486828701611791565b935050602061187586828701611791565b9250506040611886868287016117bb565b9150509250925092565b5f819050919050565b5f6118b36118ae6118a98461174b565b611890565b61174b565b9050919050565b5f6118c482611899565b9050919050565b5f6118d5826118ba565b9050919050565b6118e5816118cb565b82525050565b5f6020820190506118fe5f8301846118dc565b92915050565b5f6020828403121561191957611918611747565b5b5f611926848285016117bb565b91505092915050565b5f60ff82169050919050565b6119448161192f565b82525050565b5f60208201905061195d5f83018461193b565b92915050565b61196c8161176a565b82525050565b5f6020820190506119855f830184611963565b92915050565b5f602082840312156119a05761199f611747565b5b5f6119ad84828501611791565b91505092915050565b5f5f604083850312156119cc576119cb611747565b5b5f6119d9858286016117bb565b92505060206119ea858286016117bb565b9150509250929050565b6119fd8161180d565b8114611a07575f5ffd5b50565b5f81359050611a18816119f4565b92915050565b5f5f60408385031215611a3457611a33611747565b5b5f611a4185828601611791565b9250506020611a5285828601611a0a565b9150509250929050565b5f5f60408385031215611a7257611a71611747565b5b5f611a7f85828601611791565b9250506020611a9085828601611791565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ade57607f821691505b602082108103611af157611af0611a9a565b5b50919050565b5f819050919050565b5f611b1a611b15611b1084611af7565b611890565b611686565b9050919050565b611b2a81611b00565b82525050565b5f60c082019050611b435f830189611963565b611b50602083018861168f565b611b5d6040830187611b21565b611b6a6060830186611b21565b611b776080830185611963565b611b8460a083018461168f565b979650505050505050565b5f81519050611b9d816117a5565b92915050565b5f5f5f60608486031215611bba57611bb9611747565b5b5f611bc786828701611b8f565b9350506020611bd886828701611b8f565b9250506040611be986828701611b8f565b9150509250925092565b5f604082019050611c065f83018561168f565b611c13602083018461168f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c5182611686565b9150611c5c83611686565b9250828202611c6a81611686565b91508282048414831517611c8157611c80611c1a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611cbf82611686565b9150611cca83611686565b925082611cda57611cd9611c88565b5b828204905092915050565b5f611cef82611686565b9150611cfa83611686565b9250828203905081811115611d1257611d11611c1a565b5b92915050565b5f611d2282611686565b9150611d2d83611686565b9250828201905080821115611d4557611d44611c1a565b5b92915050565b5f606082019050611d5e5f830186611963565b611d6b602083018561168f565b611d78604083018461168f565b94935050505056fea26469706673582212209d2de35fc274d5b4b159b13db6189775216a40dcbf5a87bc43b901f5bea78b0664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x6 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0x32 PUSH1 0x8 SSTORE PUSH1 0x14 PUSH1 0x9 SSTORE PUSH1 0x1E PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D24 CODESIZE SUB DUP1 PUSH2 0x2D24 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x3ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x243 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP3 SWAP2 SWAP1 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3E5 CALLER PUSH2 0x3BF PUSH2 0x4B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xF61 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x528 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x539 PUSH0 DUP4 DUP4 PUSH2 0x53D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x65B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x616 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6EC JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7B5 DUP3 PUSH2 0x76F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0x77F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7E6 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F2 DUP3 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH2 0x81A DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x847 PUSH2 0x842 DUP5 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH2 0x86E DUP5 DUP3 DUP6 PUSH2 0x827 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x88A JUMPI PUSH2 0x889 PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x89A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x835 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8CC DUP3 PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DC DUP2 PUSH2 0x8C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8F7 DUP2 PUSH2 0x8D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x914 JUMPI PUSH2 0x913 PUSH2 0x75F JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0x763 JUMP JUMPDEST JUMPDEST PUSH2 0x93D DUP7 DUP3 DUP8 ADD PUSH2 0x876 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95E JUMPI PUSH2 0x95D PUSH2 0x763 JUMP JUMPDEST JUMPDEST PUSH2 0x96A DUP7 DUP3 DUP8 ADD PUSH2 0x876 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x97B DUP7 DUP3 DUP8 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9D3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x98F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xA48 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0xA52 DUP7 DUP4 PUSH2 0xA0D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA96 PUSH2 0xA91 PUSH2 0xA8C DUP5 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAF DUP4 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAC3 PUSH2 0xABB DUP3 PUSH2 0xA9D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA19 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xADA PUSH2 0xACB JUMP JUMPDEST PUSH2 0xAE5 DUP2 DUP5 DUP5 PUSH2 0xAA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB08 JUMPI PUSH2 0xAFD PUSH0 DUP3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB1E DUP2 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xB27 DUP5 PUSH2 0x9FE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB36 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB4A PUSH2 0xB42 DUP6 PUSH2 0x9FE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xAEA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB52 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB85 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB9E DUP3 PUSH2 0x985 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0x77F JUMP JUMPDEST JUMPDEST PUSH2 0xBC1 DUP3 SLOAD PUSH2 0x9BC JUMP JUMPDEST PUSH2 0xBCC DUP3 DUP3 DUP6 PUSH2 0xB0C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBFD JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBEB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBF5 DUP6 DUP3 PUSH2 0xB7A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC0B DUP7 PUSH2 0x9EC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC32 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC0D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC4F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC4B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB5E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0x8C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC86 PUSH0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0x75F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCAE DUP5 DUP3 DUP6 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCCA PUSH0 DUP4 ADD DUP6 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xCD7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xD60 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xD3C JUMPI PUSH2 0xD3B PUSH2 0xCDE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xD4B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xD59 DUP6 PUSH2 0xD0B JUMP JUMPDEST SWAP5 POP PUSH2 0xD20 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD78 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE33 JUMP JUMPDEST DUP2 PUSH2 0xD85 JUMPI PUSH0 SWAP1 POP PUSH2 0xE33 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDA5 JUMPI PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE33 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xDB7 JUMPI PUSH2 0xDB6 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0xCDE JUMP JUMPDEST JUMPDEST POP PUSH2 0xE33 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE09 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH2 0xE16 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xD17 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2C PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE50 DUP3 PUSH2 0xA6A JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP4 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP PUSH2 0xE88 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE9A DUP3 PUSH2 0xA6A JUMP JUMPDEST SWAP2 POP PUSH2 0xEA5 DUP4 PUSH2 0xA6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEB3 DUP2 PUSH2 0xA6A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEDB DUP3 PUSH2 0xA6A JUMP JUMPDEST SWAP2 POP PUSH2 0xEE6 DUP4 PUSH2 0xA6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0xCDE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0D DUP2 PUSH2 0xA6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH0 DUP4 ADD DUP7 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xF33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0xF40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5B PUSH0 DUP4 ADD DUP5 PUSH2 0xF04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DB6 DUP1 PUSH2 0xF6E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC647B20E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC647B20E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x430 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x3DC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x33727077 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x31A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x8B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x588 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x595 DUP2 DUP6 DUP6 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x5D1 DUP6 DUP6 DUP6 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60A PUSH2 0x10D5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x6B4 PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71D PUSH2 0x10D5 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x782 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x7CC PUSH2 0x8C6 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x863 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x8C4 PUSH0 PUSH2 0x115C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8FD SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x929 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x974 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x974 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x957 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x988 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x995 DUP2 DUP6 DUP6 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB05 JUMPI POP PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB15 DUP4 DUP4 DUP4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x64 PUSH1 0x6 SLOAD DUP6 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xC0C JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC0B JUMPI PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST DUP6 EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xC72 DUP8 ADDRESS DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F ADDRESS DUP4 PUSH2 0x121F JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST PUSH2 0xD1F DUP8 DUP8 DUP4 PUSH2 0xFE5 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD31 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD93 PUSH2 0x10D5 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x10D5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF36 DUP2 PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x129E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF5D DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFDF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x129E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1055 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP4 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10DD PUSH2 0xF39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FB PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115A JUMPI PUSH2 0x111E PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x128F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129A DUP3 PUSH0 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1467 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x158B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1546 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1679 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1698 DUP2 PUSH2 0x1686 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F9 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1703 DUP2 DUP6 PUSH2 0x16C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1713 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x173F DUP2 DUP5 PUSH2 0x16EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1774 DUP3 PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1784 DUP2 PUSH2 0x176A JUMP JUMPDEST DUP2 EQ PUSH2 0x178E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179F DUP2 PUSH2 0x177B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x1686 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C9 DUP2 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1803 DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183A PUSH0 DUP4 ADD DUP5 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1875 DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B3 PUSH2 0x18AE PUSH2 0x18A9 DUP5 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 DUP3 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FE PUSH0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1919 JUMPI PUSH2 0x1918 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1926 DUP5 DUP3 DUP6 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1944 DUP2 PUSH2 0x192F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x195D PUSH0 DUP4 ADD DUP5 PUSH2 0x193B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x176A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1985 PUSH0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH2 0x199F PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AD DUP5 DUP3 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CC JUMPI PUSH2 0x19CB PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D9 DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EA DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x180D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A07 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A18 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7F DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ADE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1A PUSH2 0x1B15 PUSH2 0x1B10 DUP5 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH0 DUP4 ADD DUP10 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1B5D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B6A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1B84 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C06 PUSH0 DUP4 ADD DUP6 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1C13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C6A DUP2 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCA DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEF DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFA DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D22 DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2D DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D5E PUSH0 DUP4 ADD DUP7 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1D78 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x2D 0xE3 PUSH0 0xC2 PUSH21 0xD5B4B159B13DB6189775216A40DCBF5A87BC43B901 CREATE2 0xBE 0xA7 DUP12 MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "322:3723:9:-:0;;;577:1;553:25;;610:2;585:27;;651:2;619:34;;687:2;660:29;;726:2;696:32;;1063:501;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1208:10;1184:5;1191:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1266:13:9::2;1231;;:49;;;;;;;;;;;;;;;;;;1323:13;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1305:53;;;1367:4;1374:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1305:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1291:11;;:104;;;;;;;;;;;;;;;;;;1440:4;1408:17;:29;1426:10;1408:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1490:4;1455:17;:32;1481:4;1455:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1507:49;1513:10;1545;:8;;;:10;;:::i;:::-;1541:2;:14;;;;:::i;:::-;1525:13;:30;;;;:::i;:::-;1507:5;;;:49;;:::i;:::-;1063:501:::0;;;322:3723;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6190:1;6183:8;;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;9137:118::-;9224:24;9242:5;9224:24;:::i;:::-;9219:3;9212:37;9137:118;;:::o;9261:222::-;9354:4;9392:2;9381:9;9377:18;9369:26;;9405:71;9473:1;9462:9;9458:17;9449:6;9405:71;:::i;:::-;9261:222;;;;:::o;9489:351::-;9559:6;9608:2;9596:9;9587:7;9583:23;9579:32;9576:119;;;9614:79;;:::i;:::-;9576:119;9734:1;9759:64;9815:7;9806:6;9795:9;9791:22;9759:64;:::i;:::-;9749:74;;9705:128;9489:351;;;;:::o;9846:332::-;9967:4;10005:2;9994:9;9990:18;9982:26;;10018:71;10086:1;10075:9;10071:17;10062:6;10018:71;:::i;:::-;10099:72;10167:2;10156:9;10152:18;10143:6;10099:72;:::i;:::-;9846:332;;;;;:::o;10184:180::-;10232:77;10229:1;10222:88;10329:4;10326:1;10319:15;10353:4;10350:1;10343:15;10370:102;10412:8;10459:5;10456:1;10452:13;10431:34;;10370:102;;;:::o;10478:848::-;10539:5;10546:4;10570:6;10561:15;;10594:5;10585:14;;10608:712;10629:1;10619:8;10616:15;10608:712;;;10724:4;10719:3;10715:14;10709:4;10706:24;10703:50;;;10733:18;;:::i;:::-;10703:50;10783:1;10773:8;10769:16;10766:451;;;11198:4;11191:5;11187:16;11178:25;;10766:451;11248:4;11242;11238:15;11230:23;;11278:32;11301:8;11278:32;:::i;:::-;11266:44;;10608:712;;;10478:848;;;;;;;:::o;11332:1073::-;11386:5;11577:8;11567:40;;11598:1;11589:10;;11600:5;;11567:40;11626:4;11616:36;;11643:1;11634:10;;11645:5;;11616:36;11712:4;11760:1;11755:27;;;;11796:1;11791:191;;;;11705:277;;11755:27;11773:1;11764:10;;11775:5;;;11791:191;11836:3;11826:8;11823:17;11820:43;;;11843:18;;:::i;:::-;11820:43;11892:8;11889:1;11885:16;11876:25;;11927:3;11920:5;11917:14;11914:40;;;11934:18;;:::i;:::-;11914:40;11967:5;;;11705:277;;12091:2;12081:8;12078:16;12072:3;12066:4;12063:13;12059:36;12041:2;12031:8;12028:16;12023:2;12017:4;12014:12;12010:35;11994:111;11991:246;;;12147:8;12141:4;12137:19;12128:28;;12182:3;12175:5;12172:14;12169:40;;;12189:18;;:::i;:::-;12169:40;12222:5;;11991:246;12262:42;12300:3;12290:8;12284:4;12281:1;12262:42;:::i;:::-;12247:57;;;;12336:4;12331:3;12327:14;12320:5;12317:25;12314:51;;;12345:18;;:::i;:::-;12314:51;12394:4;12387:5;12383:16;12374:25;;11332:1073;;;;;;:::o;12411:86::-;12446:7;12486:4;12479:5;12475:16;12464:27;;12411:86;;;:::o;12503:281::-;12561:5;12585:23;12603:4;12585:23;:::i;:::-;12577:31;;12629:25;12645:8;12629:25;:::i;:::-;12617:37;;12673:104;12710:66;12700:8;12694:4;12673:104;:::i;:::-;12664:113;;12503:281;;;;:::o;12790:410::-;12830:7;12853:20;12871:1;12853:20;:::i;:::-;12848:25;;12887:20;12905:1;12887:20;:::i;:::-;12882:25;;12942:1;12939;12935:9;12964:30;12982:11;12964:30;:::i;:::-;12953:41;;13143:1;13134:7;13130:15;13127:1;13124:22;13104:1;13097:9;13077:83;13054:139;;13173:18;;:::i;:::-;13054:139;12838:362;12790:410;;;;:::o;13206:191::-;13246:3;13265:20;13283:1;13265:20;:::i;:::-;13260:25;;13299:20;13317:1;13299:20;:::i;:::-;13294:25;;13342:1;13339;13335:9;13328:16;;13363:3;13360:1;13357:10;13354:36;;;13370:18;;:::i;:::-;13354:36;13206:191;;;;:::o;13403:118::-;13490:24;13508:5;13490:24;:::i;:::-;13485:3;13478:37;13403:118;;:::o;13527:442::-;13676:4;13714:2;13703:9;13699:18;13691:26;;13727:71;13795:1;13784:9;13780:17;13771:6;13727:71;:::i;:::-;13808:72;13876:2;13865:9;13861:18;13852:6;13808:72;:::i;:::-;13890;13958:2;13947:9;13943:18;13934:6;13890:72;:::i;:::-;13527:442;;;;;;:::o;13975:222::-;14068:4;14106:2;14095:9;14091:18;14083:26;;14119:71;14187:1;14176:9;14172:17;14163:6;14119:71;:::i;:::-;13975:222;;;;:::o;322:3723:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEAD_ADDRESS_1437": {
									"entryPoint": 1801,
									"id": 1437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3904,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4766,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4639,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4309,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3897,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3922,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4444,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4069,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5229,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1752": {
									"entryPoint": 1813,
									"id": 1752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3635,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1406,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2158,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnShare_1426": {
									"entryPoint": 1256,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTax_1417": {
									"entryPoint": 1807,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1787,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromTax_1817": {
									"entryPoint": 3467,
									"id": 1817,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isExcludedFromTax_1441": {
									"entryPoint": 3600,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityShare_1423": {
									"entryPoint": 1440,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1262,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2246,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2227,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsShare_1429": {
									"entryPoint": 1795,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1420": {
									"entryPoint": 3629,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTaxes_1847": {
									"entryPoint": 3369,
									"id": 1847,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2286,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1446,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1455,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3765,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1693": {
									"entryPoint": 2464,
									"id": 1693,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2430,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1434": {
									"entryPoint": 3563,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswaprouter_1432": {
									"entryPoint": 1501,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1801": {
									"entryPoint": 1538,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$1392_to_t_address_fromStack": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1392__to_t_address__fromStack_reversed": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$1392_to_t_address": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 6912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13151:10",
										"nodeType": "YulBlock",
										"src": "0:13151:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "501:40:10",
													"nodeType": "YulBlock",
													"src": "501:40:10",
													"statements": [
														{
															"nativeSrc": "512:22:10",
															"nodeType": "YulAssignment",
															"src": "512:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:10"
																},
																"nativeSrc": "522:12:10",
																"nodeType": "YulFunctionCall",
																"src": "522:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:10",
														"nodeType": "YulTypedName",
														"src": "484:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:10",
														"nodeType": "YulTypedName",
														"src": "494:6:10",
														"type": ""
													}
												],
												"src": "442:99:10"
											},
											{
												"body": {
													"nativeSrc": "643:73:10",
													"nodeType": "YulBlock",
													"src": "643:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:10"
																},
																"nativeSrc": "653:19:10",
																"nodeType": "YulFunctionCall",
																"src": "653:19:10"
															},
															"nativeSrc": "653:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:10"
														},
														{
															"nativeSrc": "681:29:10",
															"nodeType": "YulAssignment",
															"src": "681:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:10",
																		"nodeType": "YulLiteral",
																		"src": "705:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:10"
																},
																"nativeSrc": "696:14:10",
																"nodeType": "YulFunctionCall",
																"src": "696:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:10",
														"nodeType": "YulTypedName",
														"src": "615:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:10",
														"nodeType": "YulTypedName",
														"src": "620:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:10",
														"nodeType": "YulTypedName",
														"src": "631:11:10",
														"type": ""
													}
												],
												"src": "547:169:10"
											},
											{
												"body": {
													"nativeSrc": "784:77:10",
													"nodeType": "YulBlock",
													"src": "784:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:10"
																},
																"nativeSrc": "795:23:10",
																"nodeType": "YulFunctionCall",
																"src": "795:23:10"
															},
															"nativeSrc": "795:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:10"
																		},
																		"nativeSrc": "834:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:10",
																		"nodeType": "YulLiteral",
																		"src": "852:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:10"
																},
																"nativeSrc": "827:27:10",
																"nodeType": "YulFunctionCall",
																"src": "827:27:10"
															},
															"nativeSrc": "827:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:10",
														"nodeType": "YulTypedName",
														"src": "766:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:10",
														"nodeType": "YulTypedName",
														"src": "771:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:10",
														"nodeType": "YulTypedName",
														"src": "776:6:10",
														"type": ""
													}
												],
												"src": "722:139:10"
											},
											{
												"body": {
													"nativeSrc": "915:54:10",
													"nodeType": "YulBlock",
													"src": "915:54:10",
													"statements": [
														{
															"nativeSrc": "925:38:10",
															"nodeType": "YulAssignment",
															"src": "925:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:10",
																				"nodeType": "YulLiteral",
																				"src": "950:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:10",
																				"nodeType": "YulLiteral",
																				"src": "959:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:28:10",
																"nodeType": "YulFunctionCall",
																"src": "935:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:10",
														"nodeType": "YulTypedName",
														"src": "898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:10",
														"nodeType": "YulTypedName",
														"src": "908:6:10",
														"type": ""
													}
												],
												"src": "867:102:10"
											},
											{
												"body": {
													"nativeSrc": "1067:285:10",
													"nodeType": "YulBlock",
													"src": "1067:285:10",
													"statements": [
														{
															"nativeSrc": "1077:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:10"
																},
																"nativeSrc": "1091:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:10",
															"nodeType": "YulAssignment",
															"src": "1139:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:10"
																},
																"nativeSrc": "1146:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:10"
																		},
																		"nativeSrc": "1261:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:10"
																},
																"nativeSrc": "1226:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:10"
															},
															"nativeSrc": "1226:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:10"
														},
														{
															"nativeSrc": "1300:46:10",
															"nodeType": "YulAssignment",
															"src": "1300:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:10"
																		},
																		"nativeSrc": "1316:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:10"
																},
																"nativeSrc": "1307:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:10",
														"nodeType": "YulTypedName",
														"src": "1048:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:10",
														"nodeType": "YulTypedName",
														"src": "1055:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:10",
														"nodeType": "YulTypedName",
														"src": "1063:3:10",
														"type": ""
													}
												],
												"src": "975:377:10"
											},
											{
												"body": {
													"nativeSrc": "1476:195:10",
													"nodeType": "YulBlock",
													"src": "1476:195:10",
													"statements": [
														{
															"nativeSrc": "1486:26:10",
															"nodeType": "YulAssignment",
															"src": "1486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:10"
																},
																"nativeSrc": "1494:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:10"
																		},
																		"nativeSrc": "1529:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:10"
																		},
																		"nativeSrc": "1548:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:10"
																},
																"nativeSrc": "1522:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:10"
															},
															"nativeSrc": "1522:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:10"
														},
														{
															"nativeSrc": "1578:86:10",
															"nodeType": "YulAssignment",
															"src": "1578:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:10"
																},
																"nativeSrc": "1586:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:10",
														"nodeType": "YulTypedName",
														"src": "1448:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:10",
														"nodeType": "YulTypedName",
														"src": "1460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:10",
														"nodeType": "YulTypedName",
														"src": "1471:4:10",
														"type": ""
													}
												],
												"src": "1358:313:10"
											},
											{
												"body": {
													"nativeSrc": "1717:35:10",
													"nodeType": "YulBlock",
													"src": "1717:35:10",
													"statements": [
														{
															"nativeSrc": "1727:19:10",
															"nodeType": "YulAssignment",
															"src": "1727:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:10"
																},
																"nativeSrc": "1737:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:10",
														"nodeType": "YulTypedName",
														"src": "1710:6:10",
														"type": ""
													}
												],
												"src": "1677:75:10"
											},
											{
												"body": {
													"nativeSrc": "1847:28:10",
													"nodeType": "YulBlock",
													"src": "1847:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:10"
																},
																"nativeSrc": "1857:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:10"
															},
															"nativeSrc": "1857:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:10"
											},
											{
												"body": {
													"nativeSrc": "1970:28:10",
													"nodeType": "YulBlock",
													"src": "1970:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:10"
																},
																"nativeSrc": "1980:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:10"
															},
															"nativeSrc": "1980:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:10"
											},
											{
												"body": {
													"nativeSrc": "2049:81:10",
													"nodeType": "YulBlock",
													"src": "2049:81:10",
													"statements": [
														{
															"nativeSrc": "2059:65:10",
															"nodeType": "YulAssignment",
															"src": "2059:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:10"
																},
																"nativeSrc": "2070:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:10",
														"nodeType": "YulTypedName",
														"src": "2031:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:10",
														"nodeType": "YulTypedName",
														"src": "2041:7:10",
														"type": ""
													}
												],
												"src": "2004:126:10"
											},
											{
												"body": {
													"nativeSrc": "2181:51:10",
													"nodeType": "YulBlock",
													"src": "2181:51:10",
													"statements": [
														{
															"nativeSrc": "2191:35:10",
															"nodeType": "YulAssignment",
															"src": "2191:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:10"
																},
																"nativeSrc": "2202:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:10",
														"nodeType": "YulTypedName",
														"src": "2163:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:10",
														"nodeType": "YulTypedName",
														"src": "2173:7:10",
														"type": ""
													}
												],
												"src": "2136:96:10"
											},
											{
												"body": {
													"nativeSrc": "2281:79:10",
													"nodeType": "YulBlock",
													"src": "2281:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:10",
																"nodeType": "YulBlock",
																"src": "2338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:10"
																			},
																			"nativeSrc": "2340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:10"
																		},
																		"nativeSrc": "2340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:10"
																				},
																				"nativeSrc": "2311:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:10"
																		},
																		"nativeSrc": "2301:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nativeSrc": "2294:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:10"
															},
															"nativeSrc": "2291:63:10",
															"nodeType": "YulIf",
															"src": "2291:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:10",
														"nodeType": "YulTypedName",
														"src": "2274:5:10",
														"type": ""
													}
												],
												"src": "2238:122:10"
											},
											{
												"body": {
													"nativeSrc": "2418:87:10",
													"nodeType": "YulBlock",
													"src": "2418:87:10",
													"statements": [
														{
															"nativeSrc": "2428:29:10",
															"nodeType": "YulAssignment",
															"src": "2428:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:10"
																},
																"nativeSrc": "2437:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:10"
																},
																"nativeSrc": "2466:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:10"
															},
															"nativeSrc": "2466:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:10",
														"nodeType": "YulTypedName",
														"src": "2396:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:10",
														"nodeType": "YulTypedName",
														"src": "2404:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:10",
														"nodeType": "YulTypedName",
														"src": "2412:5:10",
														"type": ""
													}
												],
												"src": "2366:139:10"
											},
											{
												"body": {
													"nativeSrc": "2554:79:10",
													"nodeType": "YulBlock",
													"src": "2554:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:10",
																"nodeType": "YulBlock",
																"src": "2611:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:10"
																			},
																			"nativeSrc": "2613:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:10"
																		},
																		"nativeSrc": "2613:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:10"
																				},
																				"nativeSrc": "2584:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:10"
																		},
																		"nativeSrc": "2574:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:10"
																},
																"nativeSrc": "2567:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:10"
															},
															"nativeSrc": "2564:63:10",
															"nodeType": "YulIf",
															"src": "2564:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:10",
														"nodeType": "YulTypedName",
														"src": "2547:5:10",
														"type": ""
													}
												],
												"src": "2511:122:10"
											},
											{
												"body": {
													"nativeSrc": "2691:87:10",
													"nodeType": "YulBlock",
													"src": "2691:87:10",
													"statements": [
														{
															"nativeSrc": "2701:29:10",
															"nodeType": "YulAssignment",
															"src": "2701:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:10"
																},
																"nativeSrc": "2710:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:10"
																},
																"nativeSrc": "2739:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:10"
															},
															"nativeSrc": "2739:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:10",
														"nodeType": "YulTypedName",
														"src": "2669:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:10",
														"nodeType": "YulTypedName",
														"src": "2677:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:10",
														"nodeType": "YulTypedName",
														"src": "2685:5:10",
														"type": ""
													}
												],
												"src": "2639:139:10"
											},
											{
												"body": {
													"nativeSrc": "2867:391:10",
													"nodeType": "YulBlock",
													"src": "2867:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:10",
																"nodeType": "YulBlock",
																"src": "2913:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:10"
																			},
																			"nativeSrc": "2915:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:10"
																		},
																		"nativeSrc": "2915:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:10"
																		},
																		"nativeSrc": "2884:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:10"
																},
																"nativeSrc": "2880:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:10"
															},
															"nativeSrc": "2877:119:10",
															"nodeType": "YulIf",
															"src": "2877:119:10"
														},
														{
															"nativeSrc": "3006:117:10",
															"nodeType": "YulBlock",
															"src": "3006:117:10",
															"statements": [
																{
																	"nativeSrc": "3021:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:10"
																				},
																				"nativeSrc": "3081:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:10"
																		},
																		"nativeSrc": "3060:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:10",
															"nodeType": "YulBlock",
															"src": "3133:118:10",
															"statements": [
																{
																	"nativeSrc": "3148:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:10"
																				},
																				"nativeSrc": "3209:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:10"
																		},
																		"nativeSrc": "3188:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:10",
														"nodeType": "YulTypedName",
														"src": "2829:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:10",
														"nodeType": "YulTypedName",
														"src": "2840:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:10",
														"nodeType": "YulTypedName",
														"src": "2852:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:10",
														"nodeType": "YulTypedName",
														"src": "2860:6:10",
														"type": ""
													}
												],
												"src": "2784:474:10"
											},
											{
												"body": {
													"nativeSrc": "3306:48:10",
													"nodeType": "YulBlock",
													"src": "3306:48:10",
													"statements": [
														{
															"nativeSrc": "3316:32:10",
															"nodeType": "YulAssignment",
															"src": "3316:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:10"
																		},
																		"nativeSrc": "3334:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:10"
																},
																"nativeSrc": "3327:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:10",
														"nodeType": "YulTypedName",
														"src": "3288:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:10",
														"nodeType": "YulTypedName",
														"src": "3298:7:10",
														"type": ""
													}
												],
												"src": "3264:90:10"
											},
											{
												"body": {
													"nativeSrc": "3419:50:10",
													"nodeType": "YulBlock",
													"src": "3419:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:10"
																		},
																		"nativeSrc": "3441:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:10"
																},
																"nativeSrc": "3429:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:10"
															},
															"nativeSrc": "3429:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:10",
														"nodeType": "YulTypedName",
														"src": "3407:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:10",
														"nodeType": "YulTypedName",
														"src": "3414:3:10",
														"type": ""
													}
												],
												"src": "3360:109:10"
											},
											{
												"body": {
													"nativeSrc": "3567:118:10",
													"nodeType": "YulBlock",
													"src": "3567:118:10",
													"statements": [
														{
															"nativeSrc": "3577:26:10",
															"nodeType": "YulAssignment",
															"src": "3577:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:10"
																},
																"nativeSrc": "3585:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:10"
																},
																"nativeSrc": "3613:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:10"
															},
															"nativeSrc": "3613:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:10",
														"nodeType": "YulTypedName",
														"src": "3539:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:10",
														"nodeType": "YulTypedName",
														"src": "3551:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:10",
														"nodeType": "YulTypedName",
														"src": "3562:4:10",
														"type": ""
													}
												],
												"src": "3475:210:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4348:28:10",
													"nodeType": "YulBlock",
													"src": "4348:28:10",
													"statements": [
														{
															"nativeSrc": "4358:12:10",
															"nodeType": "YulAssignment",
															"src": "4358:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4365:5:10",
																"nodeType": "YulIdentifier",
																"src": "4365:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4316:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:10",
														"nodeType": "YulTypedName",
														"src": "4334:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4344:3:10",
														"nodeType": "YulTypedName",
														"src": "4344:3:10",
														"type": ""
													}
												],
												"src": "4316:60:10"
											},
											{
												"body": {
													"nativeSrc": "4442:82:10",
													"nodeType": "YulBlock",
													"src": "4442:82:10",
													"statements": [
														{
															"nativeSrc": "4452:66:10",
															"nodeType": "YulAssignment",
															"src": "4452:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4510:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4510:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4492:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4492:17:10"
																				},
																				"nativeSrc": "4492:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4492:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4483:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4483:8:10"
																		},
																		"nativeSrc": "4483:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4465:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4465:17:10"
																},
																"nativeSrc": "4465:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4465:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4382:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:10",
														"nodeType": "YulTypedName",
														"src": "4422:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:10",
														"nodeType": "YulTypedName",
														"src": "4432:9:10",
														"type": ""
													}
												],
												"src": "4382:142:10"
											},
											{
												"body": {
													"nativeSrc": "4590:66:10",
													"nodeType": "YulBlock",
													"src": "4590:66:10",
													"statements": [
														{
															"nativeSrc": "4600:50:10",
															"nodeType": "YulAssignment",
															"src": "4600:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4644:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4644:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4613:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4613:30:10"
																},
																"nativeSrc": "4613:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4600:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4600:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4530:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:10",
														"nodeType": "YulTypedName",
														"src": "4570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4580:9:10",
														"nodeType": "YulTypedName",
														"src": "4580:9:10",
														"type": ""
													}
												],
												"src": "4530:126:10"
											},
											{
												"body": {
													"nativeSrc": "4749:66:10",
													"nodeType": "YulBlock",
													"src": "4749:66:10",
													"statements": [
														{
															"nativeSrc": "4759:50:10",
															"nodeType": "YulAssignment",
															"src": "4759:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4803:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4803:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4772:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4772:30:10"
																},
																"nativeSrc": "4772:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4772:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4759:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4759:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1392_to_t_address",
												"nativeSrc": "4662:153:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4729:5:10",
														"nodeType": "YulTypedName",
														"src": "4729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4739:9:10",
														"nodeType": "YulTypedName",
														"src": "4739:9:10",
														"type": ""
													}
												],
												"src": "4662:153:10"
											},
											{
												"body": {
													"nativeSrc": "4913:93:10",
													"nodeType": "YulBlock",
													"src": "4913:93:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4930:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4930:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4993:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4993:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1392_to_t_address",
																			"nativeSrc": "4935:57:10",
																			"nodeType": "YulIdentifier",
																			"src": "4935:57:10"
																		},
																		"nativeSrc": "4935:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4935:64:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:10"
																},
																"nativeSrc": "4923:77:10",
																"nodeType": "YulFunctionCall",
																"src": "4923:77:10"
															},
															"nativeSrc": "4923:77:10",
															"nodeType": "YulExpressionStatement",
															"src": "4923:77:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1392_to_t_address_fromStack",
												"nativeSrc": "4821:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4901:5:10",
														"nodeType": "YulTypedName",
														"src": "4901:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4908:3:10",
														"nodeType": "YulTypedName",
														"src": "4908:3:10",
														"type": ""
													}
												],
												"src": "4821:185:10"
											},
											{
												"body": {
													"nativeSrc": "5137:151:10",
													"nodeType": "YulBlock",
													"src": "5137:151:10",
													"statements": [
														{
															"nativeSrc": "5147:26:10",
															"nodeType": "YulAssignment",
															"src": "5147:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5159:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5159:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:10"
																},
																"nativeSrc": "5155:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5155:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5147:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5147:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5254:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5254:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5267:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5267:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5278:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5278:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5263:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:10"
																		},
																		"nativeSrc": "5263:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5263:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1392_to_t_address_fromStack",
																	"nativeSrc": "5183:70:10",
																	"nodeType": "YulIdentifier",
																	"src": "5183:70:10"
																},
																"nativeSrc": "5183:98:10",
																"nodeType": "YulFunctionCall",
																"src": "5183:98:10"
															},
															"nativeSrc": "5183:98:10",
															"nodeType": "YulExpressionStatement",
															"src": "5183:98:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1392__to_t_address__fromStack_reversed",
												"nativeSrc": "5012:276:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5109:9:10",
														"nodeType": "YulTypedName",
														"src": "5109:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5121:6:10",
														"nodeType": "YulTypedName",
														"src": "5121:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5132:4:10",
														"nodeType": "YulTypedName",
														"src": "5132:4:10",
														"type": ""
													}
												],
												"src": "5012:276:10"
											},
											{
												"body": {
													"nativeSrc": "5360:263:10",
													"nodeType": "YulBlock",
													"src": "5360:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5406:83:10",
																"nodeType": "YulBlock",
																"src": "5406:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5408:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5408:77:10"
																			},
																			"nativeSrc": "5408:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5408:79:10"
																		},
																		"nativeSrc": "5408:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5408:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5381:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5381:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:10"
																		},
																		"nativeSrc": "5377:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5373:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:10"
																},
																"nativeSrc": "5373:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5373:32:10"
															},
															"nativeSrc": "5370:119:10",
															"nodeType": "YulIf",
															"src": "5370:119:10"
														},
														{
															"nativeSrc": "5499:117:10",
															"nodeType": "YulBlock",
															"src": "5499:117:10",
															"statements": [
																{
																	"nativeSrc": "5514:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5514:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5528:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5528:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5518:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5518:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5543:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5543:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5578:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5578:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5589:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5589:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5574:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5574:3:10"
																				},
																				"nativeSrc": "5574:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5574:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5598:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5598:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5553:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5553:20:10"
																		},
																		"nativeSrc": "5553:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5553:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5543:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5543:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5294:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5330:9:10",
														"nodeType": "YulTypedName",
														"src": "5330:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5341:7:10",
														"nodeType": "YulTypedName",
														"src": "5341:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5353:6:10",
														"nodeType": "YulTypedName",
														"src": "5353:6:10",
														"type": ""
													}
												],
												"src": "5294:329:10"
											},
											{
												"body": {
													"nativeSrc": "5672:43:10",
													"nodeType": "YulBlock",
													"src": "5672:43:10",
													"statements": [
														{
															"nativeSrc": "5682:27:10",
															"nodeType": "YulAssignment",
															"src": "5682:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5697:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5697:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5704:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:10"
																},
																"nativeSrc": "5693:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5693:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5682:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5682:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5629:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5654:5:10",
														"nodeType": "YulTypedName",
														"src": "5654:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5664:7:10",
														"nodeType": "YulTypedName",
														"src": "5664:7:10",
														"type": ""
													}
												],
												"src": "5629:86:10"
											},
											{
												"body": {
													"nativeSrc": "5782:51:10",
													"nodeType": "YulBlock",
													"src": "5782:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5799:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5799:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5820:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5820:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5804:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5804:15:10"
																		},
																		"nativeSrc": "5804:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:10"
																},
																"nativeSrc": "5792:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5792:35:10"
															},
															"nativeSrc": "5792:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5792:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5721:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5770:5:10",
														"nodeType": "YulTypedName",
														"src": "5770:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5777:3:10",
														"nodeType": "YulTypedName",
														"src": "5777:3:10",
														"type": ""
													}
												],
												"src": "5721:112:10"
											},
											{
												"body": {
													"nativeSrc": "5933:120:10",
													"nodeType": "YulBlock",
													"src": "5933:120:10",
													"statements": [
														{
															"nativeSrc": "5943:26:10",
															"nodeType": "YulAssignment",
															"src": "5943:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5955:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5951:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:10"
																},
																"nativeSrc": "5951:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5951:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5943:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5943:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6019:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6019:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6032:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6043:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6043:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:10"
																		},
																		"nativeSrc": "6028:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6028:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5979:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5979:39:10"
																},
																"nativeSrc": "5979:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5979:67:10"
															},
															"nativeSrc": "5979:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5979:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5839:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5905:9:10",
														"nodeType": "YulTypedName",
														"src": "5905:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5917:6:10",
														"nodeType": "YulTypedName",
														"src": "5917:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5928:4:10",
														"nodeType": "YulTypedName",
														"src": "5928:4:10",
														"type": ""
													}
												],
												"src": "5839:214:10"
											},
											{
												"body": {
													"nativeSrc": "6124:53:10",
													"nodeType": "YulBlock",
													"src": "6124:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6141:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6141:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6164:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6164:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6146:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6146:17:10"
																		},
																		"nativeSrc": "6146:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6134:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:10"
																},
																"nativeSrc": "6134:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6134:37:10"
															},
															"nativeSrc": "6134:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6134:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6059:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6112:5:10",
														"nodeType": "YulTypedName",
														"src": "6112:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6119:3:10",
														"nodeType": "YulTypedName",
														"src": "6119:3:10",
														"type": ""
													}
												],
												"src": "6059:118:10"
											},
											{
												"body": {
													"nativeSrc": "6281:124:10",
													"nodeType": "YulBlock",
													"src": "6281:124:10",
													"statements": [
														{
															"nativeSrc": "6291:26:10",
															"nodeType": "YulAssignment",
															"src": "6291:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6303:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6299:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:10"
																},
																"nativeSrc": "6299:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6299:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6291:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6384:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6395:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6395:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6380:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:10"
																		},
																		"nativeSrc": "6380:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6327:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6327:43:10"
																},
																"nativeSrc": "6327:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6327:71:10"
															},
															"nativeSrc": "6327:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6327:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6183:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6253:9:10",
														"nodeType": "YulTypedName",
														"src": "6253:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6265:6:10",
														"nodeType": "YulTypedName",
														"src": "6265:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6276:4:10",
														"nodeType": "YulTypedName",
														"src": "6276:4:10",
														"type": ""
													}
												],
												"src": "6183:222:10"
											},
											{
												"body": {
													"nativeSrc": "6477:263:10",
													"nodeType": "YulBlock",
													"src": "6477:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6523:83:10",
																"nodeType": "YulBlock",
																"src": "6523:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6525:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6525:77:10"
																			},
																			"nativeSrc": "6525:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6525:79:10"
																		},
																		"nativeSrc": "6525:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6525:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6498:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6498:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6507:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6494:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6494:3:10"
																		},
																		"nativeSrc": "6494:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6494:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6519:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6519:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6490:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:10"
																},
																"nativeSrc": "6490:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6490:32:10"
															},
															"nativeSrc": "6487:119:10",
															"nodeType": "YulIf",
															"src": "6487:119:10"
														},
														{
															"nativeSrc": "6616:117:10",
															"nodeType": "YulBlock",
															"src": "6616:117:10",
															"statements": [
																{
																	"nativeSrc": "6631:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6631:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6645:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6645:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6635:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6635:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6660:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6660:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6695:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6695:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6706:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6706:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6691:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6691:3:10"
																				},
																				"nativeSrc": "6691:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6691:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6715:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6715:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6670:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6670:20:10"
																		},
																		"nativeSrc": "6670:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6660:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6660:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6411:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6447:9:10",
														"nodeType": "YulTypedName",
														"src": "6447:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6458:7:10",
														"nodeType": "YulTypedName",
														"src": "6458:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6470:6:10",
														"nodeType": "YulTypedName",
														"src": "6470:6:10",
														"type": ""
													}
												],
												"src": "6411:329:10"
											},
											{
												"body": {
													"nativeSrc": "6829:391:10",
													"nodeType": "YulBlock",
													"src": "6829:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6875:83:10",
																"nodeType": "YulBlock",
																"src": "6875:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6877:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6877:77:10"
																			},
																			"nativeSrc": "6877:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6877:79:10"
																		},
																		"nativeSrc": "6877:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6877:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6850:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6859:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6846:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:10"
																		},
																		"nativeSrc": "6846:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6871:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6871:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6842:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:10"
																},
																"nativeSrc": "6842:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6842:32:10"
															},
															"nativeSrc": "6839:119:10",
															"nodeType": "YulIf",
															"src": "6839:119:10"
														},
														{
															"nativeSrc": "6968:117:10",
															"nodeType": "YulBlock",
															"src": "6968:117:10",
															"statements": [
																{
																	"nativeSrc": "6983:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6983:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6997:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6997:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6987:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6987:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7012:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7012:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7047:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7047:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7058:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7058:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7043:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7043:3:10"
																				},
																				"nativeSrc": "7043:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7043:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7067:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7067:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7022:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7022:20:10"
																		},
																		"nativeSrc": "7022:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7022:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7012:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7012:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7095:118:10",
															"nodeType": "YulBlock",
															"src": "7095:118:10",
															"statements": [
																{
																	"nativeSrc": "7110:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7140:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7140:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7175:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7175:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7186:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7186:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7171:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7171:3:10"
																				},
																				"nativeSrc": "7171:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7171:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7195:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7195:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7150:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7150:20:10"
																		},
																		"nativeSrc": "7150:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7140:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7140:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6746:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6791:9:10",
														"nodeType": "YulTypedName",
														"src": "6791:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6802:7:10",
														"nodeType": "YulTypedName",
														"src": "6802:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6814:6:10",
														"nodeType": "YulTypedName",
														"src": "6814:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6822:6:10",
														"nodeType": "YulTypedName",
														"src": "6822:6:10",
														"type": ""
													}
												],
												"src": "6746:474:10"
											},
											{
												"body": {
													"nativeSrc": "7266:76:10",
													"nodeType": "YulBlock",
													"src": "7266:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7320:16:10",
																"nodeType": "YulBlock",
																"src": "7320:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7329:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7329:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7332:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7332:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7322:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7322:6:10"
																			},
																			"nativeSrc": "7322:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7322:12:10"
																		},
																		"nativeSrc": "7322:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7322:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7289:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7289:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7311:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7311:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7296:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "7296:14:10"
																				},
																				"nativeSrc": "7296:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7296:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7286:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7286:2:10"
																		},
																		"nativeSrc": "7286:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7279:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:10"
																},
																"nativeSrc": "7279:40:10",
																"nodeType": "YulFunctionCall",
																"src": "7279:40:10"
															},
															"nativeSrc": "7276:60:10",
															"nodeType": "YulIf",
															"src": "7276:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7226:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7259:5:10",
														"nodeType": "YulTypedName",
														"src": "7259:5:10",
														"type": ""
													}
												],
												"src": "7226:116:10"
											},
											{
												"body": {
													"nativeSrc": "7397:84:10",
													"nodeType": "YulBlock",
													"src": "7397:84:10",
													"statements": [
														{
															"nativeSrc": "7407:29:10",
															"nodeType": "YulAssignment",
															"src": "7407:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7429:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7429:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7416:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7416:12:10"
																},
																"nativeSrc": "7416:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7416:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7407:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7407:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7469:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7469:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7445:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "7445:23:10"
																},
																"nativeSrc": "7445:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7445:30:10"
															},
															"nativeSrc": "7445:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7348:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7375:6:10",
														"nodeType": "YulTypedName",
														"src": "7375:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7383:3:10",
														"nodeType": "YulTypedName",
														"src": "7383:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7391:5:10",
														"nodeType": "YulTypedName",
														"src": "7391:5:10",
														"type": ""
													}
												],
												"src": "7348:133:10"
											},
											{
												"body": {
													"nativeSrc": "7567:388:10",
													"nodeType": "YulBlock",
													"src": "7567:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7613:83:10",
																"nodeType": "YulBlock",
																"src": "7613:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7615:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7615:77:10"
																			},
																			"nativeSrc": "7615:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7615:79:10"
																		},
																		"nativeSrc": "7615:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7615:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7588:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7588:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7597:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7584:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:10"
																		},
																		"nativeSrc": "7584:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7584:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7609:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7580:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7580:3:10"
																},
																"nativeSrc": "7580:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7580:32:10"
															},
															"nativeSrc": "7577:119:10",
															"nodeType": "YulIf",
															"src": "7577:119:10"
														},
														{
															"nativeSrc": "7706:117:10",
															"nodeType": "YulBlock",
															"src": "7706:117:10",
															"statements": [
																{
																	"nativeSrc": "7721:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7721:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7735:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7725:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7725:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7750:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7750:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7785:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7785:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7796:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7796:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7781:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7781:3:10"
																				},
																				"nativeSrc": "7781:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7781:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7805:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7805:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7760:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7760:20:10"
																		},
																		"nativeSrc": "7760:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7760:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7750:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7750:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7833:115:10",
															"nodeType": "YulBlock",
															"src": "7833:115:10",
															"statements": [
																{
																	"nativeSrc": "7848:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7848:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7862:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7852:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7852:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7878:60:10",
																	"nodeType": "YulAssignment",
																	"src": "7878:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7910:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7910:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7921:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7921:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7906:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7906:3:10"
																				},
																				"nativeSrc": "7906:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7906:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7930:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7930:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7888:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7888:17:10"
																		},
																		"nativeSrc": "7888:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7888:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7878:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7878:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7487:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7529:9:10",
														"nodeType": "YulTypedName",
														"src": "7529:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7540:7:10",
														"nodeType": "YulTypedName",
														"src": "7540:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7552:6:10",
														"nodeType": "YulTypedName",
														"src": "7552:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7560:6:10",
														"nodeType": "YulTypedName",
														"src": "7560:6:10",
														"type": ""
													}
												],
												"src": "7487:468:10"
											},
											{
												"body": {
													"nativeSrc": "8044:391:10",
													"nodeType": "YulBlock",
													"src": "8044:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8090:83:10",
																"nodeType": "YulBlock",
																"src": "8090:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8092:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8092:77:10"
																			},
																			"nativeSrc": "8092:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8092:79:10"
																		},
																		"nativeSrc": "8092:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8092:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8065:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8065:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8074:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8061:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:10"
																		},
																		"nativeSrc": "8061:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8061:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8086:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8057:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8057:3:10"
																},
																"nativeSrc": "8057:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8057:32:10"
															},
															"nativeSrc": "8054:119:10",
															"nodeType": "YulIf",
															"src": "8054:119:10"
														},
														{
															"nativeSrc": "8183:117:10",
															"nodeType": "YulBlock",
															"src": "8183:117:10",
															"statements": [
																{
																	"nativeSrc": "8198:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8198:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8212:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8212:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8202:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8202:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8227:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8227:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8262:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8262:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8273:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8273:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8258:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8258:3:10"
																				},
																				"nativeSrc": "8258:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8258:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8282:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8282:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8237:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8237:20:10"
																		},
																		"nativeSrc": "8237:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8237:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8227:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8227:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8310:118:10",
															"nodeType": "YulBlock",
															"src": "8310:118:10",
															"statements": [
																{
																	"nativeSrc": "8325:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8325:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8339:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8339:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8329:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8329:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8355:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8355:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8390:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8390:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8401:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8401:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8386:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8386:3:10"
																				},
																				"nativeSrc": "8386:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8386:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8410:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8410:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8365:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8365:20:10"
																		},
																		"nativeSrc": "8365:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8365:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8355:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8355:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7961:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8006:9:10",
														"nodeType": "YulTypedName",
														"src": "8006:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8017:7:10",
														"nodeType": "YulTypedName",
														"src": "8017:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8029:6:10",
														"nodeType": "YulTypedName",
														"src": "8029:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8037:6:10",
														"nodeType": "YulTypedName",
														"src": "8037:6:10",
														"type": ""
													}
												],
												"src": "7961:474:10"
											},
											{
												"body": {
													"nativeSrc": "8469:152:10",
													"nodeType": "YulBlock",
													"src": "8469:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8486:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8486:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8489:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8489:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:10"
																},
																"nativeSrc": "8479:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8479:88:10"
															},
															"nativeSrc": "8479:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8479:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8583:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8583:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8586:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8586:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:10"
																},
																"nativeSrc": "8576:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8576:15:10"
															},
															"nativeSrc": "8576:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8576:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8607:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8607:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8610:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8610:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8600:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:10"
																},
																"nativeSrc": "8600:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8600:15:10"
															},
															"nativeSrc": "8600:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8600:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8441:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8441:180:10"
											},
											{
												"body": {
													"nativeSrc": "8678:269:10",
													"nodeType": "YulBlock",
													"src": "8678:269:10",
													"statements": [
														{
															"nativeSrc": "8688:22:10",
															"nodeType": "YulAssignment",
															"src": "8688:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8702:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8702:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8708:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8708:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8698:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:10"
																},
																"nativeSrc": "8698:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8698:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8688:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:10"
																}
															]
														},
														{
															"nativeSrc": "8719:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8719:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8749:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8749:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8755:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8745:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8745:3:10"
																},
																"nativeSrc": "8745:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8745:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8723:18:10",
																	"nodeType": "YulTypedName",
																	"src": "8723:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8796:51:10",
																"nodeType": "YulBlock",
																"src": "8796:51:10",
																"statements": [
																	{
																		"nativeSrc": "8810:27:10",
																		"nodeType": "YulAssignment",
																		"src": "8810:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8824:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8824:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8832:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8832:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8820:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8820:3:10"
																			},
																			"nativeSrc": "8820:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8820:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8810:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8810:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8776:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8776:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8769:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:10"
																},
																"nativeSrc": "8769:26:10",
																"nodeType": "YulFunctionCall",
																"src": "8769:26:10"
															},
															"nativeSrc": "8766:81:10",
															"nodeType": "YulIf",
															"src": "8766:81:10"
														},
														{
															"body": {
																"nativeSrc": "8899:42:10",
																"nodeType": "YulBlock",
																"src": "8899:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8913:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8913:16:10"
																			},
																			"nativeSrc": "8913:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8913:18:10"
																		},
																		"nativeSrc": "8913:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8913:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8863:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8863:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8886:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8886:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8894:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8894:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8883:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8883:2:10"
																		},
																		"nativeSrc": "8883:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8883:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8860:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8860:2:10"
																},
																"nativeSrc": "8860:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8860:38:10"
															},
															"nativeSrc": "8857:84:10",
															"nodeType": "YulIf",
															"src": "8857:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8627:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8662:4:10",
														"nodeType": "YulTypedName",
														"src": "8662:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8671:6:10",
														"nodeType": "YulTypedName",
														"src": "8671:6:10",
														"type": ""
													}
												],
												"src": "8627:320:10"
											},
											{
												"body": {
													"nativeSrc": "9006:32:10",
													"nodeType": "YulBlock",
													"src": "9006:32:10",
													"statements": [
														{
															"nativeSrc": "9016:16:10",
															"nodeType": "YulAssignment",
															"src": "9016:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "9027:5:10",
																"nodeType": "YulIdentifier",
																"src": "9027:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9016:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9016:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "8953:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8988:5:10",
														"nodeType": "YulTypedName",
														"src": "8988:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8998:7:10",
														"nodeType": "YulTypedName",
														"src": "8998:7:10",
														"type": ""
													}
												],
												"src": "8953:85:10"
											},
											{
												"body": {
													"nativeSrc": "9112:90:10",
													"nodeType": "YulBlock",
													"src": "9112:90:10",
													"statements": [
														{
															"nativeSrc": "9122:74:10",
															"nodeType": "YulAssignment",
															"src": "9122:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9188:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9188:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9162:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "9162:25:10"
																				},
																				"nativeSrc": "9162:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9162:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9153:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "9153:8:10"
																		},
																		"nativeSrc": "9153:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9153:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9135:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9135:17:10"
																},
																"nativeSrc": "9135:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9135:61:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9122:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9122:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9044:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:10",
														"nodeType": "YulTypedName",
														"src": "9092:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9102:9:10",
														"nodeType": "YulTypedName",
														"src": "9102:9:10",
														"type": ""
													}
												],
												"src": "9044:158:10"
											},
											{
												"body": {
													"nativeSrc": "9281:74:10",
													"nodeType": "YulBlock",
													"src": "9281:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9298:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9298:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9342:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9342:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9303:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "9303:38:10"
																		},
																		"nativeSrc": "9303:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9303:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9291:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:10"
																},
																"nativeSrc": "9291:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9291:58:10"
															},
															"nativeSrc": "9291:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9291:58:10"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9208:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9269:5:10",
														"nodeType": "YulTypedName",
														"src": "9269:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9276:3:10",
														"nodeType": "YulTypedName",
														"src": "9276:3:10",
														"type": ""
													}
												],
												"src": "9208:147:10"
											},
											{
												"body": {
													"nativeSrc": "9615:553:10",
													"nodeType": "YulBlock",
													"src": "9615:553:10",
													"statements": [
														{
															"nativeSrc": "9625:27:10",
															"nodeType": "YulAssignment",
															"src": "9625:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9637:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9637:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9648:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9648:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:10"
																},
																"nativeSrc": "9633:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9633:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9625:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9625:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9730:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9730:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9715:3:10"
																		},
																		"nativeSrc": "9715:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9715:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9662:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9662:43:10"
																},
																"nativeSrc": "9662:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9662:71:10"
															},
															"nativeSrc": "9662:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9662:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9787:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9787:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9800:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9800:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9811:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9811:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:10"
																		},
																		"nativeSrc": "9796:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9743:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9743:43:10"
																},
																"nativeSrc": "9743:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9743:72:10"
															},
															"nativeSrc": "9743:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9743:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9877:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9877:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9890:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9890:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9901:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9901:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9886:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9886:3:10"
																		},
																		"nativeSrc": "9886:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9886:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9825:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "9825:51:10"
																},
																"nativeSrc": "9825:80:10",
																"nodeType": "YulFunctionCall",
																"src": "9825:80:10"
															},
															"nativeSrc": "9825:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "9825:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9967:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9967:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9980:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9991:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9991:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9976:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:10"
																		},
																		"nativeSrc": "9976:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9976:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9915:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "9915:51:10"
																},
																"nativeSrc": "9915:80:10",
																"nodeType": "YulFunctionCall",
																"src": "9915:80:10"
															},
															"nativeSrc": "9915:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "9915:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10049:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10049:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10062:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10062:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10073:3:10",
																				"nodeType": "YulLiteral",
																				"src": "10073:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10058:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10058:3:10"
																		},
																		"nativeSrc": "10058:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10058:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10005:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10005:43:10"
																},
																"nativeSrc": "10005:73:10",
																"nodeType": "YulFunctionCall",
																"src": "10005:73:10"
															},
															"nativeSrc": "10005:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "10005:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10132:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10132:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10145:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10156:3:10",
																				"nodeType": "YulLiteral",
																				"src": "10156:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10141:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:10"
																		},
																		"nativeSrc": "10141:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10141:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10088:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10088:43:10"
																},
																"nativeSrc": "10088:73:10",
																"nodeType": "YulFunctionCall",
																"src": "10088:73:10"
															},
															"nativeSrc": "10088:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "10088:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9361:807:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9547:9:10",
														"nodeType": "YulTypedName",
														"src": "9547:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9559:6:10",
														"nodeType": "YulTypedName",
														"src": "9559:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9567:6:10",
														"nodeType": "YulTypedName",
														"src": "9567:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9575:6:10",
														"nodeType": "YulTypedName",
														"src": "9575:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9583:6:10",
														"nodeType": "YulTypedName",
														"src": "9583:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9591:6:10",
														"nodeType": "YulTypedName",
														"src": "9591:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9599:6:10",
														"nodeType": "YulTypedName",
														"src": "9599:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9610:4:10",
														"nodeType": "YulTypedName",
														"src": "9610:4:10",
														"type": ""
													}
												],
												"src": "9361:807:10"
											},
											{
												"body": {
													"nativeSrc": "10237:80:10",
													"nodeType": "YulBlock",
													"src": "10237:80:10",
													"statements": [
														{
															"nativeSrc": "10247:22:10",
															"nodeType": "YulAssignment",
															"src": "10247:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10262:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10262:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10256:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10256:5:10"
																},
																"nativeSrc": "10256:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10256:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10247:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10247:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10305:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10305:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10278:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "10278:26:10"
																},
																"nativeSrc": "10278:33:10",
																"nodeType": "YulFunctionCall",
																"src": "10278:33:10"
															},
															"nativeSrc": "10278:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "10278:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10174:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10215:6:10",
														"nodeType": "YulTypedName",
														"src": "10215:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10223:3:10",
														"nodeType": "YulTypedName",
														"src": "10223:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10231:5:10",
														"nodeType": "YulTypedName",
														"src": "10231:5:10",
														"type": ""
													}
												],
												"src": "10174:143:10"
											},
											{
												"body": {
													"nativeSrc": "10434:552:10",
													"nodeType": "YulBlock",
													"src": "10434:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10480:83:10",
																"nodeType": "YulBlock",
																"src": "10480:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10482:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10482:77:10"
																			},
																			"nativeSrc": "10482:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10482:79:10"
																		},
																		"nativeSrc": "10482:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10455:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10455:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10464:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10464:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10451:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10451:3:10"
																		},
																		"nativeSrc": "10451:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10451:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10476:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10447:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10447:3:10"
																},
																"nativeSrc": "10447:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10447:32:10"
															},
															"nativeSrc": "10444:119:10",
															"nodeType": "YulIf",
															"src": "10444:119:10"
														},
														{
															"nativeSrc": "10573:128:10",
															"nodeType": "YulBlock",
															"src": "10573:128:10",
															"statements": [
																{
																	"nativeSrc": "10588:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10588:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10602:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10602:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10592:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10592:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10617:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10617:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10663:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10663:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10674:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10674:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10659:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10659:3:10"
																				},
																				"nativeSrc": "10659:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10659:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10683:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10683:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10627:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10627:31:10"
																		},
																		"nativeSrc": "10627:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10627:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10617:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10617:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10711:129:10",
															"nodeType": "YulBlock",
															"src": "10711:129:10",
															"statements": [
																{
																	"nativeSrc": "10726:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10726:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10740:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10730:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10730:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10756:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10756:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10802:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10802:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10813:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10813:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10798:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10798:3:10"
																				},
																				"nativeSrc": "10798:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10798:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10822:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10822:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10766:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10766:31:10"
																		},
																		"nativeSrc": "10766:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10766:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10756:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10756:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10850:129:10",
															"nodeType": "YulBlock",
															"src": "10850:129:10",
															"statements": [
																{
																	"nativeSrc": "10865:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10865:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10879:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10879:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10869:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10869:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10895:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10895:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10941:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10941:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10952:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10952:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10937:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10937:3:10"
																				},
																				"nativeSrc": "10937:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10937:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10961:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10961:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10905:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10905:31:10"
																		},
																		"nativeSrc": "10905:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10895:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10895:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "10323:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10388:9:10",
														"nodeType": "YulTypedName",
														"src": "10388:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10399:7:10",
														"nodeType": "YulTypedName",
														"src": "10399:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10411:6:10",
														"nodeType": "YulTypedName",
														"src": "10411:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10419:6:10",
														"nodeType": "YulTypedName",
														"src": "10419:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10427:6:10",
														"nodeType": "YulTypedName",
														"src": "10427:6:10",
														"type": ""
													}
												],
												"src": "10323:663:10"
											},
											{
												"body": {
													"nativeSrc": "11118:206:10",
													"nodeType": "YulBlock",
													"src": "11118:206:10",
													"statements": [
														{
															"nativeSrc": "11128:26:10",
															"nodeType": "YulAssignment",
															"src": "11128:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11140:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11140:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11151:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11151:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11136:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:10"
																},
																"nativeSrc": "11136:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11136:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11128:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11128:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11208:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11208:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11221:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11221:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11232:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11232:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11217:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:10"
																		},
																		"nativeSrc": "11217:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11217:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11164:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11164:43:10"
																},
																"nativeSrc": "11164:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11164:71:10"
															},
															"nativeSrc": "11164:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11164:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11289:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11289:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11302:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11302:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11313:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11313:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11298:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:10"
																		},
																		"nativeSrc": "11298:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11298:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11245:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11245:43:10"
																},
																"nativeSrc": "11245:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11245:72:10"
															},
															"nativeSrc": "11245:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11245:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10992:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11082:9:10",
														"nodeType": "YulTypedName",
														"src": "11082:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11094:6:10",
														"nodeType": "YulTypedName",
														"src": "11094:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11102:6:10",
														"nodeType": "YulTypedName",
														"src": "11102:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11113:4:10",
														"nodeType": "YulTypedName",
														"src": "11113:4:10",
														"type": ""
													}
												],
												"src": "10992:332:10"
											},
											{
												"body": {
													"nativeSrc": "11358:152:10",
													"nodeType": "YulBlock",
													"src": "11358:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11375:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11375:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11378:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11378:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11368:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11368:6:10"
																},
																"nativeSrc": "11368:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11368:88:10"
															},
															"nativeSrc": "11368:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11368:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11472:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11472:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11475:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11475:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11465:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11465:6:10"
																},
																"nativeSrc": "11465:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11465:15:10"
															},
															"nativeSrc": "11465:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11465:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11496:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11496:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11499:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11499:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11489:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:10"
																},
																"nativeSrc": "11489:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11489:15:10"
															},
															"nativeSrc": "11489:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11489:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11330:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11330:180:10"
											},
											{
												"body": {
													"nativeSrc": "11564:362:10",
													"nodeType": "YulBlock",
													"src": "11564:362:10",
													"statements": [
														{
															"nativeSrc": "11574:25:10",
															"nodeType": "YulAssignment",
															"src": "11574:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11597:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11597:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11579:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11579:17:10"
																},
																"nativeSrc": "11579:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11579:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11574:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11574:1:10"
																}
															]
														},
														{
															"nativeSrc": "11608:25:10",
															"nodeType": "YulAssignment",
															"src": "11608:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11631:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11631:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11613:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11613:17:10"
																},
																"nativeSrc": "11613:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11613:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11608:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11608:1:10"
																}
															]
														},
														{
															"nativeSrc": "11642:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11642:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11665:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11665:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11668:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11668:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11661:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:10"
																},
																"nativeSrc": "11661:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11661:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11646:11:10",
																	"nodeType": "YulTypedName",
																	"src": "11646:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11679:41:10",
															"nodeType": "YulAssignment",
															"src": "11679:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11708:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "11708:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11690:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11690:17:10"
																},
																"nativeSrc": "11690:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11690:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11679:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "11679:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11897:22:10",
																"nodeType": "YulBlock",
																"src": "11897:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11899:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11899:16:10"
																			},
																			"nativeSrc": "11899:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11899:18:10"
																		},
																		"nativeSrc": "11899:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11899:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11830:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11830:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11823:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11823:6:10"
																				},
																				"nativeSrc": "11823:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11823:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11853:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11853:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11860:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "11860:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11869:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "11869:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11856:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11856:3:10"
																						},
																						"nativeSrc": "11856:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11856:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11850:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "11850:2:10"
																				},
																				"nativeSrc": "11850:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11850:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11803:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11803:2:10"
																		},
																		"nativeSrc": "11803:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11803:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11783:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11783:6:10"
																},
																"nativeSrc": "11783:113:10",
																"nodeType": "YulFunctionCall",
																"src": "11783:113:10"
															},
															"nativeSrc": "11780:139:10",
															"nodeType": "YulIf",
															"src": "11780:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11516:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11547:1:10",
														"nodeType": "YulTypedName",
														"src": "11547:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11550:1:10",
														"nodeType": "YulTypedName",
														"src": "11550:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11556:7:10",
														"nodeType": "YulTypedName",
														"src": "11556:7:10",
														"type": ""
													}
												],
												"src": "11516:410:10"
											},
											{
												"body": {
													"nativeSrc": "11960:152:10",
													"nodeType": "YulBlock",
													"src": "11960:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11977:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11977:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11980:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11980:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11970:6:10"
																},
																"nativeSrc": "11970:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11970:88:10"
															},
															"nativeSrc": "11970:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11970:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12074:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12074:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12077:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12077:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12067:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12067:6:10"
																},
																"nativeSrc": "12067:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12067:15:10"
															},
															"nativeSrc": "12067:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12067:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12098:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12098:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12101:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12101:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12091:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12091:6:10"
																},
																"nativeSrc": "12091:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12091:15:10"
															},
															"nativeSrc": "12091:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12091:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11932:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11932:180:10"
											},
											{
												"body": {
													"nativeSrc": "12160:143:10",
													"nodeType": "YulBlock",
													"src": "12160:143:10",
													"statements": [
														{
															"nativeSrc": "12170:25:10",
															"nodeType": "YulAssignment",
															"src": "12170:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12193:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12193:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12175:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12175:17:10"
																},
																"nativeSrc": "12175:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12175:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12170:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12170:1:10"
																}
															]
														},
														{
															"nativeSrc": "12204:25:10",
															"nodeType": "YulAssignment",
															"src": "12204:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12227:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12227:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12209:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12209:17:10"
																},
																"nativeSrc": "12209:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12209:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12204:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12204:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12251:22:10",
																"nodeType": "YulBlock",
																"src": "12251:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12253:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12253:16:10"
																			},
																			"nativeSrc": "12253:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12253:18:10"
																		},
																		"nativeSrc": "12253:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12253:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12248:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12248:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12241:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12241:6:10"
																},
																"nativeSrc": "12241:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12241:9:10"
															},
															"nativeSrc": "12238:35:10",
															"nodeType": "YulIf",
															"src": "12238:35:10"
														},
														{
															"nativeSrc": "12283:14:10",
															"nodeType": "YulAssignment",
															"src": "12283:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12292:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12292:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12295:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12295:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12288:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12288:3:10"
																},
																"nativeSrc": "12288:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12288:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12283:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12283:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12118:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12149:1:10",
														"nodeType": "YulTypedName",
														"src": "12149:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12152:1:10",
														"nodeType": "YulTypedName",
														"src": "12152:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12158:1:10",
														"nodeType": "YulTypedName",
														"src": "12158:1:10",
														"type": ""
													}
												],
												"src": "12118:185:10"
											},
											{
												"body": {
													"nativeSrc": "12354:149:10",
													"nodeType": "YulBlock",
													"src": "12354:149:10",
													"statements": [
														{
															"nativeSrc": "12364:25:10",
															"nodeType": "YulAssignment",
															"src": "12364:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12387:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12387:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12369:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12369:17:10"
																},
																"nativeSrc": "12369:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12369:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12364:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12364:1:10"
																}
															]
														},
														{
															"nativeSrc": "12398:25:10",
															"nodeType": "YulAssignment",
															"src": "12398:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12421:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12421:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12403:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12403:17:10"
																},
																"nativeSrc": "12403:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12403:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12398:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12398:1:10"
																}
															]
														},
														{
															"nativeSrc": "12432:17:10",
															"nodeType": "YulAssignment",
															"src": "12432:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12444:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12444:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12447:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12447:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12440:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12440:3:10"
																},
																"nativeSrc": "12440:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12440:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12432:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12432:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12474:22:10",
																"nodeType": "YulBlock",
																"src": "12474:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12476:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12476:16:10"
																			},
																			"nativeSrc": "12476:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12476:18:10"
																		},
																		"nativeSrc": "12476:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12476:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12465:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12465:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12471:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12471:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12462:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12462:2:10"
																},
																"nativeSrc": "12462:11:10",
																"nodeType": "YulFunctionCall",
																"src": "12462:11:10"
															},
															"nativeSrc": "12459:37:10",
															"nodeType": "YulIf",
															"src": "12459:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12309:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12340:1:10",
														"nodeType": "YulTypedName",
														"src": "12340:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12343:1:10",
														"nodeType": "YulTypedName",
														"src": "12343:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12349:4:10",
														"nodeType": "YulTypedName",
														"src": "12349:4:10",
														"type": ""
													}
												],
												"src": "12309:194:10"
											},
											{
												"body": {
													"nativeSrc": "12553:147:10",
													"nodeType": "YulBlock",
													"src": "12553:147:10",
													"statements": [
														{
															"nativeSrc": "12563:25:10",
															"nodeType": "YulAssignment",
															"src": "12563:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12586:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12586:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12568:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12568:17:10"
																},
																"nativeSrc": "12568:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12568:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12563:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12563:1:10"
																}
															]
														},
														{
															"nativeSrc": "12597:25:10",
															"nodeType": "YulAssignment",
															"src": "12597:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12620:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12620:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12602:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12602:17:10"
																},
																"nativeSrc": "12602:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12602:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12597:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12597:1:10"
																}
															]
														},
														{
															"nativeSrc": "12631:16:10",
															"nodeType": "YulAssignment",
															"src": "12631:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12642:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12642:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12645:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12645:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12638:3:10"
																},
																"nativeSrc": "12638:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12638:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12631:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12671:22:10",
																"nodeType": "YulBlock",
																"src": "12671:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12673:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12673:16:10"
																			},
																			"nativeSrc": "12673:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12673:18:10"
																		},
																		"nativeSrc": "12673:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12673:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12663:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12663:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12666:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12666:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12660:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12660:2:10"
																},
																"nativeSrc": "12660:10:10",
																"nodeType": "YulFunctionCall",
																"src": "12660:10:10"
															},
															"nativeSrc": "12657:36:10",
															"nodeType": "YulIf",
															"src": "12657:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12509:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12540:1:10",
														"nodeType": "YulTypedName",
														"src": "12540:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12543:1:10",
														"nodeType": "YulTypedName",
														"src": "12543:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12549:3:10",
														"nodeType": "YulTypedName",
														"src": "12549:3:10",
														"type": ""
													}
												],
												"src": "12509:191:10"
											},
											{
												"body": {
													"nativeSrc": "12860:288:10",
													"nodeType": "YulBlock",
													"src": "12860:288:10",
													"statements": [
														{
															"nativeSrc": "12870:26:10",
															"nodeType": "YulAssignment",
															"src": "12870:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12882:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12882:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12878:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12878:3:10"
																},
																"nativeSrc": "12878:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12878:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12870:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12870:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12950:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12950:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12963:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12963:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12974:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12974:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12959:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12959:3:10"
																		},
																		"nativeSrc": "12959:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12959:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12906:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12906:43:10"
																},
																"nativeSrc": "12906:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12906:71:10"
															},
															"nativeSrc": "12906:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12906:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13031:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13031:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13044:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13055:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13055:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13040:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:10"
																		},
																		"nativeSrc": "13040:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13040:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12987:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12987:43:10"
																},
																"nativeSrc": "12987:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12987:72:10"
															},
															"nativeSrc": "12987:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12987:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13113:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13113:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13126:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13126:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13137:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13137:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:10"
																		},
																		"nativeSrc": "13122:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13122:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13069:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13069:43:10"
																},
																"nativeSrc": "13069:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13069:72:10"
															},
															"nativeSrc": "13069:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13069:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12706:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12816:9:10",
														"nodeType": "YulTypedName",
														"src": "12816:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12828:6:10",
														"nodeType": "YulTypedName",
														"src": "12828:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12836:6:10",
														"nodeType": "YulTypedName",
														"src": "12836:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12844:6:10",
														"nodeType": "YulTypedName",
														"src": "12844:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12855:4:10",
														"nodeType": "YulTypedName",
														"src": "12855:4:10",
														"type": ""
													}
												],
												"src": "12706:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1392_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1392_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1392_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1392__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1392_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061018c575f3560e01c806370a08231116100dc578063c647b20e11610095578063cb4ca6311161006f578063cb4ca6311461044e578063cc1776d31461047e578063dd62ed3e1461049c578063f2fde38b146104cc5761018c565b8063c647b20e146103f8578063c6a3064714610414578063c816841b146104305761018c565b806370a0823114610336578063715018a6146103665780638da5cb5b1461037057806395d89b411461038e578063a9059cbb146103ac578063beabacc8146103dc5761018c565b80632431ba7311610149578063337270771161012357806333727077146102c05780634e6fd6c4146102de5780634f7041a5146102fc57806351c6590a1461031a5761018c565b80632431ba73146102685780632e1a7d4d14610286578063313ce567146102a25761018c565b806305bf0a541461019057806306fdde03146101ae578063095ea7b3146101cc57806315291cd4146101fc57806318160ddd1461021a57806323b872dd14610238575b5f5ffd5b6101986104e8565b6040516101a5919061169e565b60405180910390f35b6101b66104ee565b6040516101c39190611727565b60405180910390f35b6101e660048036038101906101e191906117cf565b61057e565b6040516101f39190611827565b60405180910390f35b6102046105a0565b604051610211919061169e565b60405180910390f35b6102226105a6565b60405161022f919061169e565b60405180910390f35b610252600480360381019061024d9190611840565b6105af565b60405161025f9190611827565b60405180910390f35b6102706105dd565b60405161027d91906118eb565b60405180910390f35b6102a0600480360381019061029b9190611904565b610602565b005b6102aa6106fb565b6040516102b7919061194a565b60405180910390f35b6102c8610703565b6040516102d5919061169e565b60405180910390f35b6102e6610709565b6040516102f39190611972565b60405180910390f35b61030461070f565b604051610311919061169e565b60405180910390f35b610334600480360381019061032f9190611904565b610715565b005b610350600480360381019061034b919061198b565b61086e565b60405161035d919061169e565b60405180910390f35b61036e6108b3565b005b6103786108c6565b6040516103859190611972565b60405180910390f35b6103966108ee565b6040516103a39190611727565b60405180910390f35b6103c660048036038101906103c191906117cf565b61097e565b6040516103d39190611827565b60405180910390f35b6103f660048036038101906103f19190611840565b6109a0565b005b610412600480360381019061040d91906119b6565b610d29565b005b61042e60048036038101906104299190611a1e565b610d8b565b005b610438610deb565b6040516104459190611972565b60405180910390f35b6104686004803603810190610463919061198b565b610e10565b6040516104759190611827565b60405180910390f35b610486610e2d565b604051610493919061169e565b60405180910390f35b6104b660048036038101906104b19190611a5c565b610e33565b6040516104c3919061169e565b60405180910390f35b6104e660048036038101906104e1919061198b565b610eb5565b005b60095481565b6060600380546104fd90611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611ac7565b80156105745780601f1061054b57610100808354040283529160200191610574565b820191905f5260205f20905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b5f5f610588610f39565b9050610595818585610f40565b600191505092915050565b60085481565b5f600254905090565b5f5f6105b9610f39565b90506105c6858285610f52565b6105d1858585610fe5565b60019150509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060a6110d5565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361066f576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781116106a8576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506106b46108c6565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106f6573d5f5f3e3d5ffd5b505050565b5f6012905090565b600a5481565b61dead81565b60065481565b61071d6110d5565b5f8111610756576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078230600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610f40565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6107cc6108c6565b426040518863ffffffff1660e01b81526004016107ee96959493929190611b30565b60606040518083038185885af115801561080a573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061082f9190611ba3565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8147604051610863929190611bf3565b60405180910390a150565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108bb6110d5565b6108c45f61115c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108fd90611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461092990611ac7565b80156109745780601f1061094b57610100808354040283529160200191610974565b820191905f5260205f20905b81548152906001019060200180831161095757829003601f168201915b5050505050905090565b5f5f610988610f39565b9050610995818585610fe5565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a05576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6a576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610b055750600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610b1a57610b15838383610fe5565b610d24565b5f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610be857606460065485610bd79190611c47565b610be19190611cb5565b9050610c0c565b8115610c0b57606460075485610bfe9190611c47565b610c089190611cb5565b90505b5b5f8185610c199190611ce5565b90508181610c279190611d18565b8514610c5f576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610d1457610c72873084610fe5565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610ca1919061169e565b60405180910390a15f606460085484610cba9190611c47565b610cc49190611cb5565b90505f606460095485610cd79190611c47565b610ce19190611cb5565b90505f818386610cf19190611ce5565b610cfb9190611ce5565b90505f821115610d1057610d0f308361121f565b5b5050505b610d1f878783610fe5565b505050505b505050565b610d316110d5565b600a8211158015610d43575060148111155b610d79576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600681905550806007819055505050565b610d936110d5565b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052805f5260405f205f915054906101000a900460ff1681565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ebd6110d5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f249190611972565b60405180910390fd5b610f368161115c565b50565b5f33905090565b610f4d838383600161129e565b505050565b5f610f5d8484610e33565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610fdf5781811015610fd0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fc793929190611d4b565b60405180910390fd5b610fde84848484035f61129e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611055575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161104c9190611972565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110bc9190611972565b60405180910390fd5b6110d083838361146d565b505050565b6110dd610f39565b73ffffffffffffffffffffffffffffffffffffffff166110fb6108c6565b73ffffffffffffffffffffffffffffffffffffffff161461115a5761111e610f39565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111519190611972565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361128f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112869190611972565b60405180910390fd5b61129a825f8361146d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361130e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113059190611972565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361137e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113759190611972565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611467578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161145e919061169e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114bd578060025f8282546114b19190611d18565b9250508190555061158b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611546578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161153d93929190611d4b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115d2578060025f828254039250508190555061161c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611679919061169e565b60405180910390a3505050565b5f819050919050565b61169881611686565b82525050565b5f6020820190506116b15f83018461168f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116f9826116b7565b61170381856116c1565b93506117138185602086016116d1565b61171c816116df565b840191505092915050565b5f6020820190508181035f83015261173f81846116ef565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117748261174b565b9050919050565b6117848161176a565b811461178e575f5ffd5b50565b5f8135905061179f8161177b565b92915050565b6117ae81611686565b81146117b8575f5ffd5b50565b5f813590506117c9816117a5565b92915050565b5f5f604083850312156117e5576117e4611747565b5b5f6117f285828601611791565b9250506020611803858286016117bb565b9150509250929050565b5f8115159050919050565b6118218161180d565b82525050565b5f60208201905061183a5f830184611818565b92915050565b5f5f5f6060848603121561185757611856611747565b5b5f61186486828701611791565b935050602061187586828701611791565b9250506040611886868287016117bb565b9150509250925092565b5f819050919050565b5f6118b36118ae6118a98461174b565b611890565b61174b565b9050919050565b5f6118c482611899565b9050919050565b5f6118d5826118ba565b9050919050565b6118e5816118cb565b82525050565b5f6020820190506118fe5f8301846118dc565b92915050565b5f6020828403121561191957611918611747565b5b5f611926848285016117bb565b91505092915050565b5f60ff82169050919050565b6119448161192f565b82525050565b5f60208201905061195d5f83018461193b565b92915050565b61196c8161176a565b82525050565b5f6020820190506119855f830184611963565b92915050565b5f602082840312156119a05761199f611747565b5b5f6119ad84828501611791565b91505092915050565b5f5f604083850312156119cc576119cb611747565b5b5f6119d9858286016117bb565b92505060206119ea858286016117bb565b9150509250929050565b6119fd8161180d565b8114611a07575f5ffd5b50565b5f81359050611a18816119f4565b92915050565b5f5f60408385031215611a3457611a33611747565b5b5f611a4185828601611791565b9250506020611a5285828601611a0a565b9150509250929050565b5f5f60408385031215611a7257611a71611747565b5b5f611a7f85828601611791565b9250506020611a9085828601611791565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ade57607f821691505b602082108103611af157611af0611a9a565b5b50919050565b5f819050919050565b5f611b1a611b15611b1084611af7565b611890565b611686565b9050919050565b611b2a81611b00565b82525050565b5f60c082019050611b435f830189611963565b611b50602083018861168f565b611b5d6040830187611b21565b611b6a6060830186611b21565b611b776080830185611963565b611b8460a083018461168f565b979650505050505050565b5f81519050611b9d816117a5565b92915050565b5f5f5f60608486031215611bba57611bb9611747565b5b5f611bc786828701611b8f565b9350506020611bd886828701611b8f565b9250506040611be986828701611b8f565b9150509250925092565b5f604082019050611c065f83018561168f565b611c13602083018461168f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c5182611686565b9150611c5c83611686565b9250828202611c6a81611686565b91508282048414831517611c8157611c80611c1a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611cbf82611686565b9150611cca83611686565b925082611cda57611cd9611c88565b5b828204905092915050565b5f611cef82611686565b9150611cfa83611686565b9250828203905081811115611d1257611d11611c1a565b5b92915050565b5f611d2282611686565b9150611d2d83611686565b9250828201905080821115611d4557611d44611c1a565b5b92915050565b5f606082019050611d5e5f830186611963565b611d6b602083018561168f565b611d78604083018461168f565b94935050505056fea26469706673582212209d2de35fc274d5b4b159b13db6189775216a40dcbf5a87bc43b901f5bea78b0664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC647B20E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC647B20E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x430 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x3DC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x33727077 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x31A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x8B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x588 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x595 DUP2 DUP6 DUP6 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x5D1 DUP6 DUP6 DUP6 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60A PUSH2 0x10D5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x6B4 PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71D PUSH2 0x10D5 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x782 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x7CC PUSH2 0x8C6 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x863 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x8C4 PUSH0 PUSH2 0x115C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8FD SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x929 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x974 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x974 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x957 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x988 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP PUSH2 0x995 DUP2 DUP6 DUP6 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB05 JUMPI POP PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB15 DUP4 DUP4 DUP4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x64 PUSH1 0x6 SLOAD DUP6 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xC0C JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC0B JUMPI PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST DUP6 EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xC72 DUP8 ADDRESS DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F ADDRESS DUP4 PUSH2 0x121F JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST PUSH2 0xD1F DUP8 DUP8 DUP4 PUSH2 0xFE5 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD31 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD93 PUSH2 0x10D5 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x10D5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF36 DUP2 PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x129E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF5D DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFDF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x129E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1055 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP4 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10DD PUSH2 0xF39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FB PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115A JUMPI PUSH2 0x111E PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x128F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129A DUP3 PUSH0 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1467 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x158B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1546 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1679 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1698 DUP2 PUSH2 0x1686 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F9 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1703 DUP2 DUP6 PUSH2 0x16C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1713 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x173F DUP2 DUP5 PUSH2 0x16EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1774 DUP3 PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1784 DUP2 PUSH2 0x176A JUMP JUMPDEST DUP2 EQ PUSH2 0x178E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179F DUP2 PUSH2 0x177B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x1686 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C9 DUP2 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1803 DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183A PUSH0 DUP4 ADD DUP5 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1875 DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B3 PUSH2 0x18AE PUSH2 0x18A9 DUP5 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 DUP3 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FE PUSH0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1919 JUMPI PUSH2 0x1918 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1926 DUP5 DUP3 DUP6 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1944 DUP2 PUSH2 0x192F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x195D PUSH0 DUP4 ADD DUP5 PUSH2 0x193B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x176A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1985 PUSH0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH2 0x199F PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AD DUP5 DUP3 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CC JUMPI PUSH2 0x19CB PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D9 DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EA DUP6 DUP3 DUP7 ADD PUSH2 0x17BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x180D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A07 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A18 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7F DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ADE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1A PUSH2 0x1B15 PUSH2 0x1B10 DUP5 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH0 DUP4 ADD DUP10 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1B5D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B6A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1B84 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1747 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C06 PUSH0 DUP4 ADD DUP6 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1C13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C6A DUP2 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCA DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEF DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFA DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D22 DUP3 PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2D DUP4 PUSH2 0x1686 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D5E PUSH0 DUP4 ADD DUP7 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1D6B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x1D78 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x168F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x2D 0xE3 PUSH0 0xC2 PUSH21 0xD5B4B159B13DB6189775216A40DCBF5A87BC43B901 CREATE2 0xBE 0xA7 DUP12 MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "322:3723:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;619:34:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:39:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3401:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:32:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;816:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;553:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2897:496;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1572:1317:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3841:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3702:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;783:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;906:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;585:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;660:29:9;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;619:34:9:-;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;737:39:9:-;;;;;;;;;;;;;:::o;3401:293::-;1531:13:0;:11;:13::i;:::-;3495:1:9::1;3473:24;;:10;:24;;::::0;3465:51:::1;;;;;;;;;;;;;;;;;3544:21;3535:6;:30;3527:60;;;;;;;;;;;;;;;;;3600:15;3618:21;3600:39;;3660:7;:5;:7::i;:::-;3652:25;;:34;3678:7;3652:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:240;3401:293:::0;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;696:32:9:-;;;;:::o;816:81::-;855:42;816:81;:::o;553:25::-;;;;:::o;2897:496::-;1531:13:0;:11;:13::i;:::-;2992:1:9::1;2978:11;:15;2970:53;;;;;;;;;;;;;;;;;3036:60;3053:4;3068:13;;;;;;;;;;;3084:11;3036:8;:60::i;:::-;3109:13;;;;;;;;;;;:29;;;3146:21;3191:4;3211:11;3237:1;3253;3269:7;:5;:7::i;:::-;3291:15;3109:208;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3335:50;3350:11;3363:21;3335:50;;;;;;;:::i;:::-;;;;;;;;2897:496:::0;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1572:1317:9:-;1686:1;1668:20;;:6;:20;;;1660:49;;;;;;;;;;;;;;;;;1749:1;1728:23;;:9;:23;;;1720:50;;;;;;;;;;;;;;;;;1787:17;:25;1805:6;1787:25;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;1816:17;:28;1834:9;1816:28;;;;;;;;;;;;;;;;;;;;;;;;;1787:57;1783:153;;;1861:42;1877:6;1885:9;1896:6;1861:15;:42::i;:::-;1918:7;;1783:153;1948:10;1974:11;;;;;;;;;;;1961:24;;:9;:24;;;1948:37;;1996:11;2020;;;;;;;;;;;2010:21;;:6;:21;;;1996:35;;2044:17;2075:5;2072:151;;;2129:3;2119:6;;2110;:15;;;;:::i;:::-;2109:23;;;;:::i;:::-;2097:35;;2072:151;;;2152:6;2149:74;;;2208:3;2197:7;;2188:6;:16;;;;:::i;:::-;2187:24;;;;:::i;:::-;2175:36;;2149:74;2072:151;2235:17;2264:9;2255:6;:18;;;;:::i;:::-;2235:38;;2314:9;2302;:21;;;;:::i;:::-;2292:6;:31;2284:59;;;;;;;;;;;;;;;;;2372:1;2360:9;:13;2356:468;;;2390:49;2406:6;2422:4;2429:9;2390:15;:49::i;:::-;2459:23;2472:9;2459:23;;;;;;:::i;:::-;;;;;;;;2499;2556:3;2538:14;;2526:9;:26;;;;:::i;:::-;2525:34;;;;:::i;:::-;2499:60;;2574:18;2621:3;2608:9;;2596;:21;;;;:::i;:::-;2595:29;;;;:::i;:::-;2574:50;;2639:21;2693:10;2675:15;2663:9;:27;;;;:::i;:::-;:40;;;;:::i;:::-;2639:64;;2737:1;2724:10;:14;2720:93;;;2759:38;2779:4;2786:10;2759:11;:38::i;:::-;2720:93;2375:449;;;2356:468;2836:45;2852:6;2860:9;2871;2836:15;:45::i;:::-;1649:1240;;;;1572:1317;;;;:::o;3841:201::-;1531:13:0;:11;:13::i;:::-;3943:2:9::1;3932:7;:13;;:31;;;;;3961:2;3949:8;:14;;3932:31;3924:54;;;;;;;;;;;;;;;;;3998:7;3989:6;:16;;;;4026:8;4016:7;:18;;;;3841:201:::0;;:::o;3702:131::-;1531:13:0;:11;:13::i;:::-;3817:8:9::1;3788:17;:26;3806:7;3788:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3702:131:::0;;:::o;783:26::-;;;;;;;;;;;;;:::o;906:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;585:27::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7984:206:2:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:60::-;4344:3;4365:5;4358:12;;4316:60;;;:::o;4382:142::-;4432:9;4465:53;4483:34;4492:24;4510:5;4492:24;:::i;:::-;4483:34;:::i;:::-;4465:53;:::i;:::-;4452:66;;4382:142;;;:::o;4530:126::-;4580:9;4613:37;4644:5;4613:37;:::i;:::-;4600:50;;4530:126;;;:::o;4662:153::-;4739:9;4772:37;4803:5;4772:37;:::i;:::-;4759:50;;4662:153;;;:::o;4821:185::-;4935:64;4993:5;4935:64;:::i;:::-;4930:3;4923:77;4821:185;;:::o;5012:276::-;5132:4;5170:2;5159:9;5155:18;5147:26;;5183:98;5278:1;5267:9;5263:17;5254:6;5183:98;:::i;:::-;5012:276;;;;:::o;5294:329::-;5353:6;5402:2;5390:9;5381:7;5377:23;5373:32;5370:119;;;5408:79;;:::i;:::-;5370:119;5528:1;5553:53;5598:7;5589:6;5578:9;5574:22;5553:53;:::i;:::-;5543:63;;5499:117;5294:329;;;;:::o;5629:86::-;5664:7;5704:4;5697:5;5693:16;5682:27;;5629:86;;;:::o;5721:112::-;5804:22;5820:5;5804:22;:::i;:::-;5799:3;5792:35;5721:112;;:::o;5839:214::-;5928:4;5966:2;5955:9;5951:18;5943:26;;5979:67;6043:1;6032:9;6028:17;6019:6;5979:67;:::i;:::-;5839:214;;;;:::o;6059:118::-;6146:24;6164:5;6146:24;:::i;:::-;6141:3;6134:37;6059:118;;:::o;6183:222::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6327:71;6395:1;6384:9;6380:17;6371:6;6327:71;:::i;:::-;6183:222;;;;:::o;6411:329::-;6470:6;6519:2;6507:9;6498:7;6494:23;6490:32;6487:119;;;6525:79;;:::i;:::-;6487:119;6645:1;6670:53;6715:7;6706:6;6695:9;6691:22;6670:53;:::i;:::-;6660:63;;6616:117;6411:329;;;;:::o;6746:474::-;6814:6;6822;6871:2;6859:9;6850:7;6846:23;6842:32;6839:119;;;6877:79;;:::i;:::-;6839:119;6997:1;7022:53;7067:7;7058:6;7047:9;7043:22;7022:53;:::i;:::-;7012:63;;6968:117;7124:2;7150:53;7195:7;7186:6;7175:9;7171:22;7150:53;:::i;:::-;7140:63;;7095:118;6746:474;;;;;:::o;7226:116::-;7296:21;7311:5;7296:21;:::i;:::-;7289:5;7286:32;7276:60;;7332:1;7329;7322:12;7276:60;7226:116;:::o;7348:133::-;7391:5;7429:6;7416:20;7407:29;;7445:30;7469:5;7445:30;:::i;:::-;7348:133;;;;:::o;7487:468::-;7552:6;7560;7609:2;7597:9;7588:7;7584:23;7580:32;7577:119;;;7615:79;;:::i;:::-;7577:119;7735:1;7760:53;7805:7;7796:6;7785:9;7781:22;7760:53;:::i;:::-;7750:63;;7706:117;7862:2;7888:50;7930:7;7921:6;7910:9;7906:22;7888:50;:::i;:::-;7878:60;;7833:115;7487:468;;;;;:::o;7961:474::-;8029:6;8037;8086:2;8074:9;8065:7;8061:23;8057:32;8054:119;;;8092:79;;:::i;:::-;8054:119;8212:1;8237:53;8282:7;8273:6;8262:9;8258:22;8237:53;:::i;:::-;8227:63;;8183:117;8339:2;8365:53;8410:7;8401:6;8390:9;8386:22;8365:53;:::i;:::-;8355:63;;8310:118;7961:474;;;;;:::o;8441:180::-;8489:77;8486:1;8479:88;8586:4;8583:1;8576:15;8610:4;8607:1;8600:15;8627:320;8671:6;8708:1;8702:4;8698:12;8688:22;;8755:1;8749:4;8745:12;8776:18;8766:81;;8832:4;8824:6;8820:17;8810:27;;8766:81;8894:2;8886:6;8883:14;8863:18;8860:38;8857:84;;8913:18;;:::i;:::-;8857:84;8678:269;8627:320;;;:::o;8953:85::-;8998:7;9027:5;9016:16;;8953:85;;;:::o;9044:158::-;9102:9;9135:61;9153:42;9162:32;9188:5;9162:32;:::i;:::-;9153:42;:::i;:::-;9135:61;:::i;:::-;9122:74;;9044:158;;;:::o;9208:147::-;9303:45;9342:5;9303:45;:::i;:::-;9298:3;9291:58;9208:147;;:::o;9361:807::-;9610:4;9648:3;9637:9;9633:19;9625:27;;9662:71;9730:1;9719:9;9715:17;9706:6;9662:71;:::i;:::-;9743:72;9811:2;9800:9;9796:18;9787:6;9743:72;:::i;:::-;9825:80;9901:2;9890:9;9886:18;9877:6;9825:80;:::i;:::-;9915;9991:2;9980:9;9976:18;9967:6;9915:80;:::i;:::-;10005:73;10073:3;10062:9;10058:19;10049:6;10005:73;:::i;:::-;10088;10156:3;10145:9;10141:19;10132:6;10088:73;:::i;:::-;9361:807;;;;;;;;;:::o;10174:143::-;10231:5;10262:6;10256:13;10247:22;;10278:33;10305:5;10278:33;:::i;:::-;10174:143;;;;:::o;10323:663::-;10411:6;10419;10427;10476:2;10464:9;10455:7;10451:23;10447:32;10444:119;;;10482:79;;:::i;:::-;10444:119;10602:1;10627:64;10683:7;10674:6;10663:9;10659:22;10627:64;:::i;:::-;10617:74;;10573:128;10740:2;10766:64;10822:7;10813:6;10802:9;10798:22;10766:64;:::i;:::-;10756:74;;10711:129;10879:2;10905:64;10961:7;10952:6;10941:9;10937:22;10905:64;:::i;:::-;10895:74;;10850:129;10323:663;;;;;:::o;10992:332::-;11113:4;11151:2;11140:9;11136:18;11128:26;;11164:71;11232:1;11221:9;11217:17;11208:6;11164:71;:::i;:::-;11245:72;11313:2;11302:9;11298:18;11289:6;11245:72;:::i;:::-;10992:332;;;;;:::o;11330:180::-;11378:77;11375:1;11368:88;11475:4;11472:1;11465:15;11499:4;11496:1;11489:15;11516:410;11556:7;11579:20;11597:1;11579:20;:::i;:::-;11574:25;;11613:20;11631:1;11613:20;:::i;:::-;11608:25;;11668:1;11665;11661:9;11690:30;11708:11;11690:30;:::i;:::-;11679:41;;11869:1;11860:7;11856:15;11853:1;11850:22;11830:1;11823:9;11803:83;11780:139;;11899:18;;:::i;:::-;11780:139;11564:362;11516:410;;;;:::o;11932:180::-;11980:77;11977:1;11970:88;12077:4;12074:1;12067:15;12101:4;12098:1;12091:15;12118:185;12158:1;12175:20;12193:1;12175:20;:::i;:::-;12170:25;;12209:20;12227:1;12209:20;:::i;:::-;12204:25;;12248:1;12238:35;;12253:18;;:::i;:::-;12238:35;12295:1;12292;12288:9;12283:14;;12118:185;;;;:::o;12309:194::-;12349:4;12369:20;12387:1;12369:20;:::i;:::-;12364:25;;12403:20;12421:1;12403:20;:::i;:::-;12398:25;;12447:1;12444;12440:9;12432:17;;12471:1;12465:4;12462:11;12459:37;;;12476:18;;:::i;:::-;12459:37;12309:194;;;;:::o;12509:191::-;12549:3;12568:20;12586:1;12568:20;:::i;:::-;12563:25;;12602:20;12620:1;12602:20;:::i;:::-;12597:25;;12645:1;12642;12638:9;12631:16;;12666:3;12663:1;12660:10;12657:36;;;12673:18;;:::i;:::-;12657:36;12509:191;;;;:::o;12706:442::-;12855:4;12893:2;12882:9;12878:18;12870:26;;12906:71;12974:1;12963:9;12959:17;12950:6;12906:71;:::i;:::-;12987:72;13055:2;13044:9;13040:18;13031:6;12987:72;:::i;:::-;13069;13137:2;13126:9;13122:18;13113:6;13069:72;:::i;:::-;12706:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1521200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD_ADDRESS()": "440",
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burnShare()": "2449",
								"buyTax()": "2514",
								"decimals()": "428",
								"excludeFromTax(address,bool)": "infinite",
								"isExcludedFromTax(address)": "2877",
								"liquidityShare()": "2515",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"rewardsShare()": "2470",
								"sellTax()": "2491",
								"setTaxes(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,address,uint256)": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapPair()": "2597",
								"uniswaprouter()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 553,
									"end": 578,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 553,
									"end": 578,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 610,
									"end": 612,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 585,
									"end": 612,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 585,
									"end": 612,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 651,
									"end": 653,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 619,
									"end": 653,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 619,
									"end": 653,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 687,
									"end": 689,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 660,
									"end": 689,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 660,
									"end": 689,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 726,
									"end": 728,
									"name": "PUSH",
									"source": 9,
									"value": "1E"
								},
								{
									"begin": 696,
									"end": 728,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 696,
									"end": 728,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1063,
									"end": 1564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1184,
									"end": 1189,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1198,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1279,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1244,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1231,
									"end": 1244,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1280,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1323,
									"end": 1336,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1323,
									"end": 1344,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C45A0155"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1323,
									"end": 1346,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1346,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1358,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C9C65396"
								},
								{
									"begin": 1367,
									"end": 1371,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1374,
									"end": 1387,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1392,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1374,
									"end": 1392,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1392,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "AD5C4648"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1374,
									"end": 1394,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1374,
									"end": 1394,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1305,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1305,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1302,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1291,
									"end": 1302,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1395,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1444,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1408,
									"end": 1425,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1426,
									"end": 1436,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1444,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1494,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1455,
									"end": 1472,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1485,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1494,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1513,
									"end": 1523,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1545,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1545,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 1555,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 1555,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 1555,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1545,
									"end": 1555,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1541,
									"end": 1555,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1541,
									"end": 1555,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1525,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "3B9ACA00"
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1525,
									"end": 1555,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1525,
									"end": 1555,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1507,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1512,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1556,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1556,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1556,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1507,
									"end": 1556,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6190,
									"end": 6191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 9242,
									"end": 9247,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 9224,
									"end": 9248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "tag",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9219,
									"end": 9222,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9212,
									"end": 9249,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9354,
									"end": 9358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9392,
									"end": 9394,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9381,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9377,
									"end": 9395,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9471,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9449,
									"end": 9455,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 9405,
									"end": 9476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "tag",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9559,
									"end": 9565,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9608,
									"end": 9610,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9596,
									"end": 9605,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9587,
									"end": 9594,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9583,
									"end": 9606,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 9579,
									"end": 9611,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 9576,
									"end": 9695,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9576,
									"end": 9695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 9576,
									"end": 9695,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9614,
									"end": 9693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 9614,
									"end": 9693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 9614,
									"end": 9693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9614,
									"end": 9693,
									"name": "tag",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 9614,
									"end": 9693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9576,
									"end": 9695,
									"name": "tag",
									"source": 10,
									"value": "214"
								},
								{
									"begin": 9576,
									"end": 9695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9734,
									"end": 9735,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9759,
									"end": 9823,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 9815,
									"end": 9822,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9806,
									"end": 9812,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9795,
									"end": 9804,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9791,
									"end": 9813,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9759,
									"end": 9823,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9759,
									"end": 9823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9759,
									"end": 9823,
									"name": "tag",
									"source": 10,
									"value": "216"
								},
								{
									"begin": 9759,
									"end": 9823,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9749,
									"end": 9823,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9749,
									"end": 9823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9705,
									"end": 9833,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9489,
									"end": 9840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9967,
									"end": 9971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10005,
									"end": 10007,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 9994,
									"end": 10003,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9990,
									"end": 10008,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9982,
									"end": 10008,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9982,
									"end": 10008,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10018,
									"end": 10089,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 10086,
									"end": 10087,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10075,
									"end": 10084,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10071,
									"end": 10088,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10062,
									"end": 10068,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10018,
									"end": 10089,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 10018,
									"end": 10089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10018,
									"end": 10089,
									"name": "tag",
									"source": 10,
									"value": "218"
								},
								{
									"begin": 10018,
									"end": 10089,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10099,
									"end": 10171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 10167,
									"end": 10169,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10156,
									"end": 10165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10152,
									"end": 10170,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10143,
									"end": 10149,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10099,
									"end": 10171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 10099,
									"end": 10171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10099,
									"end": 10171,
									"name": "tag",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 10099,
									"end": 10171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9846,
									"end": 10178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10184,
									"end": 10364,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 10184,
									"end": 10364,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10232,
									"end": 10309,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10229,
									"end": 10230,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10222,
									"end": 10310,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 10329,
									"end": 10333,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 10326,
									"end": 10327,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 10319,
									"end": 10334,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 10353,
									"end": 10357,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 10350,
									"end": 10351,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10343,
									"end": 10358,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 10370,
									"end": 10472,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 10370,
									"end": 10472,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10412,
									"end": 10420,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10459,
									"end": 10464,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10456,
									"end": 10457,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10452,
									"end": 10465,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 10431,
									"end": 10465,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10431,
									"end": 10465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10370,
									"end": 10472,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10370,
									"end": 10472,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10370,
									"end": 10472,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10370,
									"end": 10472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10539,
									"end": 10544,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10546,
									"end": 10550,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10570,
									"end": 10576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10561,
									"end": 10576,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10561,
									"end": 10576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10594,
									"end": 10599,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10585,
									"end": 10599,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10585,
									"end": 10599,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "tag",
									"source": 10,
									"value": "223"
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10629,
									"end": 10630,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10619,
									"end": 10627,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10616,
									"end": 10631,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10724,
									"end": 10728,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 10719,
									"end": 10722,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10715,
									"end": 10729,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 10709,
									"end": 10713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10706,
									"end": 10730,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 10703,
									"end": 10753,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10703,
									"end": 10753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 10703,
									"end": 10753,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10733,
									"end": 10751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 10733,
									"end": 10751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 10733,
									"end": 10751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10733,
									"end": 10751,
									"name": "tag",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 10733,
									"end": 10751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10703,
									"end": 10753,
									"name": "tag",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 10703,
									"end": 10753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10783,
									"end": 10784,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10773,
									"end": 10781,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10769,
									"end": 10785,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 10766,
									"end": 11217,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10766,
									"end": 11217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 10766,
									"end": 11217,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11198,
									"end": 11202,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 11191,
									"end": 11196,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11187,
									"end": 11203,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 11178,
									"end": 11203,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11178,
									"end": 11203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10766,
									"end": 11217,
									"name": "tag",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 10766,
									"end": 11217,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11248,
									"end": 11252,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 11242,
									"end": 11246,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11238,
									"end": 11253,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 11230,
									"end": 11253,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11230,
									"end": 11253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11278,
									"end": 11310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 11301,
									"end": 11309,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11278,
									"end": 11310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 11278,
									"end": 11310,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11278,
									"end": 11310,
									"name": "tag",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 11278,
									"end": 11310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11266,
									"end": 11310,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 11266,
									"end": 11310,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "223"
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "tag",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 10608,
									"end": 11320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10478,
									"end": 11326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11386,
									"end": 11391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11577,
									"end": 11585,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11567,
									"end": 11607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "231"
								},
								{
									"begin": 11567,
									"end": 11607,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11598,
									"end": 11599,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11589,
									"end": 11599,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11589,
									"end": 11599,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11600,
									"end": 11605,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 11600,
									"end": 11605,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11567,
									"end": 11607,
									"name": "tag",
									"source": 10,
									"value": "231"
								},
								{
									"begin": 11567,
									"end": 11607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11626,
									"end": 11630,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11616,
									"end": 11652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 11616,
									"end": 11652,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11643,
									"end": 11644,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11634,
									"end": 11644,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11634,
									"end": 11644,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11645,
									"end": 11650,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 11645,
									"end": 11650,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11616,
									"end": 11652,
									"name": "tag",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 11616,
									"end": 11652,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11712,
									"end": 11716,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11760,
									"end": 11761,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11796,
									"end": 11797,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "235"
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11705,
									"end": 11982,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "233"
								},
								{
									"begin": 11705,
									"end": 11982,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "tag",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 11755,
									"end": 11782,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11773,
									"end": 11774,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11764,
									"end": 11774,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11764,
									"end": 11774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11775,
									"end": 11780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11775,
									"end": 11780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 11775,
									"end": 11780,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "tag",
									"source": 10,
									"value": "235"
								},
								{
									"begin": 11791,
									"end": 11982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11836,
									"end": 11839,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 11826,
									"end": 11834,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11823,
									"end": 11840,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11820,
									"end": 11863,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11820,
									"end": 11863,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 11820,
									"end": 11863,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11843,
									"end": 11861,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 11843,
									"end": 11861,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 11843,
									"end": 11861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11843,
									"end": 11861,
									"name": "tag",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 11843,
									"end": 11861,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11820,
									"end": 11863,
									"name": "tag",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 11820,
									"end": 11863,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11892,
									"end": 11900,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11889,
									"end": 11890,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 11885,
									"end": 11901,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 11876,
									"end": 11901,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11876,
									"end": 11901,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11927,
									"end": 11930,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11920,
									"end": 11925,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11917,
									"end": 11931,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11914,
									"end": 11954,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11914,
									"end": 11954,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 11914,
									"end": 11954,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11934,
									"end": 11952,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 11934,
									"end": 11952,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 11934,
									"end": 11952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11934,
									"end": 11952,
									"name": "tag",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 11934,
									"end": 11952,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11914,
									"end": 11954,
									"name": "tag",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 11914,
									"end": 11954,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11967,
									"end": 11972,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11967,
									"end": 11972,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 11967,
									"end": 11972,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11705,
									"end": 11982,
									"name": "tag",
									"source": 10,
									"value": "233"
								},
								{
									"begin": 11705,
									"end": 11982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11705,
									"end": 11982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12091,
									"end": 12093,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 12081,
									"end": 12089,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12078,
									"end": 12094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12072,
									"end": 12075,
									"name": "PUSH",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 12066,
									"end": 12070,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12063,
									"end": 12076,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12059,
									"end": 12095,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12041,
									"end": 12043,
									"name": "PUSH",
									"source": 10,
									"value": "4E"
								},
								{
									"begin": 12031,
									"end": 12039,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12028,
									"end": 12044,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12023,
									"end": 12025,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 12017,
									"end": 12021,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12014,
									"end": 12026,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12010,
									"end": 12045,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 11994,
									"end": 12105,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 11991,
									"end": 12237,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11991,
									"end": 12237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 11991,
									"end": 12237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12147,
									"end": 12155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12141,
									"end": 12145,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12137,
									"end": 12156,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 12128,
									"end": 12156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12128,
									"end": 12156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12182,
									"end": 12185,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12175,
									"end": 12180,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12172,
									"end": 12186,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12169,
									"end": 12209,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12169,
									"end": 12209,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 12169,
									"end": 12209,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12189,
									"end": 12207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "242"
								},
								{
									"begin": 12189,
									"end": 12207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 12189,
									"end": 12207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12189,
									"end": 12207,
									"name": "tag",
									"source": 10,
									"value": "242"
								},
								{
									"begin": 12189,
									"end": 12207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12169,
									"end": 12209,
									"name": "tag",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 12169,
									"end": 12209,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12222,
									"end": 12227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 12222,
									"end": 12227,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11991,
									"end": 12237,
									"name": "tag",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 11991,
									"end": 12237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12262,
									"end": 12304,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 12300,
									"end": 12303,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12290,
									"end": 12298,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12284,
									"end": 12288,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12281,
									"end": 12282,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12262,
									"end": 12304,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 12262,
									"end": 12304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12262,
									"end": 12304,
									"name": "tag",
									"source": 10,
									"value": "243"
								},
								{
									"begin": 12262,
									"end": 12304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12247,
									"end": 12304,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12247,
									"end": 12304,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12247,
									"end": 12304,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12247,
									"end": 12304,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12336,
									"end": 12340,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12331,
									"end": 12334,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12327,
									"end": 12341,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 12320,
									"end": 12325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12317,
									"end": 12342,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12314,
									"end": 12365,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12314,
									"end": 12365,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 12314,
									"end": 12365,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12345,
									"end": 12363,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 12345,
									"end": 12363,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 12345,
									"end": 12363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12345,
									"end": 12363,
									"name": "tag",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 12345,
									"end": 12363,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12314,
									"end": 12365,
									"name": "tag",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 12314,
									"end": 12365,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12394,
									"end": 12398,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12387,
									"end": 12392,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12383,
									"end": 12399,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12374,
									"end": 12399,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12374,
									"end": 12399,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "tag",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11332,
									"end": 12405,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12411,
									"end": 12497,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 12411,
									"end": 12497,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12446,
									"end": 12453,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12486,
									"end": 12490,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 12479,
									"end": 12484,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12475,
									"end": 12491,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12464,
									"end": 12491,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12464,
									"end": 12491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12411,
									"end": 12497,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12411,
									"end": 12497,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12411,
									"end": 12497,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12411,
									"end": 12497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12561,
									"end": 12566,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12585,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 12603,
									"end": 12607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12585,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 12585,
									"end": 12608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12585,
									"end": 12608,
									"name": "tag",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 12585,
									"end": 12608,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12577,
									"end": 12608,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12577,
									"end": 12608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12629,
									"end": 12654,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 12645,
									"end": 12653,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12629,
									"end": 12654,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 12629,
									"end": 12654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12629,
									"end": 12654,
									"name": "tag",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 12629,
									"end": 12654,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12617,
									"end": 12654,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12617,
									"end": 12654,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12673,
									"end": 12777,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 12710,
									"end": 12776,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12700,
									"end": 12708,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12694,
									"end": 12698,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12673,
									"end": 12777,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 12673,
									"end": 12777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12673,
									"end": 12777,
									"name": "tag",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 12673,
									"end": 12777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12664,
									"end": 12777,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12664,
									"end": 12777,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12503,
									"end": 12784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12830,
									"end": 12837,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12853,
									"end": 12873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 12871,
									"end": 12872,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12853,
									"end": 12873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 12853,
									"end": 12873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12853,
									"end": 12873,
									"name": "tag",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 12853,
									"end": 12873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12848,
									"end": 12873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12848,
									"end": 12873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 12907,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "253"
								},
								{
									"begin": 12905,
									"end": 12906,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 12907,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 12887,
									"end": 12907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12887,
									"end": 12907,
									"name": "tag",
									"source": 10,
									"value": "253"
								},
								{
									"begin": 12887,
									"end": 12907,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12882,
									"end": 12907,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12882,
									"end": 12907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12942,
									"end": 12943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12939,
									"end": 12940,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12935,
									"end": 12944,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12964,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 12982,
									"end": 12993,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12964,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 12964,
									"end": 12994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12964,
									"end": 12994,
									"name": "tag",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 12964,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12953,
									"end": 12994,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12953,
									"end": 12994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13143,
									"end": 13144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13134,
									"end": 13141,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13130,
									"end": 13145,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 13127,
									"end": 13128,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13124,
									"end": 13146,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 13104,
									"end": 13105,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13097,
									"end": 13106,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13077,
									"end": 13160,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 13054,
									"end": 13193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "255"
								},
								{
									"begin": 13054,
									"end": 13193,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13173,
									"end": 13191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "256"
								},
								{
									"begin": 13173,
									"end": 13191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 13173,
									"end": 13191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13173,
									"end": 13191,
									"name": "tag",
									"source": 10,
									"value": "256"
								},
								{
									"begin": 13173,
									"end": 13191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13054,
									"end": 13193,
									"name": "tag",
									"source": 10,
									"value": "255"
								},
								{
									"begin": 13054,
									"end": 13193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12838,
									"end": 13200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 13200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13246,
									"end": 13249,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13265,
									"end": 13285,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 13283,
									"end": 13284,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13265,
									"end": 13285,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 13265,
									"end": 13285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13265,
									"end": 13285,
									"name": "tag",
									"source": 10,
									"value": "258"
								},
								{
									"begin": 13265,
									"end": 13285,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13285,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13260,
									"end": 13285,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13299,
									"end": 13319,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "259"
								},
								{
									"begin": 13317,
									"end": 13318,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13299,
									"end": 13319,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 13299,
									"end": 13319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13299,
									"end": 13319,
									"name": "tag",
									"source": 10,
									"value": "259"
								},
								{
									"begin": 13299,
									"end": 13319,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13294,
									"end": 13319,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13294,
									"end": 13319,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13342,
									"end": 13343,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13339,
									"end": 13340,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13335,
									"end": 13344,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13328,
									"end": 13344,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13328,
									"end": 13344,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13363,
									"end": 13366,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 13360,
									"end": 13361,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13357,
									"end": 13367,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 13354,
									"end": 13390,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13354,
									"end": 13390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 13354,
									"end": 13390,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13370,
									"end": 13388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "261"
								},
								{
									"begin": 13370,
									"end": 13388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 13370,
									"end": 13388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13370,
									"end": 13388,
									"name": "tag",
									"source": 10,
									"value": "261"
								},
								{
									"begin": 13370,
									"end": 13388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13354,
									"end": 13390,
									"name": "tag",
									"source": 10,
									"value": "260"
								},
								{
									"begin": 13354,
									"end": 13390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13397,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13403,
									"end": 13521,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 13403,
									"end": 13521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13490,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 13508,
									"end": 13513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13490,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 13490,
									"end": 13514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13490,
									"end": 13514,
									"name": "tag",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 13490,
									"end": 13514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13485,
									"end": 13488,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13478,
									"end": 13515,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 13403,
									"end": 13521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13403,
									"end": 13521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13403,
									"end": 13521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13676,
									"end": 13680,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13714,
									"end": 13716,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 13703,
									"end": 13712,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13699,
									"end": 13717,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13691,
									"end": 13717,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13691,
									"end": 13717,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13727,
									"end": 13798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 13795,
									"end": 13796,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13784,
									"end": 13793,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13780,
									"end": 13797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13771,
									"end": 13777,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 13727,
									"end": 13798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 13727,
									"end": 13798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13727,
									"end": 13798,
									"name": "tag",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 13727,
									"end": 13798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13808,
									"end": 13880,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "266"
								},
								{
									"begin": 13876,
									"end": 13878,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 13865,
									"end": 13874,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13861,
									"end": 13879,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13852,
									"end": 13858,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 13808,
									"end": 13880,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 13808,
									"end": 13880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13808,
									"end": 13880,
									"name": "tag",
									"source": 10,
									"value": "266"
								},
								{
									"begin": 13808,
									"end": 13880,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13890,
									"end": 13962,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "267"
								},
								{
									"begin": 13958,
									"end": 13960,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 13947,
									"end": 13956,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13943,
									"end": 13961,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 13934,
									"end": 13940,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13890,
									"end": 13962,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 13890,
									"end": 13962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13890,
									"end": 13962,
									"name": "tag",
									"source": 10,
									"value": "267"
								},
								{
									"begin": 13890,
									"end": 13962,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13527,
									"end": 13969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14068,
									"end": 14072,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14106,
									"end": 14108,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14095,
									"end": 14104,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14091,
									"end": 14109,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14083,
									"end": 14109,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14083,
									"end": 14109,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14119,
									"end": 14190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "269"
								},
								{
									"begin": 14187,
									"end": 14188,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14176,
									"end": 14185,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14172,
									"end": 14189,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14163,
									"end": 14169,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14119,
									"end": 14190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 14119,
									"end": 14190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14119,
									"end": 14190,
									"name": "tag",
									"source": 10,
									"value": "269"
								},
								{
									"begin": 14119,
									"end": 14190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13975,
									"end": 14197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 4045,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d2de35fc274d5b4b159b13db6189775216a40dcbf5a87bc43b901f5bea78b0664736f6c634300081c0033",
									".code": [
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "C647B20E"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "CB4CA631"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "CB4CA631"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "CC1776D3"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "C647B20E"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "C6A30647"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "C816841B"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "BEABACC8"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "2431BA73"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "33727077"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "33727077"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "4E6FD6C4"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "4F7041A5"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "51C6590A"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "2431BA73"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "5BF0A54"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "15291CD4"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 4045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 660,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 660,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 619,
											"end": 653,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 619,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 619,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3401,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3401,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 696,
											"end": 728,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 696,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 816,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 816,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 553,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 553,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2897,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2897,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1572,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1572,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3841,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3841,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3702,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3702,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 783,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 783,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 906,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 906,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 906,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 585,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 585,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 689,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 660,
											"end": 689,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 660,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 619,
											"end": 653,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 619,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3473,
											"end": 3483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3473,
											"end": 3497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3473,
											"end": 3497,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3465,
											"end": 3516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3544,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3565,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "356680B700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3527,
											"end": 3587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3660,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3660,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3660,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3677,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3678,
											"end": 3685,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 728,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 855,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "DEAD"
										},
										{
											"begin": 816,
											"end": 897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 816,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2989,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2978,
											"end": 2993,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "671D94D800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2970,
											"end": 3023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3053,
											"end": 3057,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3036,
											"end": 3096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3036,
											"end": 3096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F305D719"
										},
										{
											"begin": 3146,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3195,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3222,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3269,
											"end": 3274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3269,
											"end": 3276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3269,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3306,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3109,
											"end": 3317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3109,
											"end": 3317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B"
										},
										{
											"begin": 3350,
											"end": 3361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3363,
											"end": 3384,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3335,
											"end": 3385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3385,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "F38F85C300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1660,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "PUSH",
											"source": 9,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1720,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1833,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1787,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1783,
											"end": 1936,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1783,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1783,
											"end": 1936,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1894,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1861,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1903,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1861,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1783,
											"end": 1936,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1783,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 1985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 1985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1996,
											"end": 2007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2031,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2031,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1996,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1996,
											"end": 2031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2132,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2110,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2109,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2149,
											"end": 2223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2188,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2187,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2223,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2149,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2072,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2255,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2302,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "1F825C6A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2284,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2373,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2824,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2356,
											"end": 2824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2390,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "PUSH",
											"source": 9,
											"value": "92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2459,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2538,
											"end": 2552,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2538,
											"end": 2552,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2526,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2525,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2525,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2605,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2596,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2595,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2663,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2663,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2738,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2813,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2720,
											"end": 2813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2796,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2759,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2797,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2759,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2813,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2720,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2824,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2356,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2869,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2836,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2881,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2836,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 2889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3932,
											"end": 3939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3945,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3949,
											"end": 3957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3963,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3963,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3932,
											"end": 3963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "AF1EE13400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3924,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 3995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3989,
											"end": 4005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4005,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4016,
											"end": 4034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4034,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 4042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 3825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3813,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 906,
											"end": 955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4370,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4492,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4483,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4465,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4613,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4803,
											"end": 4808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4772,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 4993,
											"end": 4998,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4935,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 4933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 5000,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 5006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5183,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5390,
											"end": 5399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5377,
											"end": 5400,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5405,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5408,
											"end": 5487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5553,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5697,
											"end": 5702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5804,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5979,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 6053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6146,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6327,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6517,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6525,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6670,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6846,
											"end": 6869,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6874,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6877,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6997,
											"end": 6998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7067,
											"end": 7074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7022,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 7085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7184,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7171,
											"end": 7193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7150,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 7220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7296,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7226,
											"end": 7342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7469,
											"end": 7474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7445,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7595,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7607,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7615,
											"end": 7694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7805,
											"end": 7812,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7760,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7750,
											"end": 7813,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7750,
											"end": 7813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7706,
											"end": 7823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7888,
											"end": 7938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8084,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8057,
											"end": 8089,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8092,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8273,
											"end": 8279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8271,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8237,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8399,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8365,
											"end": 8418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8355,
											"end": 8418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8355,
											"end": 8418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 8435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8441,
											"end": 8621,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8441,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8489,
											"end": 8566,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8486,
											"end": 8487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8586,
											"end": 8590,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8583,
											"end": 8584,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8576,
											"end": 8591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8607,
											"end": 8608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8615,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8755,
											"end": 8756,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8836,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8824,
											"end": 8830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8837,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8894,
											"end": 8896,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8886,
											"end": 8892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 8897,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8913,
											"end": 8931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8678,
											"end": 8947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8998,
											"end": 9005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9102,
											"end": 9111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9188,
											"end": 9193,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9162,
											"end": 9194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9153,
											"end": 9195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 9135,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9342,
											"end": 9347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9303,
											"end": 9348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9651,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 9637,
											"end": 9646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9730,
											"end": 9731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9715,
											"end": 9732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 9662,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9743,
											"end": 9815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9901,
											"end": 9903,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9883,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9825,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9991,
											"end": 9993,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9980,
											"end": 9989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9967,
											"end": 9973,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9915,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10073,
											"end": 10076,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 10005,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 10088,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 10168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10256,
											"end": 10269,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10305,
											"end": 10310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 10278,
											"end": 10311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10462,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10479,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 10482,
											"end": 10561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10663,
											"end": 10672,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10659,
											"end": 10681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 10627,
											"end": 10691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10573,
											"end": 10701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10822,
											"end": 10829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10813,
											"end": 10819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10811,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 10766,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 10881,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10952,
											"end": 10958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 10905,
											"end": 10969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11153,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11140,
											"end": 11149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11164,
											"end": 11235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11313,
											"end": 11315,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11302,
											"end": 11311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11245,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11330,
											"end": 11510,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11330,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11455,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11479,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11465,
											"end": 11480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11499,
											"end": 11503,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11504,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11556,
											"end": 11563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11579,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11613,
											"end": 11633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11633,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11708,
											"end": 11719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11690,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11679,
											"end": 11720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11679,
											"end": 11720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11871,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11853,
											"end": 11854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 11872,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 11886,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11899,
											"end": 11917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12112,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11932,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12057,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11977,
											"end": 11978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 12058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12077,
											"end": 12081,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12074,
											"end": 12075,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12067,
											"end": 12082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12098,
											"end": 12099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12091,
											"end": 12106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12175,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12209,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 12253,
											"end": 12271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12288,
											"end": 12297,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12369,
											"end": 12389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12421,
											"end": 12422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12403,
											"end": 12423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12423,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12440,
											"end": 12449,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12462,
											"end": 12473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 12476,
											"end": 12494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12549,
											"end": 12552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12586,
											"end": 12587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12568,
											"end": 12588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 12620,
											"end": 12621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12602,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12622,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12666,
											"end": 12669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12663,
											"end": 12664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12670,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 12673,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12882,
											"end": 12891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12870,
											"end": 12896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12870,
											"end": 12896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12974,
											"end": 12975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12959,
											"end": 12976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12956,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 12906,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13055,
											"end": 13057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13053,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 12987,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13135,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13069,
											"end": 13141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 13148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"contracts/mem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEAD_ADDRESS()": "4e6fd6c4",
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnShare()": "05bf0a54",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"excludeFromTax(address,bool)": "c6a30647",
							"isExcludedFromTax(address)": "cb4ca631",
							"liquidityShare()": "15291cd4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardsShare()": "33727077",
							"sellTax()": "cc1776d3",
							"setTaxes(uint256,uint256)": "c647b20e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"uniswaprouter()": "2431ba73",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArithmeticError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TaxTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAmountMustBePositive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TaxCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswaprouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mem.sol\":\"MemCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/mem.sol\":{\"keccak256\":\"0xb0d10806413d2847cf4ff69fcb4fb9b2cb4df12f753505afcea7c620af246904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://337f578755192be0008bfb61594aefd4a080b09e7ac519f39f93932520c3827e\",\"dweb:/ipfs/QmPPDgswfHo1QNQUaASopYPHYZRGndgmPcAeeUo1YH2Mpa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1417,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "buyTax",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1420,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "sellTax",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1423,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "liquidityShare",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1426,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "burnShare",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1429,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "rewardsShare",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "uniswaprouter",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IUniswapV2Router02)1392"
							},
							{
								"astId": 1434,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1441,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "isExcludedFromTax",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)1392": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/mem.sol:74:13:\n   |\n74 |             uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens;\n   |             ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2660,
					"file": "contracts/mem.sol",
					"start": 2639
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							996
						]
					},
					"id": 997,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 996,
							"linearizedBaseContracts": [
								996
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "36:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 945,
									"name": "PairCreated",
									"nameLocation": "66:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "94:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "78:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "118:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "102:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "126:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "140:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77:68:6"
									},
									"src": "60:86:6"
								},
								{
									"functionSelector": "017e7e58",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "161:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "192:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:6"
									},
									"scope": 996,
									"src": "152:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "215:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "252:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:6"
									},
									"scope": 996,
									"src": "206:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "276:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "292:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "284:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "308:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "300:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:32:6"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "347:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "339:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:14:6"
									},
									"scope": 996,
									"src": "267:86:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "367:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:6:6"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "413:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "405:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:14:6"
									},
									"scope": 996,
									"src": "358:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "433:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "473:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:6:6"
									},
									"scope": 996,
									"src": "424:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "494:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "513:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "505:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "529:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "521:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:32:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "563:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:14:6"
									},
									"scope": 996,
									"src": "485:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "584:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:6"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:6"
									},
									"scope": 996,
									"src": "575:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 995,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "625:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "640:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:6"
									},
									"scope": 996,
									"src": "616:42:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 997,
							"src": "26:634:6",
							"usedErrors": [],
							"usedEvents": [
								945
							]
						}
					],
					"src": "0:661:6"
				},
				"id": 6
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1304
						]
					},
					"id": 1305,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 998,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:7"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "103:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:7"
									},
									"scope": 1304,
									"src": "61:51:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:7"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "156:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:7"
									},
									"scope": 1304,
									"src": "117:48:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "202:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "226:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "250:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "279:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "308:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "333:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "358:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "378:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "416:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "430:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "444:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:7"
									},
									"scope": 1304,
									"src": "171:289:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "499:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "522:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "555:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "584:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "611:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "631:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "677:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "695:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "711:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:7"
									},
									"scope": 1304,
									"src": "465:262:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "766:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "790:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "814:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "838:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "863:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "888:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "908:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "946:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "960:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:7"
									},
									"scope": 1304,
									"src": "732:242:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1039:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1063:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1092:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1119:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1139:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1177:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1195:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:7"
									},
									"scope": 1304,
									"src": "979:232:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1260:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1284:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1308:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1382:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1402:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1425:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1442:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1111,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1451:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1462:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1496:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1510:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:7"
									},
									"scope": 1304,
									"src": "1216:308:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1623:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1652:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1679:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1699:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1722:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1739:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1138,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1748:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1140,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1759:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1793:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1811:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:7"
									},
									"scope": 1304,
									"src": "1529:298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1898:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1925:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1155,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1156,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1958:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1978:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:7"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "2016:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1163,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1164,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:7"
									},
									"scope": 1304,
									"src": "1832:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2087:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2111:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2137:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1172,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1173,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2170:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2190:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2228:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:7"
									},
									"scope": 1304,
									"src": "2044:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2287:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2306:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1187,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1188,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2331:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2408:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1195,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1196,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:7"
									},
									"scope": 1304,
									"src": "2256:175:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2467:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2483:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2501:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1204,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1205,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2526:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2538:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2587:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1212,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1213,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:7"
									},
									"scope": 1304,
									"src": "2436:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2646:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2661:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2680:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2705:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2717:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:7"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2766:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1229,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1230,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:7"
									},
									"scope": 1304,
									"src": "2615:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2825:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2841:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1236,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1237,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2866:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2878:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:7"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2943:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1244,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1245,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:7"
									},
									"scope": 1304,
									"src": "2794:172:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2987:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3001:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3054:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:7"
									},
									"scope": 1304,
									"src": "2972:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3095:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:7"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3166:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:7"
									},
									"scope": 1304,
									"src": "3073:109:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3224:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3240:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3280:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:7"
									},
									"scope": 1304,
									"src": "3187:108:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3323:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3338:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:7"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3386:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1288,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1289,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:7"
									},
									"scope": 1304,
									"src": "3300:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "3436:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "3452:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1295,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1296,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:7"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "3500:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:7"
									},
									"scope": 1304,
									"src": "3414:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1305,
							"src": "26:3499:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:7"
				},
				"id": 7
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1304
						],
						"IUniswapV2Router02": [
							1392
						]
					},
					"id": 1393,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 1305,
							"src": "26:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1308,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"94:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "94:18:8"
									},
									"id": 1309,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:8"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								1304
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "185:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "232:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "261:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "288:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "308:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:8"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "346:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:8"
									},
									"scope": 1392,
									"src": "119:243:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "443:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "490:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "519:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "546:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "566:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "589:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "606:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1341,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "615:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "626:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:8"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "660:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:8"
									},
									"scope": 1392,
									"src": "367:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "754:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "777:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "804:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "804:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "837:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "857:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:8"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:8"
									},
									"scope": 1392,
									"src": "682:204:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "960:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "987:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1368,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1369,
													"nodeType": "ArrayTypeName",
													"src": "987:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1020:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1040:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:8"
									},
									"scope": 1392,
									"src": "891:186:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1151:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1174:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1201:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1382,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1383,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1234:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1254:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:8"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:8"
									},
									"scope": 1392,
									"src": "1082:201:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1393,
							"src": "62:1223:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1286:8"
				},
				"id": 8
			},
			"contracts/mem.sol": {
				"ast": {
					"absolutePath": "contracts/mem.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IUniswapV2Factory": [
							996
						],
						"IUniswapV2Router01": [
							1304
						],
						"IUniswapV2Router02": [
							1392
						],
						"MemCoin": [
							1848
						],
						"Ownable": [
							147
						]
					},
					"id": 1849,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1849,
							"sourceUnit": 800,
							"src": "61:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1849,
							"sourceUnit": 148,
							"src": "118:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"id": 1397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1849,
							"sourceUnit": 997,
							"src": "172:69:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1849,
							"sourceUnit": 1393,
							"src": "243:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1399,
										"name": "ERC20",
										"nameLocations": [
											"342:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "342:5:9"
									},
									"id": 1400,
									"nodeType": "InheritanceSpecifier",
									"src": "342:5:9"
								},
								{
									"baseName": {
										"id": 1401,
										"name": "Ownable",
										"nameLocations": [
											"349:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "349:7:9"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "349:7:9"
								}
							],
							"canonicalName": "MemCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1848,
							"linearizedBaseContracts": [
								1848,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MemCoin",
							"nameLocation": "331:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f38f85c3",
									"id": 1404,
									"name": "TransferFromZero",
									"nameLocation": "370:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:9"
									},
									"src": "364:25:9"
								},
								{
									"errorSelector": "a38ca3d9",
									"id": 1406,
									"name": "TransferToZero",
									"nameLocation": "401:14:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:9"
									},
									"src": "395:23:9"
								},
								{
									"errorSelector": "1f825c6a",
									"id": 1408,
									"name": "ArithmeticError",
									"nameLocation": "430:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:2:9"
									},
									"src": "424:24:9"
								},
								{
									"errorSelector": "671d94d8",
									"id": 1410,
									"name": "TokenAmountMustBePositive",
									"nameLocation": "460:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:9"
									},
									"src": "454:34:9"
								},
								{
									"errorSelector": "af1ee134",
									"id": 1412,
									"name": "TaxTooHigh",
									"nameLocation": "500:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:2:9"
									},
									"src": "494:19:9"
								},
								{
									"errorSelector": "356680b7",
									"id": 1414,
									"name": "InsufficientFunds",
									"nameLocation": "525:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:9"
									},
									"src": "519:26:9"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1417,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "568:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "553:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "577:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1420,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "600:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "585:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "585:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "610:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15291cd4",
									"id": 1423,
									"mutability": "mutable",
									"name": "liquidityShare",
									"nameLocation": "634:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "619:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "619:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "651:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05bf0a54",
									"id": 1426,
									"mutability": "mutable",
									"name": "burnShare",
									"nameLocation": "675:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "660:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1425,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "687:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33727077",
									"id": 1429,
									"mutability": "mutable",
									"name": "rewardsShare",
									"nameLocation": "711:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "696:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1427,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "696:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "726:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2431ba73",
									"id": 1432,
									"mutability": "mutable",
									"name": "uniswaprouter",
									"nameLocation": "763:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "737:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1431,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1430,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"737:18:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1392,
											"src": "737:18:9"
										},
										"referencedDeclaration": 1392,
										"src": "737:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1434,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "798:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "783:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1433,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "783:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4e6fd6c4",
									"id": 1437,
									"mutability": "constant",
									"name": "DEAD_ADDRESS",
									"nameLocation": "840:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "816:81:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1435,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "816:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1436,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "855:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb4ca631",
									"id": 1441,
									"mutability": "mutable",
									"name": "isExcludedFromTax",
									"nameLocation": "938:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1848,
									"src": "906:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1440,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1438,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "914:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "906:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1439,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "925:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6",
									"id": 1445,
									"name": "TaxCollected",
									"nameLocation": "970:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "991:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "983:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:16:9"
									},
									"src": "964:35:9"
								},
								{
									"anonymous": false,
									"eventSelector": "38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b",
									"id": 1451,
									"name": "LiquidityAdded",
									"nameLocation": "1011:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1034:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1026:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "1050:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1042:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:29:9"
									},
									"src": "1005:50:9"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "1220:344:9",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1468,
														"name": "uniswaprouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "1231:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1470,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "1266:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1469,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "1247:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1392_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1247:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "1231:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "1231:49:9"
											},
											{
												"expression": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1474,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "1291:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1483,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1367:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$1848",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$1848",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1359:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1481,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1359:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1359:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1485,
																		"name": "uniswaprouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "1374:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1388:4:9",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1008,
																	"src": "1374:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1374:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1476,
																				"name": "uniswaprouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "1323:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1337:7:9",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1003,
																			"src": "1323:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1323:23:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1475,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "1305:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$996_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1305:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$996",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1348:10:9",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 985,
															"src": "1305:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1305:90:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1291:104:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "1291:104:9"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1491,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1408:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1494,
														"indexExpression": {
															"expression": {
																"id": 1492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1426:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1430:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1426:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1408:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1440:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1408:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "1408:36:9"
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1498,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1455:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1503,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1501,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1481:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1473:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1499,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1473:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1455:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1490:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1455:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "1455:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1513:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1517:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1513:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f303030",
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1525:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1541:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1512,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1545:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1545:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1541:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1525:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1507,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1507:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "1507:49:9"
											}
										]
									},
									"id": 1519,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1460,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1453,
													"src": "1184:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1461,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "1191:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1462,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1459,
												"name": "ERC20",
												"nameLocations": [
													"1178:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1178:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1178:21:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1208:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1212:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1208:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1466,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1463,
												"name": "Ownable",
												"nameLocations": [
													"1200:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1200:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1200:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1099:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1085:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1085:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1130:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1116:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1116:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "1157:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1149:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:103:9"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:0:9"
									},
									"scope": 1848,
									"src": "1063:501:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "1649:1240:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "1668:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1686:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1678:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1678:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1678:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1668:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1535,
																"name": "TransferFromZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "1690:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1690:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1660:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "1660:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1728:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1749:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1741:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1741:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1728:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1546,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1753:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1753:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1720:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "1720:50:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1550,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1787:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1552,
														"indexExpression": {
															"id": 1551,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1805:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1787:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1553,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1816:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1555,
														"indexExpression": {
															"id": 1554,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "1834:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1816:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1787:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "1783:153:9",
												"trueBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "1846:90:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "1877:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1885:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1562,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "1896:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1557,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1861:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1848_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1867:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "1861:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1861:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1564,
															"nodeType": "ExpressionStatement",
															"src": "1861:42:9"
														},
														{
															"functionReturnParameters": 1527,
															"id": 1565,
															"nodeType": "Return",
															"src": "1918:7:9"
														}
													]
												}
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "1953:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "1948:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1568,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1948:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1570,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "1961:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1571,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "1974:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1961:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:37:9"
											},
											{
												"assignments": [
													1575
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "2001:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "1996:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1574,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1996:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1576,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2010:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1577,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2020:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2010:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1996:35:9"
											},
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "2052:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2044:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2044:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"nodeType": "VariableDeclarationStatement",
												"src": "2044:17:9"
											},
											{
												"condition": {
													"id": 1583,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1569,
													"src": "2075:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1594,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "2152:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1605,
													"nodeType": "IfStatement",
													"src": "2149:74:9",
													"trueBody": {
														"id": 1604,
														"nodeType": "Block",
														"src": "2160:63:9",
														"statements": [
															{
																"expression": {
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1595,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "2175:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1598,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1596,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1525,
																						"src": "2188:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1597,
																						"name": "sellTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "2197:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2188:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1599,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2187:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2208:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "2187:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2175:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1603,
																"nodeType": "ExpressionStatement",
																"src": "2175:36:9"
															}
														]
													}
												},
												"id": 1606,
												"nodeType": "IfStatement",
												"src": "2072:151:9",
												"trueBody": {
													"id": 1593,
													"nodeType": "Block",
													"src": "2082:62:9",
													"statements": [
														{
															"expression": {
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1584,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "2097:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1585,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1525,
																					"src": "2110:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1586,
																					"name": "buyTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1417,
																					"src": "2119:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2110:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1588,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2109:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2129:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2109:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2097:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "2097:35:9"
														}
													]
												}
											},
											{
												"assignments": [
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "2243:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2235:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2235:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1609,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "2255:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1610,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2264:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2255:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2235:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "2292:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1615,
																	"name": "netAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "2302:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1616,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "2314:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2302:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2292:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1619,
																"name": "ArithmeticError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "2325:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2325:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2284:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2284:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "2284:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1623,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2360:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2372:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2360:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1683,
												"nodeType": "IfStatement",
												"src": "2356:468:9",
												"trueBody": {
													"id": 1682,
													"nodeType": "Block",
													"src": "2375:449:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1629,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "2406:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1632,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2422:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$1848",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$1848",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2414:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1630,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2414:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2414:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1634,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "2429:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1626,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2390:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1848_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2396:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "2390:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2390:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1636,
															"nodeType": "ExpressionStatement",
															"src": "2390:49:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1638,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "2472:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1637,
																	"name": "TaxCollected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "2459:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2459:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1640,
															"nodeType": "EmitStatement",
															"src": "2454:28:9"
														},
														{
															"assignments": [
																1642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1642,
																	"mutability": "mutable",
																	"name": "liquidityTokens",
																	"nameLocation": "2507:15:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1682,
																	"src": "2499:23:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2499:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1649,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1643,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1581,
																				"src": "2526:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1644,
																				"name": "liquidityShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "2538:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2526:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2525:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2556:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2525:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2499:60:9"
														},
														{
															"assignments": [
																1651
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1651,
																	"mutability": "mutable",
																	"name": "burnTokens",
																	"nameLocation": "2582:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1682,
																	"src": "2574:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1650,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2574:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1658,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1652,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1581,
																				"src": "2596:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1653,
																				"name": "burnShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "2608:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2596:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2595:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2621:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2595:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2574:50:9"
														},
														{
															"assignments": [
																1660
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1660,
																	"mutability": "mutable",
																	"name": "rewardsTokens",
																	"nameLocation": "2647:13:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1682,
																	"src": "2639:21:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1659,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2639:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1666,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "2663:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1662,
																		"name": "liquidityTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "2675:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2663:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1664,
																	"name": "burnTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "2693:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2663:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2639:64:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1667,
																	"name": "burnTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "2724:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2737:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2724:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1681,
															"nodeType": "IfStatement",
															"src": "2720:93:9",
															"trueBody": {
																"id": 1680,
																"nodeType": "Block",
																"src": "2740:73:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1675,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2779:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_MemCoin_$1848",
																								"typeString": "contract MemCoin"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_MemCoin_$1848",
																								"typeString": "contract MemCoin"
																							}
																						],
																						"id": 1674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2771:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1673,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2771:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2771:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1677,
																					"name": "burnTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1651,
																					"src": "2786:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1670,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "2759:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_MemCoin_$1848_$",
																						"typeString": "type(contract super MemCoin)"
																					}
																				},
																				"id": 1672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2765:5:9",
																				"memberName": "_burn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 672,
																				"src": "2759:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2759:38:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1679,
																		"nodeType": "ExpressionStatement",
																		"src": "2759:38:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1687,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "2852:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2860:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2871:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1684,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2836:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemCoin_$1848_$",
																"typeString": "type(contract super MemCoin)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2842:9:9",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "2836:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "2836:45:9"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1581:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1598:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1590:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1614:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1606:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1633:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1625:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:51:9"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:9"
									},
									"scope": 1848,
									"src": "1572:1317:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "2959:434:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "2978:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2992:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2978:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1704,
																"name": "TokenAmountMustBePositive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "2995:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2995:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2970:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "2970:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1711,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3053:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3045:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1709,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3045:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3045:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1715,
																	"name": "uniswaprouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "3068:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3060:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1713,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3060:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3060:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "3084:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1708,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "3036:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3036:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "3036:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3191:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1848",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3183:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3183:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3183:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1733,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "3211:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3237:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3253:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1736,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3269:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3269:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1738,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3291:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3297:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3291:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1720,
																"name": "uniswaprouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "3109:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1392",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3123:15:9",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1054,
															"src": "3109:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1725,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3154:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$1848",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$1848",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3146:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1723,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3146:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3146:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3160:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3146:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3109:59:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3109:208:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "3109:208:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1743,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "3350:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1746,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3371:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$1848",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$1848",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3363:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1744,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3363:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3363:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3377:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3363:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3335:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3335:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "EmitStatement",
												"src": "3330:55:9"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1697,
												"name": "onlyOwner",
												"nameLocations": [
													"2949:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2949:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2949:9:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2906:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2927:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "2919:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:21:9"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2959:0:9"
									},
									"scope": 1848,
									"src": "2897:496:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "3454:240:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1760,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3473:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3477:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3473:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3495:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3487:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1762,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3487:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3487:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3473:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1767,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "3499:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3499:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3465:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "3465:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1772,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "3535:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1775,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3552:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$1848",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$1848",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3544:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1773,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3544:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3544:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3558:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3544:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3535:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1779,
																"name": "InsufficientFunds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "3567:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3567:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3527:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "3527:60:9"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3608:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "3600:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3600:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1787,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3626:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemCoin_$1848",
																	"typeString": "contract MemCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemCoin_$1848",
																	"typeString": "contract MemCoin"
																}
															],
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3618:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1785,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3618:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3618:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3632:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3618:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3600:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1797,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3678:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1793,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3660:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3660:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1791,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3669:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3652:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "3652:34:9"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1756,
												"name": "onlyOwner",
												"nameLocations": [
													"3444:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3444:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3444:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "3410:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3427:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "3419:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:16:9"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3454:0:9"
									},
									"scope": 1848,
									"src": "3401:293:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "3777:56:9",
										"statements": [
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1810,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "3788:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"id": 1811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3806:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3788:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1813,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "3817:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3788:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "3788:37:9"
											}
										]
									},
									"functionSelector": "c6a30647",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1807,
												"name": "onlyOwner",
												"nameLocations": [
													"3767:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3767:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3767:9:9"
										}
									],
									"name": "excludeFromTax",
									"nameLocation": "3711:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3734:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3726:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "3748:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3743:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:32:9"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3777:0:9"
									},
									"scope": 1848,
									"src": "3702:131:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "3913:129:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1827,
																	"name": "_buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "3932:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3943:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "3932:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "_sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "3949:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3961:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "3949:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3932:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1834,
																"name": "TaxTooHigh",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3965:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3965:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3924:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3924:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "3924:54:9"
											},
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1838,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "3989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1839,
														"name": "_buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "3998:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3989:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "3989:16:9"
											},
											{
												"expression": {
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "4016:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1843,
														"name": "_sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "4026:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4016:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "4016:18:9"
											}
										]
									},
									"functionSelector": "c647b20e",
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1823,
												"name": "onlyOwner",
												"nameLocations": [
													"3903:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3903:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3903:9:9"
										}
									],
									"name": "setTaxes",
									"nameLocation": "3850:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_buyTax",
												"nameLocation": "3867:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "3859:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3859:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_sellTax",
												"nameLocation": "3884:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "3876:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3858:35:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3913:0:9"
									},
									"scope": 1848,
									"src": "3841:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1849,
							"src": "322:3723:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1404,
								1406,
								1408,
								1410,
								1412,
								1414
							],
							"usedEvents": [
								24,
								811,
								820,
								1445,
								1451
							]
						}
					],
					"src": "33:4012:9"
				},
				"id": 9
			}
		}
	}
}