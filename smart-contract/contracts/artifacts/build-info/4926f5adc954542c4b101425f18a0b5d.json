{
	"id": "4926f5adc954542c4b101425f18a0b5d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"../.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\ncontract MemCoin is ERC20, Ownable {\r\n    error TransferFromZero();\r\n    error TransferToZero();\r\n    error ArithmeticError();\r\n    error TokenAmountMustBePositive();\r\n    error TaxTooHigh();\r\n    error InsufficientFunds();\r\n\r\n    uint256 public buyTax = 5;\r\n    uint256 public sellTax = 10;\r\n    uint256 public liquidityShare = 50;\r\n    uint256 public burnShare = 20;\r\n    uint256 public rewardsShare = 30;\r\n\r\n    IUniswapV2Router02 public uniswaprouter;\r\n    address public uniswapPair;\r\n    address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    mapping(address => bool) public isExcludedFromTax;\r\n\r\n    event TaxCollected(uint256 amount);\r\n    event LiquidityAdded(uint256 tokens, uint256 eth);\r\n    event TokensMinted(address indexed to, uint256 amount);\r\n\r\n    constructor(\r\n        string memory _name, \r\n        string memory _symbol, \r\n        address routerAddress,\r\n        address owner\r\n    ) ERC20(_name, _symbol) Ownable(owner) {\r\n        uniswaprouter = IUniswapV2Router02(routerAddress);\r\n        uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH());\r\n\r\n        isExcludedFromTax[owner] = true;\r\n        isExcludedFromTax[address(this)] = true;\r\n    }\r\n\r\n    function transfer(address sender, address recipient, uint256 amount) external{\r\n        require(sender != address(0), TransferFromZero());\r\n        require(recipient != address(0), TransferToZero());\r\n\r\n        if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {\r\n            super._transfer(sender, recipient, amount);\r\n            return;\r\n        }\r\n\r\n        bool isBuy = recipient == uniswapPair;\r\n        bool isSell = sender == uniswapPair;\r\n\r\n        uint256 taxAmount;\r\n        if(isBuy) {\r\n            taxAmount = (amount * buyTax) / 100;\r\n        }else if(isSell) {\r\n            taxAmount = (amount * sellTax) / 100;\r\n        }\r\n\r\n        uint256 netAmount = amount - taxAmount;\r\n        require(amount == netAmount + taxAmount, ArithmeticError());\r\n\r\n        if (taxAmount > 0) {\r\n            super._transfer(sender, address(this), taxAmount);\r\n            emit TaxCollected(taxAmount);\r\n\r\n            uint256 liquidityTokens = (taxAmount * liquidityShare) / 100;\r\n            uint256 burnTokens = (taxAmount * burnShare) / 100;\r\n            uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens;\r\n\r\n            super._transfer(address(this), uniswapPair, liquidityTokens);\r\n            \r\n            super._burn(address(this), burnTokens);\r\n\r\n            super._transfer(address(this), owner(), rewardsTokens);\r\n        }\r\n\r\n        super._transfer(sender, recipient, netAmount);\r\n    }\r\n\r\n    function _update(address sender, address recipient, uint256 amount) internal virtual override {\r\n        super._update(sender, recipient, amount);\r\n    }\r\n\r\n\r\n    function addLiquidity(uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAmount > 0, TokenAmountMustBePositive());\r\n\r\n        _approve(address(this), address(uniswaprouter), tokenAmount);\r\n\r\n        uniswaprouter.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            tokenAmount,\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n\r\n        emit LiquidityAdded(tokenAmount, address(this).balance);\r\n    }\r\n\r\n\r\n    function withdraw(uint256 amount) external onlyOwner {\r\n        require(msg.sender != address(0), TransferToZero());\r\n        require(amount <= address(this).balance, InsufficientFunds());\r\n\r\n        uint256 balance = address(this).balance;\r\n\r\n        payable(owner()).transfer(balance);\r\n    }\r\n\r\n    function excludeFromTax(address account, bool excluded) external onlyOwner {\r\n        isExcludedFromTax[account] = excluded;\r\n    }\r\n\r\n    function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {\r\n        require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh());\r\n        buyTax = _buyTax;\r\n        sellTax = _sellTax;\r\n    }\r\n}"
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 766,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 772,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 774,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 776,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 778,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mem.sol": {
				"MemCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ArithmeticError",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientFunds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TaxTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAmountMustBePositive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZero",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TaxCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellTax",
									"type": "uint256"
								}
							],
							"name": "setTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswaprouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mem.sol\":348:4356  contract MemCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mem.sol\":603:604  5 */\n  0x05\n    /* \"contracts/mem.sol\":579:604  uint256 public buyTax = 5 */\n  0x06\n  sstore\n    /* \"contracts/mem.sol\":636:638  10 */\n  0x0a\n    /* \"contracts/mem.sol\":611:638  uint256 public sellTax = 10 */\n  0x07\n  sstore\n    /* \"contracts/mem.sol\":677:679  50 */\n  0x32\n    /* \"contracts/mem.sol\":645:679  uint256 public liquidityShare = 50 */\n  0x08\n  sstore\n    /* \"contracts/mem.sol\":713:715  20 */\n  0x14\n    /* \"contracts/mem.sol\":686:715  uint256 public burnShare = 20 */\n  0x09\n  sstore\n    /* \"contracts/mem.sol\":752:754  30 */\n  0x1e\n    /* \"contracts/mem.sol\":722:754  uint256 public rewardsShare = 30 */\n  0x0a\n  sstore\n    /* \"contracts/mem.sol\":1150:1603  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/mem.sol\":1319:1324  owner */\n  dup1\n    /* \"contracts/mem.sol\":1295:1300  _name */\n  dup5\n    /* \"contracts/mem.sol\":1302:1309  _symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/mem.sol\":1372:1385  routerAddress */\n  dup2\n    /* \"contracts/mem.sol\":1337:1350  uniswaprouter */\n  0x0b\n  0x00\n    /* \"contracts/mem.sol\":1337:1386  uniswaprouter = IUniswapV2Router02(routerAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1429:1442  uniswaprouter */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/mem.sol\":1429:1450  uniswaprouter.factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc45a0155\n    /* \"contracts/mem.sol\":1429:1452  uniswaprouter.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"contracts/mem.sol\":1411:1464  IUniswapV2Factory(uniswaprouter.factory()).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"contracts/mem.sol\":1473:1477  this */\n  address\n    /* \"contracts/mem.sol\":1480:1493  uniswaprouter */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/mem.sol\":1480:1498  uniswaprouter.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"contracts/mem.sol\":1480:1500  uniswaprouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_24:\n    /* \"contracts/mem.sol\":1411:1501  IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_29:\n    /* \"contracts/mem.sol\":1397:1408  uniswapPair */\n  0x0c\n  0x00\n    /* \"contracts/mem.sol\":1397:1501  uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1541:1545  true */\n  0x01\n    /* \"contracts/mem.sol\":1514:1531  isExcludedFromTax */\n  0x0d\n    /* \"contracts/mem.sol\":1514:1538  isExcludedFromTax[owner] */\n  0x00\n    /* \"contracts/mem.sol\":1532:1537  owner */\n  dup4\n    /* \"contracts/mem.sol\":1514:1538  isExcludedFromTax[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/mem.sol\":1514:1545  isExcludedFromTax[owner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1591:1595  true */\n  0x01\n    /* \"contracts/mem.sol\":1556:1573  isExcludedFromTax */\n  0x0d\n    /* \"contracts/mem.sol\":1556:1588  isExcludedFromTax[address(this)] */\n  0x00\n    /* \"contracts/mem.sol\":1582:1586  this */\n  address\n    /* \"contracts/mem.sol\":1556:1588  isExcludedFromTax[address(this)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/mem.sol\":1556:1595  isExcludedFromTax[address(this)] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mem.sol\":1150:1603  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/mem.sol\":348:4356  contract MemCoin is ERC20, Ownable {... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_35:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_36:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_37:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_38:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_39:\n    /* \"#utility.yul\":957:984   */\n  tag_78\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_37\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_80\n  tag_38\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1030:1118   */\ntag_79:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_40:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_82\n  tag_32\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_83\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_39\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_41:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_86\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1434:1490   */\ntag_85:\n    /* \"#utility.yul\":1508:1537   */\n  tag_87\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_42:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_43:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_90\n    /* \"#utility.yul\":1885:1934   */\n  tag_91\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1869:1935   */\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_93\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2010:2122   */\ntag_92:\n    /* \"#utility.yul\":2131:2183   */\n  tag_94\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_42\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_44:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_97\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2292:2414   */\ntag_96:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_98\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_45:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_46:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_101\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_45\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_47:\n    /* \"#utility.yul\":2877:2901   */\n  tag_103\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_46\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_104:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_48:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_106\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_47\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  0x00\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  0x00\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_109\n  tag_33\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3239:3359   */\ntag_108:\n    /* \"#utility.yul\":3419:3420   */\n  0x00\n    /* \"#utility.yul\":3408:3417   */\n  dup6\n    /* \"#utility.yul\":3404:3421   */\n  add\n    /* \"#utility.yul\":3398:3422   */\n  mload\n    /* \"#utility.yul\":3449:3467   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3441:3447   */\n  dup2\n    /* \"#utility.yul\":3438:3468   */\n  gt\n    /* \"#utility.yul\":3435:3552   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3471:3550   */\n  tag_111\n  tag_34\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3435:3552   */\ntag_110:\n    /* \"#utility.yul\":3576:3650   */\n  tag_112\n    /* \"#utility.yul\":3642:3649   */\n  dup8\n    /* \"#utility.yul\":3633:3639   */\n  dup3\n    /* \"#utility.yul\":3622:3631   */\n  dup9\n    /* \"#utility.yul\":3618:3640   */\n  add\n    /* \"#utility.yul\":3576:3650   */\n  tag_44\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3566:3650   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3660   */\n  pop\n    /* \"#utility.yul\":3720:3722   */\n  0x20\n    /* \"#utility.yul\":3709:3718   */\n  dup6\n    /* \"#utility.yul\":3705:3723   */\n  add\n    /* \"#utility.yul\":3699:3724   */\n  mload\n    /* \"#utility.yul\":3751:3769   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3743:3749   */\n  dup2\n    /* \"#utility.yul\":3740:3770   */\n  gt\n    /* \"#utility.yul\":3737:3854   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3773:3852   */\n  tag_114\n  tag_34\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3737:3854   */\ntag_113:\n    /* \"#utility.yul\":3878:3952   */\n  tag_115\n    /* \"#utility.yul\":3944:3951   */\n  dup8\n    /* \"#utility.yul\":3935:3941   */\n  dup3\n    /* \"#utility.yul\":3924:3933   */\n  dup9\n    /* \"#utility.yul\":3920:3942   */\n  add\n    /* \"#utility.yul\":3878:3952   */\n  tag_44\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3868:3952   */\n  swap4\n  pop\n    /* \"#utility.yul\":3670:3962   */\n  pop\n    /* \"#utility.yul\":4001:4003   */\n  0x40\n    /* \"#utility.yul\":4027:4091   */\n  tag_116\n    /* \"#utility.yul\":4083:4090   */\n  dup8\n    /* \"#utility.yul\":4074:4080   */\n  dup3\n    /* \"#utility.yul\":4063:4072   */\n  dup9\n    /* \"#utility.yul\":4059:4081   */\n  add\n    /* \"#utility.yul\":4027:4091   */\n  tag_48\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4017:4091   */\n  swap3\n  pop\n    /* \"#utility.yul\":3972:4101   */\n  pop\n    /* \"#utility.yul\":4140:4142   */\n  0x60\n    /* \"#utility.yul\":4166:4230   */\n  tag_117\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4166:4230   */\n  tag_48\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4156:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":4111:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_49:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_50:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_51:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_121:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_123\n  tag_50\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4774:4858   */\ntag_122:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_52:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_53:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_54:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_55:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_128\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_54\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5489:5528   */\n  tag_129\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_54\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_56:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_57:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_58:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_133\n    /* \"#utility.yul\":5878:5912   */\n  tag_134\n    /* \"#utility.yul\":5887:5911   */\n  tag_135\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_56\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5878:5912   */\n  tag_57\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5860:5913   */\n  tag_56\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_59:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_60:\n    /* \"#utility.yul\":6116:6155   */\n  tag_138\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_58\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6177:6268   */\n  tag_139\n    /* \"#utility.yul\":6226:6267   */\n  tag_140\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_59\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_55\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_61:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6347:6348   */\n  0x00\n    /* \"#utility.yul\":6340:6348   */\n  swap1\n  pop\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_62:\n    /* \"#utility.yul\":6437:6469   */\n  tag_143\n  tag_61\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6478:6543   */\n  tag_144\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_60\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_63:\n    /* \"#utility.yul\":6615:6735   */\ntag_146:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_149\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_62\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_64:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_152\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_52\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6966:6995   */\n  tag_153\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_53\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_154:\n    /* \"#utility.yul\":7193:7273   */\n  tag_155\n    /* \"#utility.yul\":7249:7271   */\n  tag_156\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_53\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_151:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_65:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_66:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_159\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_65\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_67:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_161\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_66\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_9:\n    /* \"#utility.yul\":8010:8047   */\n  tag_163\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_49\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_165\n  tag_38\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8098:8154   */\ntag_164:\n    /* \"#utility.yul\":8178:8216   */\n  tag_166\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_51\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8263:8330   */\n  tag_167\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_64\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_169\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_170:\n    /* \"#utility.yul\":9204:9271   */\n  tag_171\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_67\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_168)\n    /* \"#utility.yul\":8425:9043   */\ntag_169:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_172\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_52\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_173:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_173)\ntag_175:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_177\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_66\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_176:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_168:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9294:9412   */\ntag_68:\n    /* \"#utility.yul\":9381:9405   */\n  tag_179\n    /* \"#utility.yul\":9399:9404   */\n  dup2\n    /* \"#utility.yul\":9381:9405   */\n  tag_46\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9376:9379   */\n  dup3\n    /* \"#utility.yul\":9369:9406   */\n  mstore\n    /* \"#utility.yul\":9294:9412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9418:9640   */\ntag_14:\n    /* \"#utility.yul\":9511:9515   */\n  0x00\n    /* \"#utility.yul\":9549:9551   */\n  0x20\n    /* \"#utility.yul\":9538:9547   */\n  dup3\n    /* \"#utility.yul\":9534:9552   */\n  add\n    /* \"#utility.yul\":9526:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9562:9633   */\n  tag_181\n    /* \"#utility.yul\":9630:9631   */\n  0x00\n    /* \"#utility.yul\":9619:9628   */\n  dup4\n    /* \"#utility.yul\":9615:9632   */\n  add\n    /* \"#utility.yul\":9606:9612   */\n  dup5\n    /* \"#utility.yul\":9562:9633   */\n  tag_68\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9418:9640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9646:9997   */\ntag_21:\n    /* \"#utility.yul\":9716:9722   */\n  0x00\n    /* \"#utility.yul\":9765:9767   */\n  0x20\n    /* \"#utility.yul\":9753:9762   */\n  dup3\n    /* \"#utility.yul\":9744:9751   */\n  dup5\n    /* \"#utility.yul\":9740:9763   */\n  sub\n    /* \"#utility.yul\":9736:9768   */\n  slt\n    /* \"#utility.yul\":9733:9852   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":9771:9850   */\n  tag_184\n  tag_33\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9733:9852   */\ntag_183:\n    /* \"#utility.yul\":9891:9892   */\n  0x00\n    /* \"#utility.yul\":9916:9980   */\n  tag_185\n    /* \"#utility.yul\":9972:9979   */\n  dup5\n    /* \"#utility.yul\":9963:9969   */\n  dup3\n    /* \"#utility.yul\":9952:9961   */\n  dup6\n    /* \"#utility.yul\":9948:9970   */\n  add\n    /* \"#utility.yul\":9916:9980   */\n  tag_48\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9906:9980   */\n  swap2\n  pop\n    /* \"#utility.yul\":9862:9990   */\n  pop\n    /* \"#utility.yul\":9646:9997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10003:10335   */\ntag_26:\n    /* \"#utility.yul\":10124:10128   */\n  0x00\n    /* \"#utility.yul\":10162:10164   */\n  0x40\n    /* \"#utility.yul\":10151:10160   */\n  dup3\n    /* \"#utility.yul\":10147:10165   */\n  add\n    /* \"#utility.yul\":10139:10165   */\n  swap1\n  pop\n    /* \"#utility.yul\":10175:10246   */\n  tag_187\n    /* \"#utility.yul\":10243:10244   */\n  0x00\n    /* \"#utility.yul\":10232:10241   */\n  dup4\n    /* \"#utility.yul\":10228:10245   */\n  add\n    /* \"#utility.yul\":10219:10225   */\n  dup6\n    /* \"#utility.yul\":10175:10246   */\n  tag_68\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":10256:10328   */\n  tag_188\n    /* \"#utility.yul\":10324:10326   */\n  0x20\n    /* \"#utility.yul\":10313:10322   */\n  dup4\n    /* \"#utility.yul\":10309:10327   */\n  add\n    /* \"#utility.yul\":10300:10306   */\n  dup5\n    /* \"#utility.yul\":10256:10328   */\n  tag_68\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":10003:10335   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/mem.sol\":348:4356  contract MemCoin is ERC20, Ownable {... */\ntag_30:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mem.sol\":348:4356  contract MemCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc647b20e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xcb4ca631\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xcb4ca631\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xc647b20e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6a30647\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbeabacc8\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x2431ba73\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x33727077\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x33727077\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4e6fd6c4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2431ba73\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x05bf0a54\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x15291cd4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/mem.sol\":686:715  uint256 public burnShare = 20 */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":645:679  uint256 public liquidityShare = 50 */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":763:802  IUniswapV2Router02 public uniswaprouter */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":3711:4005  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":722:754  uint256 public rewardsShare = 30 */\n    tag_12:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":842:923  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":579:604  uint256 public buyTax = 5 */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":3205:3701  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":1611:3034  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/mem.sol\":4152:4353  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/mem.sol\":4013:4144  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/mem.sol\":809:835  address public uniswapPair */\n    tag_24:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":932:981  mapping(address => bool) public isExcludedFromTax */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mem.sol\":611:638  uint256 public sellTax = 10 */\n    tag_26:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/mem.sol\":686:715  uint256 public burnShare = 20 */\n    tag_35:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":645:679  uint256 public liquidityShare = 50 */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":763:802  IUniswapV2Router02 public uniswaprouter */\n    tag_60:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":3711:4005  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/mem.sol\":3805:3806  0 */\n      0x00\n        /* \"contracts/mem.sol\":3783:3807  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3783:3793  msg.sender */\n      caller\n        /* \"contracts/mem.sol\":3783:3807  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":3775:3826  require(msg.sender != address(0), TransferToZero()) */\n      tag_153\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/mem.sol\":3855:3876  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3845:3851  amount */\n      dup2\n        /* \"contracts/mem.sol\":3845:3876  amount <= address(this).balance */\n      gt\n      iszero\n        /* \"contracts/mem.sol\":3837:3898  require(amount <= address(this).balance, InsufficientFunds()) */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x356680b700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/mem.sol\":3911:3926  uint256 balance */\n      0x00\n        /* \"contracts/mem.sol\":3929:3950  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3911:3950  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":3971:3978  owner() */\n      tag_155\n        /* \"contracts/mem.sol\":3971:3976  owner */\n      tag_92\n        /* \"contracts/mem.sol\":3971:3978  owner() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/mem.sol\":3963:3988  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3963:3997  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"contracts/mem.sol\":3989:3996  balance */\n      dup3\n        /* \"contracts/mem.sol\":3963:3997  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n        /* \"contracts/mem.sol\":3764:4005  {... */\n      pop\n        /* \"contracts/mem.sol\":3711:4005  function withdraw(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mem.sol\":722:754  uint256 public rewardsShare = 30 */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":842:923  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_75:\n        /* \"contracts/mem.sol\":881:923  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/mem.sol\":842:923  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":579:604  uint256 public buyTax = 5 */\n    tag_79:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":3205:3701  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/mem.sol\":3300:3301  0 */\n      0x00\n        /* \"contracts/mem.sol\":3286:3297  tokenAmount */\n      dup2\n        /* \"contracts/mem.sol\":3286:3301  tokenAmount > 0 */\n      gt\n        /* \"contracts/mem.sol\":3278:3331  require(tokenAmount > 0, TokenAmountMustBePositive()) */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x671d94d800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/mem.sol\":3344:3404  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      tag_163\n        /* \"contracts/mem.sol\":3361:3365  this */\n      address\n        /* \"contracts/mem.sol\":3376:3389  uniswaprouter */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3392:3403  tokenAmount */\n      dup4\n        /* \"contracts/mem.sol\":3344:3352  _approve */\n      tag_141\n        /* \"contracts/mem.sol\":3344:3404  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/mem.sol\":3417:3430  uniswaprouter */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":3417:3446  uniswaprouter.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"contracts/mem.sol\":3454:3475  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3499:3503  this */\n      address\n        /* \"contracts/mem.sol\":3519:3530  tokenAmount */\n      dup5\n        /* \"contracts/mem.sol\":3545:3546  0 */\n      0x00\n        /* \"contracts/mem.sol\":3561:3562  0 */\n      0x00\n        /* \"contracts/mem.sol\":3577:3584  owner() */\n      tag_164\n        /* \"contracts/mem.sol\":3577:3582  owner */\n      tag_92\n        /* \"contracts/mem.sol\":3577:3584  owner() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/mem.sol\":3599:3614  block.timestamp */\n      timestamp\n        /* \"contracts/mem.sol\":3417:3625  uniswaprouter.addLiquidityETH{value: address(this).balance}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":3643:3693  LiquidityAdded(tokenAmount, address(this).balance) */\n      0x38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b\n        /* \"contracts/mem.sol\":3658:3669  tokenAmount */\n      dup2\n        /* \"contracts/mem.sol\":3671:3692  address(this).balance */\n      selfbalance\n        /* \"contracts/mem.sol\":3643:3693  LiquidityAdded(tokenAmount, address(this).balance) */\n      mload(0x40)\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/mem.sol\":3205:3701  function addLiquidity(uint256 tokenAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_132\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_132\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":1611:3034  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_103:\n        /* \"contracts/mem.sol\":1725:1726  0 */\n      0x00\n        /* \"contracts/mem.sol\":1707:1727  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1707:1713  sender */\n      dup4\n        /* \"contracts/mem.sol\":1707:1727  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":1699:1748  require(sender != address(0), TransferFromZero()) */\n      tag_190\n      jumpi\n      mload(0x40)\n      0xf38f85c300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/mem.sol\":1788:1789  0 */\n      0x00\n        /* \"contracts/mem.sol\":1767:1790  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":1767:1776  recipient */\n      dup3\n        /* \"contracts/mem.sol\":1767:1790  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mem.sol\":1759:1809  require(recipient != address(0), TransferToZero()) */\n      tag_191\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/mem.sol\":1826:1843  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":1826:1851  isExcludedFromTax[sender] */\n      0x00\n        /* \"contracts/mem.sol\":1844:1850  sender */\n      dup5\n        /* \"contracts/mem.sol\":1826:1851  isExcludedFromTax[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/mem.sol\":1826:1883  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/mem.sol\":1855:1872  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":1855:1883  isExcludedFromTax[recipient] */\n      0x00\n        /* \"contracts/mem.sol\":1873:1882  recipient */\n      dup4\n        /* \"contracts/mem.sol\":1855:1883  isExcludedFromTax[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/mem.sol\":1826:1883  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n    tag_192:\n        /* \"contracts/mem.sol\":1822:1975  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/mem.sol\":1900:1942  super._transfer(sender, recipient, amount) */\n      tag_194\n        /* \"contracts/mem.sol\":1916:1922  sender */\n      dup4\n        /* \"contracts/mem.sol\":1924:1933  recipient */\n      dup4\n        /* \"contracts/mem.sol\":1935:1941  amount */\n      dup4\n        /* \"contracts/mem.sol\":1900:1915  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":1900:1942  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/mem.sol\":1957:1964  return; */\n      jump(tag_189)\n        /* \"contracts/mem.sol\":1822:1975  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n    tag_193:\n        /* \"contracts/mem.sol\":1987:1997  bool isBuy */\n      0x00\n        /* \"contracts/mem.sol\":2013:2024  uniswapPair */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2000:2024  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2000:2009  recipient */\n      dup4\n        /* \"contracts/mem.sol\":2000:2024  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mem.sol\":1987:2024  bool isBuy = recipient == uniswapPair */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2035:2046  bool isSell */\n      0x00\n        /* \"contracts/mem.sol\":2059:2070  uniswapPair */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2049:2070  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2049:2055  sender */\n      dup6\n        /* \"contracts/mem.sol\":2049:2070  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mem.sol\":2035:2070  bool isSell = sender == uniswapPair */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2083:2100  uint256 taxAmount */\n      0x00\n        /* \"contracts/mem.sol\":2114:2119  isBuy */\n      dup3\n        /* \"contracts/mem.sol\":2111:2262  if(isBuy) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/mem.sol\":2168:2171  100 */\n      0x64\n        /* \"contracts/mem.sol\":2158:2164  buyTax */\n      sload(0x06)\n        /* \"contracts/mem.sol\":2149:2155  amount */\n      dup6\n        /* \"contracts/mem.sol\":2149:2164  amount * buyTax */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/mem.sol\":2148:2171  (amount * buyTax) / 100 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/mem.sol\":2136:2171  taxAmount = (amount * buyTax) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2111:2262  if(isBuy) {... */\n      jump(tag_200)\n    tag_195:\n        /* \"contracts/mem.sol\":2191:2197  isSell */\n      dup2\n        /* \"contracts/mem.sol\":2188:2262  if(isSell) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/mem.sol\":2247:2250  100 */\n      0x64\n        /* \"contracts/mem.sol\":2236:2243  sellTax */\n      sload(0x07)\n        /* \"contracts/mem.sol\":2227:2233  amount */\n      dup6\n        /* \"contracts/mem.sol\":2227:2243  amount * sellTax */\n      tag_202\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_202:\n        /* \"contracts/mem.sol\":2226:2250  (amount * sellTax) / 100 */\n      tag_203\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_203:\n        /* \"contracts/mem.sol\":2214:2250  taxAmount = (amount * sellTax) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2188:2262  if(isSell) {... */\n    tag_201:\n        /* \"contracts/mem.sol\":2111:2262  if(isBuy) {... */\n    tag_200:\n        /* \"contracts/mem.sol\":2274:2291  uint256 netAmount */\n      0x00\n        /* \"contracts/mem.sol\":2303:2312  taxAmount */\n      dup2\n        /* \"contracts/mem.sol\":2294:2300  amount */\n      dup6\n        /* \"contracts/mem.sol\":2294:2312  amount - taxAmount */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/mem.sol\":2274:2312  uint256 netAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2353:2362  taxAmount */\n      dup2\n        /* \"contracts/mem.sol\":2341:2350  netAmount */\n      dup2\n        /* \"contracts/mem.sol\":2341:2362  netAmount + taxAmount */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/mem.sol\":2331:2337  amount */\n      dup6\n        /* \"contracts/mem.sol\":2331:2362  amount == netAmount + taxAmount */\n      eq\n        /* \"contracts/mem.sol\":2323:2382  require(amount == netAmount + taxAmount, ArithmeticError()) */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x1f825c6a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/mem.sol\":2411:2412  0 */\n      0x00\n        /* \"contracts/mem.sol\":2399:2408  taxAmount */\n      dup3\n        /* \"contracts/mem.sol\":2399:2412  taxAmount > 0 */\n      gt\n        /* \"contracts/mem.sol\":2395:2969  if (taxAmount > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/mem.sol\":2429:2478  super._transfer(sender, address(this), taxAmount) */\n      tag_210\n        /* \"contracts/mem.sol\":2445:2451  sender */\n      dup8\n        /* \"contracts/mem.sol\":2461:2465  this */\n      address\n        /* \"contracts/mem.sol\":2468:2477  taxAmount */\n      dup5\n        /* \"contracts/mem.sol\":2429:2444  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2429:2478  super._transfer(sender, address(this), taxAmount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/mem.sol\":2498:2521  TaxCollected(taxAmount) */\n      0x092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6\n        /* \"contracts/mem.sol\":2511:2520  taxAmount */\n      dup3\n        /* \"contracts/mem.sol\":2498:2521  TaxCollected(taxAmount) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/mem.sol\":2538:2561  uint256 liquidityTokens */\n      0x00\n        /* \"contracts/mem.sol\":2595:2598  100 */\n      0x64\n        /* \"contracts/mem.sol\":2577:2591  liquidityShare */\n      sload(0x08)\n        /* \"contracts/mem.sol\":2565:2574  taxAmount */\n      dup5\n        /* \"contracts/mem.sol\":2565:2591  taxAmount * liquidityShare */\n      tag_212\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_212:\n        /* \"contracts/mem.sol\":2564:2598  (taxAmount * liquidityShare) / 100 */\n      tag_213\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_213:\n        /* \"contracts/mem.sol\":2538:2598  uint256 liquidityTokens = (taxAmount * liquidityShare) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2613:2631  uint256 burnTokens */\n      0x00\n        /* \"contracts/mem.sol\":2660:2663  100 */\n      0x64\n        /* \"contracts/mem.sol\":2647:2656  burnShare */\n      sload(0x09)\n        /* \"contracts/mem.sol\":2635:2644  taxAmount */\n      dup6\n        /* \"contracts/mem.sol\":2635:2656  taxAmount * burnShare */\n      tag_214\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_214:\n        /* \"contracts/mem.sol\":2634:2663  (taxAmount * burnShare) / 100 */\n      tag_215\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_215:\n        /* \"contracts/mem.sol\":2613:2663  uint256 burnTokens = (taxAmount * burnShare) / 100 */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2678:2699  uint256 rewardsTokens */\n      0x00\n        /* \"contracts/mem.sol\":2732:2742  burnTokens */\n      dup2\n        /* \"contracts/mem.sol\":2714:2729  liquidityTokens */\n      dup4\n        /* \"contracts/mem.sol\":2702:2711  taxAmount */\n      dup7\n        /* \"contracts/mem.sol\":2702:2729  taxAmount - liquidityTokens */\n      tag_216\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_216:\n        /* \"contracts/mem.sol\":2702:2742  taxAmount - liquidityTokens - burnTokens */\n      tag_217\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_217:\n        /* \"contracts/mem.sol\":2678:2742  uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens */\n      swap1\n      pop\n        /* \"contracts/mem.sol\":2759:2819  super._transfer(address(this), uniswapPair, liquidityTokens) */\n      tag_218\n        /* \"contracts/mem.sol\":2783:2787  this */\n      address\n        /* \"contracts/mem.sol\":2790:2801  uniswapPair */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mem.sol\":2803:2818  liquidityTokens */\n      dup6\n        /* \"contracts/mem.sol\":2759:2774  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2759:2819  super._transfer(address(this), uniswapPair, liquidityTokens) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/mem.sol\":2848:2886  super._burn(address(this), burnTokens) */\n      tag_219\n        /* \"contracts/mem.sol\":2868:2872  this */\n      address\n        /* \"contracts/mem.sol\":2875:2885  burnTokens */\n      dup4\n        /* \"contracts/mem.sol\":2848:2859  super._burn */\n      tag_220\n        /* \"contracts/mem.sol\":2848:2886  super._burn(address(this), burnTokens) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/mem.sol\":2903:2957  super._transfer(address(this), owner(), rewardsTokens) */\n      tag_221\n        /* \"contracts/mem.sol\":2927:2931  this */\n      address\n        /* \"contracts/mem.sol\":2934:2941  owner() */\n      tag_222\n        /* \"contracts/mem.sol\":2934:2939  owner */\n      tag_92\n        /* \"contracts/mem.sol\":2934:2941  owner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/mem.sol\":2943:2956  rewardsTokens */\n      dup4\n        /* \"contracts/mem.sol\":2903:2918  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2903:2957  super._transfer(address(this), owner(), rewardsTokens) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/mem.sol\":2414:2969  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":2395:2969  if (taxAmount > 0) {... */\n    tag_209:\n        /* \"contracts/mem.sol\":2981:3026  super._transfer(sender, recipient, netAmount) */\n      tag_223\n        /* \"contracts/mem.sol\":2997:3003  sender */\n      dup8\n        /* \"contracts/mem.sol\":3005:3014  recipient */\n      dup8\n        /* \"contracts/mem.sol\":3016:3025  netAmount */\n      dup4\n        /* \"contracts/mem.sol\":2981:2996  super._transfer */\n      tag_148\n        /* \"contracts/mem.sol\":2981:3026  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/mem.sol\":1688:3034  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/mem.sol\":1611:3034  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_189:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":4152:4353  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/mem.sol\":4254:4256  10 */\n      0x0a\n        /* \"contracts/mem.sol\":4243:4250  _buyTax */\n      dup3\n        /* \"contracts/mem.sol\":4243:4256  _buyTax <= 10 */\n      gt\n      iszero\n        /* \"contracts/mem.sol\":4243:4274  _buyTax <= 10 && _sellTax <= 20 */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/mem.sol\":4272:4274  20 */\n      0x14\n        /* \"contracts/mem.sol\":4260:4268  _sellTax */\n      dup2\n        /* \"contracts/mem.sol\":4260:4274  _sellTax <= 20 */\n      gt\n      iszero\n        /* \"contracts/mem.sol\":4243:4274  _buyTax <= 10 && _sellTax <= 20 */\n    tag_227:\n        /* \"contracts/mem.sol\":4235:4289  require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh()) */\n      tag_228\n      jumpi\n      mload(0x40)\n      0xaf1ee13400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/mem.sol\":4309:4316  _buyTax */\n      dup2\n        /* \"contracts/mem.sol\":4300:4306  buyTax */\n      0x06\n        /* \"contracts/mem.sol\":4300:4316  buyTax = _buyTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":4337:4345  _sellTax */\n      dup1\n        /* \"contracts/mem.sol\":4327:4334  sellTax */\n      0x07\n        /* \"contracts/mem.sol\":4327:4345  sellTax = _sellTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":4152:4353  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":4013:4144  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/mem.sol\":4128:4136  excluded */\n      dup1\n        /* \"contracts/mem.sol\":4099:4116  isExcludedFromTax */\n      0x0d\n        /* \"contracts/mem.sol\":4099:4125  isExcludedFromTax[account] */\n      0x00\n        /* \"contracts/mem.sol\":4117:4124  account */\n      dup5\n        /* \"contracts/mem.sol\":4099:4125  isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mem.sol\":4099:4136  isExcludedFromTax[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/mem.sol\":4013:4144  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":809:835  address public uniswapPair */\n    tag_113:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":932:981  mapping(address => bool) public isExcludedFromTax */\n    tag_117:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/mem.sol\":611:638  uint256 public sellTax = 10 */\n    tag_120:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mem.sol\":3042:3195  function _update(address sender, address recipient, uint256 amount) internal virtual override {... */\n    tag_256:\n        /* \"contracts/mem.sol\":3147:3187  super._update(sender, recipient, amount) */\n      tag_276\n        /* \"contracts/mem.sol\":3161:3167  sender */\n      dup4\n        /* \"contracts/mem.sol\":3169:3178  recipient */\n      dup4\n        /* \"contracts/mem.sol\":3180:3186  amount */\n      dup4\n        /* \"contracts/mem.sol\":3147:3160  super._update */\n      tag_277\n        /* \"contracts/mem.sol\":3147:3187  super._update(sender, recipient, amount) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/mem.sol\":3042:3195  function _update(address sender, address recipient, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_280\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_280:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_281)\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_285)\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_287:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_288:\n        /* \"#utility.yul\":177:201   */\n      tag_325\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_287\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_37:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_327\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_288\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_289:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_290:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_291:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_292:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_293:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_333\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_289\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1146:1217   */\n      tag_334\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_290\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_335\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_291\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1316:1345   */\n      tag_336\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_292\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_41:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_338\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_293\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_295:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_297:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_298:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_344\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_297\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_299:\n        /* \"#utility.yul\":2311:2335   */\n      tag_346\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_298\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_347:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_300:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_349\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_299\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_301:\n        /* \"#utility.yul\":2584:2608   */\n      tag_351\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_287\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_352:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_302:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_354\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_301\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_44:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_357\n      tag_295\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2877:2996   */\n    tag_356:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_358\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_300\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_359\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_302\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_303:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_304:\n        /* \"#utility.yul\":3441:3462   */\n      tag_362\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_303\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_47:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_364\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_304\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_56:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_367\n      tag_295\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3801:3920   */\n    tag_366:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_368\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_300\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_369\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_300\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_370\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_302\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4376   */\n    tag_305:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4370   */\n      dup2\n        /* \"#utility.yul\":4358:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4524   */\n    tag_306:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4518   */\n      tag_373\n        /* \"#utility.yul\":4483:4517   */\n      tag_374\n        /* \"#utility.yul\":4492:4516   */\n      tag_375\n        /* \"#utility.yul\":4510:4515   */\n      dup5\n        /* \"#utility.yul\":4492:4516   */\n      tag_297\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4483:4517   */\n      tag_305\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4465:4518   */\n      tag_297\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4452:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4656   */\n    tag_307:\n        /* \"#utility.yul\":4580:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4650   */\n      tag_377\n        /* \"#utility.yul\":4644:4649   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      tag_306\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4600:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4814   */\n    tag_308:\n        /* \"#utility.yul\":4738:4747   */\n      0x00\n        /* \"#utility.yul\":4771:4808   */\n      tag_379\n        /* \"#utility.yul\":4802:4807   */\n      dup3\n        /* \"#utility.yul\":4771:4808   */\n      tag_307\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4758:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4820:5003   */\n    tag_309:\n        /* \"#utility.yul\":4933:4996   */\n      tag_381\n        /* \"#utility.yul\":4990:4995   */\n      dup2\n        /* \"#utility.yul\":4933:4996   */\n      tag_308\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4997   */\n      mstore\n        /* \"#utility.yul\":4820:5003   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5009:5283   */\n    tag_62:\n        /* \"#utility.yul\":5128:5132   */\n      0x00\n        /* \"#utility.yul\":5166:5168   */\n      0x20\n        /* \"#utility.yul\":5155:5164   */\n      dup3\n        /* \"#utility.yul\":5151:5169   */\n      add\n        /* \"#utility.yul\":5143:5169   */\n      swap1\n      pop\n        /* \"#utility.yul\":5179:5276   */\n      tag_383\n        /* \"#utility.yul\":5273:5274   */\n      0x00\n        /* \"#utility.yul\":5262:5271   */\n      dup4\n        /* \"#utility.yul\":5258:5275   */\n      add\n        /* \"#utility.yul\":5249:5255   */\n      dup5\n        /* \"#utility.yul\":5179:5276   */\n      tag_309\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5009:5283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5289:5618   */\n    tag_65:\n        /* \"#utility.yul\":5348:5354   */\n      0x00\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"#utility.yul\":5385:5394   */\n      dup3\n        /* \"#utility.yul\":5376:5383   */\n      dup5\n        /* \"#utility.yul\":5372:5395   */\n      sub\n        /* \"#utility.yul\":5368:5400   */\n      slt\n        /* \"#utility.yul\":5365:5484   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5403:5482   */\n      tag_386\n      tag_295\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5365:5484   */\n    tag_385:\n        /* \"#utility.yul\":5523:5524   */\n      0x00\n        /* \"#utility.yul\":5548:5601   */\n      tag_387\n        /* \"#utility.yul\":5593:5600   */\n      dup5\n        /* \"#utility.yul\":5584:5590   */\n      dup3\n        /* \"#utility.yul\":5573:5582   */\n      dup6\n        /* \"#utility.yul\":5569:5591   */\n      add\n        /* \"#utility.yul\":5548:5601   */\n      tag_302\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5538:5601   */\n      swap2\n      pop\n        /* \"#utility.yul\":5494:5611   */\n      pop\n        /* \"#utility.yul\":5289:5618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5624:5710   */\n    tag_310:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5703   */\n      0xff\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5704   */\n      and\n        /* \"#utility.yul\":5677:5704   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5828   */\n    tag_311:\n        /* \"#utility.yul\":5799:5821   */\n      tag_390\n        /* \"#utility.yul\":5815:5820   */\n      dup2\n        /* \"#utility.yul\":5799:5821   */\n      tag_310\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5794:5797   */\n      dup3\n        /* \"#utility.yul\":5787:5822   */\n      mstore\n        /* \"#utility.yul\":5716:5828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:6048   */\n    tag_70:\n        /* \"#utility.yul\":5923:5927   */\n      0x00\n        /* \"#utility.yul\":5961:5963   */\n      0x20\n        /* \"#utility.yul\":5950:5959   */\n      dup3\n        /* \"#utility.yul\":5946:5964   */\n      add\n        /* \"#utility.yul\":5938:5964   */\n      swap1\n      pop\n        /* \"#utility.yul\":5974:6041   */\n      tag_392\n        /* \"#utility.yul\":6038:6039   */\n      0x00\n        /* \"#utility.yul\":6027:6036   */\n      dup4\n        /* \"#utility.yul\":6023:6040   */\n      add\n        /* \"#utility.yul\":6014:6020   */\n      dup5\n        /* \"#utility.yul\":5974:6041   */\n      tag_311\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5834:6048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6054:6172   */\n    tag_312:\n        /* \"#utility.yul\":6141:6165   */\n      tag_394\n        /* \"#utility.yul\":6159:6164   */\n      dup2\n        /* \"#utility.yul\":6141:6165   */\n      tag_298\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6136:6139   */\n      dup3\n        /* \"#utility.yul\":6129:6166   */\n      mstore\n        /* \"#utility.yul\":6054:6172   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6178:6400   */\n    tag_77:\n        /* \"#utility.yul\":6271:6275   */\n      0x00\n        /* \"#utility.yul\":6309:6311   */\n      0x20\n        /* \"#utility.yul\":6298:6307   */\n      dup3\n        /* \"#utility.yul\":6294:6312   */\n      add\n        /* \"#utility.yul\":6286:6312   */\n      swap1\n      pop\n        /* \"#utility.yul\":6322:6393   */\n      tag_396\n        /* \"#utility.yul\":6390:6391   */\n      0x00\n        /* \"#utility.yul\":6379:6388   */\n      dup4\n        /* \"#utility.yul\":6375:6392   */\n      add\n        /* \"#utility.yul\":6366:6372   */\n      dup5\n        /* \"#utility.yul\":6322:6393   */\n      tag_312\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6178:6400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6406:6735   */\n    tag_86:\n        /* \"#utility.yul\":6465:6471   */\n      0x00\n        /* \"#utility.yul\":6514:6516   */\n      0x20\n        /* \"#utility.yul\":6502:6511   */\n      dup3\n        /* \"#utility.yul\":6493:6500   */\n      dup5\n        /* \"#utility.yul\":6489:6512   */\n      sub\n        /* \"#utility.yul\":6485:6517   */\n      slt\n        /* \"#utility.yul\":6482:6601   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6520:6599   */\n      tag_399\n      tag_295\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6482:6601   */\n    tag_398:\n        /* \"#utility.yul\":6640:6641   */\n      0x00\n        /* \"#utility.yul\":6665:6718   */\n      tag_400\n        /* \"#utility.yul\":6710:6717   */\n      dup5\n        /* \"#utility.yul\":6701:6707   */\n      dup3\n        /* \"#utility.yul\":6690:6699   */\n      dup6\n        /* \"#utility.yul\":6686:6708   */\n      add\n        /* \"#utility.yul\":6665:6718   */\n      tag_300\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6655:6718   */\n      swap2\n      pop\n        /* \"#utility.yul\":6611:6728   */\n      pop\n        /* \"#utility.yul\":6406:6735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6741:7215   */\n    tag_106:\n        /* \"#utility.yul\":6809:6815   */\n      0x00\n        /* \"#utility.yul\":6817:6823   */\n      0x00\n        /* \"#utility.yul\":6866:6868   */\n      0x40\n        /* \"#utility.yul\":6854:6863   */\n      dup4\n        /* \"#utility.yul\":6845:6852   */\n      dup6\n        /* \"#utility.yul\":6841:6864   */\n      sub\n        /* \"#utility.yul\":6837:6869   */\n      slt\n        /* \"#utility.yul\":6834:6953   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6872:6951   */\n      tag_403\n      tag_295\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6834:6953   */\n    tag_402:\n        /* \"#utility.yul\":6992:6993   */\n      0x00\n        /* \"#utility.yul\":7017:7070   */\n      tag_404\n        /* \"#utility.yul\":7062:7069   */\n      dup6\n        /* \"#utility.yul\":7053:7059   */\n      dup3\n        /* \"#utility.yul\":7042:7051   */\n      dup7\n        /* \"#utility.yul\":7038:7060   */\n      add\n        /* \"#utility.yul\":7017:7070   */\n      tag_302\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7007:7070   */\n      swap3\n      pop\n        /* \"#utility.yul\":6963:7080   */\n      pop\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7145:7198   */\n      tag_405\n        /* \"#utility.yul\":7190:7197   */\n      dup6\n        /* \"#utility.yul\":7181:7187   */\n      dup3\n        /* \"#utility.yul\":7170:7179   */\n      dup7\n        /* \"#utility.yul\":7166:7188   */\n      add\n        /* \"#utility.yul\":7145:7198   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7135:7198   */\n      swap2\n      pop\n        /* \"#utility.yul\":7090:7208   */\n      pop\n        /* \"#utility.yul\":6741:7215   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7221:7337   */\n    tag_313:\n        /* \"#utility.yul\":7291:7312   */\n      tag_407\n        /* \"#utility.yul\":7306:7311   */\n      dup2\n        /* \"#utility.yul\":7291:7312   */\n      tag_303\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7284:7289   */\n      dup2\n        /* \"#utility.yul\":7281:7313   */\n      eq\n        /* \"#utility.yul\":7271:7331   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7327:7328   */\n      0x00\n        /* \"#utility.yul\":7324:7325   */\n      0x00\n        /* \"#utility.yul\":7317:7329   */\n      revert\n        /* \"#utility.yul\":7271:7331   */\n    tag_408:\n        /* \"#utility.yul\":7221:7337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7343:7476   */\n    tag_314:\n        /* \"#utility.yul\":7386:7391   */\n      0x00\n        /* \"#utility.yul\":7424:7430   */\n      dup2\n        /* \"#utility.yul\":7411:7431   */\n      calldataload\n        /* \"#utility.yul\":7402:7431   */\n      swap1\n      pop\n        /* \"#utility.yul\":7440:7470   */\n      tag_410\n        /* \"#utility.yul\":7464:7469   */\n      dup2\n        /* \"#utility.yul\":7440:7470   */\n      tag_313\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7343:7476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7482:7950   */\n    tag_110:\n        /* \"#utility.yul\":7547:7553   */\n      0x00\n        /* \"#utility.yul\":7555:7561   */\n      0x00\n        /* \"#utility.yul\":7604:7606   */\n      0x40\n        /* \"#utility.yul\":7592:7601   */\n      dup4\n        /* \"#utility.yul\":7583:7590   */\n      dup6\n        /* \"#utility.yul\":7579:7602   */\n      sub\n        /* \"#utility.yul\":7575:7607   */\n      slt\n        /* \"#utility.yul\":7572:7691   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":7610:7689   */\n      tag_413\n      tag_295\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7572:7691   */\n    tag_412:\n        /* \"#utility.yul\":7730:7731   */\n      0x00\n        /* \"#utility.yul\":7755:7808   */\n      tag_414\n        /* \"#utility.yul\":7800:7807   */\n      dup6\n        /* \"#utility.yul\":7791:7797   */\n      dup3\n        /* \"#utility.yul\":7780:7789   */\n      dup7\n        /* \"#utility.yul\":7776:7798   */\n      add\n        /* \"#utility.yul\":7755:7808   */\n      tag_300\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7745:7808   */\n      swap3\n      pop\n        /* \"#utility.yul\":7701:7818   */\n      pop\n        /* \"#utility.yul\":7857:7859   */\n      0x20\n        /* \"#utility.yul\":7883:7933   */\n      tag_415\n        /* \"#utility.yul\":7925:7932   */\n      dup6\n        /* \"#utility.yul\":7916:7922   */\n      dup3\n        /* \"#utility.yul\":7905:7914   */\n      dup7\n        /* \"#utility.yul\":7901:7923   */\n      add\n        /* \"#utility.yul\":7883:7933   */\n      tag_314\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7873:7933   */\n      swap2\n      pop\n        /* \"#utility.yul\":7828:7943   */\n      pop\n        /* \"#utility.yul\":7482:7950   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7956:8430   */\n    tag_124:\n        /* \"#utility.yul\":8024:8030   */\n      0x00\n        /* \"#utility.yul\":8032:8038   */\n      0x00\n        /* \"#utility.yul\":8081:8083   */\n      0x40\n        /* \"#utility.yul\":8069:8078   */\n      dup4\n        /* \"#utility.yul\":8060:8067   */\n      dup6\n        /* \"#utility.yul\":8056:8079   */\n      sub\n        /* \"#utility.yul\":8052:8084   */\n      slt\n        /* \"#utility.yul\":8049:8168   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8087:8166   */\n      tag_418\n      tag_295\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8049:8168   */\n    tag_417:\n        /* \"#utility.yul\":8207:8208   */\n      0x00\n        /* \"#utility.yul\":8232:8285   */\n      tag_419\n        /* \"#utility.yul\":8277:8284   */\n      dup6\n        /* \"#utility.yul\":8268:8274   */\n      dup3\n        /* \"#utility.yul\":8257:8266   */\n      dup7\n        /* \"#utility.yul\":8253:8275   */\n      add\n        /* \"#utility.yul\":8232:8285   */\n      tag_300\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8222:8285   */\n      swap3\n      pop\n        /* \"#utility.yul\":8178:8295   */\n      pop\n        /* \"#utility.yul\":8334:8336   */\n      0x20\n        /* \"#utility.yul\":8360:8413   */\n      tag_420\n        /* \"#utility.yul\":8405:8412   */\n      dup6\n        /* \"#utility.yul\":8396:8402   */\n      dup3\n        /* \"#utility.yul\":8385:8394   */\n      dup7\n        /* \"#utility.yul\":8381:8403   */\n      add\n        /* \"#utility.yul\":8360:8413   */\n      tag_300\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8350:8413   */\n      swap2\n      pop\n        /* \"#utility.yul\":8305:8423   */\n      pop\n        /* \"#utility.yul\":7956:8430   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8436:8616   */\n    tag_315:\n        /* \"#utility.yul\":8484:8561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8481:8482   */\n      0x00\n        /* \"#utility.yul\":8474:8562   */\n      mstore\n        /* \"#utility.yul\":8581:8585   */\n      0x22\n        /* \"#utility.yul\":8578:8579   */\n      0x04\n        /* \"#utility.yul\":8571:8586   */\n      mstore\n        /* \"#utility.yul\":8605:8609   */\n      0x24\n        /* \"#utility.yul\":8602:8603   */\n      0x00\n        /* \"#utility.yul\":8595:8610   */\n      revert\n        /* \"#utility.yul\":8622:8942   */\n    tag_132:\n        /* \"#utility.yul\":8666:8672   */\n      0x00\n        /* \"#utility.yul\":8703:8704   */\n      0x02\n        /* \"#utility.yul\":8697:8701   */\n      dup3\n        /* \"#utility.yul\":8693:8705   */\n      div\n        /* \"#utility.yul\":8683:8705   */\n      swap1\n      pop\n        /* \"#utility.yul\":8750:8751   */\n      0x01\n        /* \"#utility.yul\":8744:8748   */\n      dup3\n        /* \"#utility.yul\":8740:8752   */\n      and\n        /* \"#utility.yul\":8771:8789   */\n      dup1\n        /* \"#utility.yul\":8761:8842   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8827:8831   */\n      0x7f\n        /* \"#utility.yul\":8819:8825   */\n      dup3\n        /* \"#utility.yul\":8815:8832   */\n      and\n        /* \"#utility.yul\":8805:8832   */\n      swap2\n      pop\n        /* \"#utility.yul\":8761:8842   */\n    tag_423:\n        /* \"#utility.yul\":8889:8891   */\n      0x20\n        /* \"#utility.yul\":8881:8887   */\n      dup3\n        /* \"#utility.yul\":8878:8892   */\n      lt\n        /* \"#utility.yul\":8858:8876   */\n      dup2\n        /* \"#utility.yul\":8855:8893   */\n      sub\n        /* \"#utility.yul\":8852:8936   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":8908:8926   */\n      tag_425\n      tag_315\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8852:8936   */\n    tag_424:\n        /* \"#utility.yul\":8673:8942   */\n      pop\n        /* \"#utility.yul\":8622:8942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8948:9033   */\n    tag_316:\n        /* \"#utility.yul\":8993:9000   */\n      0x00\n        /* \"#utility.yul\":9022:9027   */\n      dup2\n        /* \"#utility.yul\":9011:9027   */\n      swap1\n      pop\n        /* \"#utility.yul\":8948:9033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9039:9197   */\n    tag_317:\n        /* \"#utility.yul\":9097:9106   */\n      0x00\n        /* \"#utility.yul\":9130:9191   */\n      tag_428\n        /* \"#utility.yul\":9148:9190   */\n      tag_429\n        /* \"#utility.yul\":9157:9189   */\n      tag_430\n        /* \"#utility.yul\":9183:9188   */\n      dup5\n        /* \"#utility.yul\":9157:9189   */\n      tag_316\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9148:9190   */\n      tag_305\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9130:9191   */\n      tag_287\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9117:9191   */\n      swap1\n      pop\n        /* \"#utility.yul\":9039:9197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9203:9350   */\n    tag_318:\n        /* \"#utility.yul\":9298:9343   */\n      tag_432\n        /* \"#utility.yul\":9337:9342   */\n      dup2\n        /* \"#utility.yul\":9298:9343   */\n      tag_317\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9293:9296   */\n      dup3\n        /* \"#utility.yul\":9286:9344   */\n      mstore\n        /* \"#utility.yul\":9203:9350   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:10163   */\n    tag_166:\n        /* \"#utility.yul\":9605:9609   */\n      0x00\n        /* \"#utility.yul\":9643:9646   */\n      0xc0\n        /* \"#utility.yul\":9632:9641   */\n      dup3\n        /* \"#utility.yul\":9628:9647   */\n      add\n        /* \"#utility.yul\":9620:9647   */\n      swap1\n      pop\n        /* \"#utility.yul\":9657:9728   */\n      tag_434\n        /* \"#utility.yul\":9725:9726   */\n      0x00\n        /* \"#utility.yul\":9714:9723   */\n      dup4\n        /* \"#utility.yul\":9710:9727   */\n      add\n        /* \"#utility.yul\":9701:9707   */\n      dup10\n        /* \"#utility.yul\":9657:9728   */\n      tag_312\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9738:9810   */\n      tag_435\n        /* \"#utility.yul\":9806:9808   */\n      0x20\n        /* \"#utility.yul\":9795:9804   */\n      dup4\n        /* \"#utility.yul\":9791:9809   */\n      add\n        /* \"#utility.yul\":9782:9788   */\n      dup9\n        /* \"#utility.yul\":9738:9810   */\n      tag_288\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9820:9900   */\n      tag_436\n        /* \"#utility.yul\":9896:9898   */\n      0x40\n        /* \"#utility.yul\":9885:9894   */\n      dup4\n        /* \"#utility.yul\":9881:9899   */\n      add\n        /* \"#utility.yul\":9872:9878   */\n      dup8\n        /* \"#utility.yul\":9820:9900   */\n      tag_318\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9910:9990   */\n      tag_437\n        /* \"#utility.yul\":9986:9988   */\n      0x60\n        /* \"#utility.yul\":9975:9984   */\n      dup4\n        /* \"#utility.yul\":9971:9989   */\n      add\n        /* \"#utility.yul\":9962:9968   */\n      dup7\n        /* \"#utility.yul\":9910:9990   */\n      tag_318\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10000:10073   */\n      tag_438\n        /* \"#utility.yul\":10068:10071   */\n      0x80\n        /* \"#utility.yul\":10057:10066   */\n      dup4\n        /* \"#utility.yul\":10053:10072   */\n      add\n        /* \"#utility.yul\":10044:10050   */\n      dup6\n        /* \"#utility.yul\":10000:10073   */\n      tag_312\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10083:10156   */\n      tag_439\n        /* \"#utility.yul\":10151:10154   */\n      0xa0\n        /* \"#utility.yul\":10140:10149   */\n      dup4\n        /* \"#utility.yul\":10136:10155   */\n      add\n        /* \"#utility.yul\":10127:10133   */\n      dup5\n        /* \"#utility.yul\":10083:10156   */\n      tag_288\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9356:10163   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10169:10312   */\n    tag_319:\n        /* \"#utility.yul\":10226:10231   */\n      0x00\n        /* \"#utility.yul\":10257:10263   */\n      dup2\n        /* \"#utility.yul\":10251:10264   */\n      mload\n        /* \"#utility.yul\":10242:10264   */\n      swap1\n      pop\n        /* \"#utility.yul\":10273:10306   */\n      tag_441\n        /* \"#utility.yul\":10300:10305   */\n      dup2\n        /* \"#utility.yul\":10273:10306   */\n      tag_301\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10169:10312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10981   */\n    tag_170:\n        /* \"#utility.yul\":10406:10412   */\n      0x00\n        /* \"#utility.yul\":10414:10420   */\n      0x00\n        /* \"#utility.yul\":10422:10428   */\n      0x00\n        /* \"#utility.yul\":10471:10473   */\n      0x60\n        /* \"#utility.yul\":10459:10468   */\n      dup5\n        /* \"#utility.yul\":10450:10457   */\n      dup7\n        /* \"#utility.yul\":10446:10469   */\n      sub\n        /* \"#utility.yul\":10442:10474   */\n      slt\n        /* \"#utility.yul\":10439:10558   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":10477:10556   */\n      tag_444\n      tag_295\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10439:10558   */\n    tag_443:\n        /* \"#utility.yul\":10597:10598   */\n      0x00\n        /* \"#utility.yul\":10622:10686   */\n      tag_445\n        /* \"#utility.yul\":10678:10685   */\n      dup7\n        /* \"#utility.yul\":10669:10675   */\n      dup3\n        /* \"#utility.yul\":10658:10667   */\n      dup8\n        /* \"#utility.yul\":10654:10676   */\n      add\n        /* \"#utility.yul\":10622:10686   */\n      tag_319\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10612:10686   */\n      swap4\n      pop\n        /* \"#utility.yul\":10568:10696   */\n      pop\n        /* \"#utility.yul\":10735:10737   */\n      0x20\n        /* \"#utility.yul\":10761:10825   */\n      tag_446\n        /* \"#utility.yul\":10817:10824   */\n      dup7\n        /* \"#utility.yul\":10808:10814   */\n      dup3\n        /* \"#utility.yul\":10797:10806   */\n      dup8\n        /* \"#utility.yul\":10793:10815   */\n      add\n        /* \"#utility.yul\":10761:10825   */\n      tag_319\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10751:10825   */\n      swap3\n      pop\n        /* \"#utility.yul\":10706:10835   */\n      pop\n        /* \"#utility.yul\":10874:10876   */\n      0x40\n        /* \"#utility.yul\":10900:10964   */\n      tag_447\n        /* \"#utility.yul\":10956:10963   */\n      dup7\n        /* \"#utility.yul\":10947:10953   */\n      dup3\n        /* \"#utility.yul\":10936:10945   */\n      dup8\n        /* \"#utility.yul\":10932:10954   */\n      add\n        /* \"#utility.yul\":10900:10964   */\n      tag_319\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10890:10964   */\n      swap2\n      pop\n        /* \"#utility.yul\":10845:10974   */\n      pop\n        /* \"#utility.yul\":10318:10981   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10987:11319   */\n    tag_172:\n        /* \"#utility.yul\":11108:11112   */\n      0x00\n        /* \"#utility.yul\":11146:11148   */\n      0x40\n        /* \"#utility.yul\":11135:11144   */\n      dup3\n        /* \"#utility.yul\":11131:11149   */\n      add\n        /* \"#utility.yul\":11123:11149   */\n      swap1\n      pop\n        /* \"#utility.yul\":11159:11230   */\n      tag_449\n        /* \"#utility.yul\":11227:11228   */\n      0x00\n        /* \"#utility.yul\":11216:11225   */\n      dup4\n        /* \"#utility.yul\":11212:11229   */\n      add\n        /* \"#utility.yul\":11203:11209   */\n      dup6\n        /* \"#utility.yul\":11159:11230   */\n      tag_288\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11240:11312   */\n      tag_450\n        /* \"#utility.yul\":11308:11310   */\n      0x20\n        /* \"#utility.yul\":11297:11306   */\n      dup4\n        /* \"#utility.yul\":11293:11311   */\n      add\n        /* \"#utility.yul\":11284:11290   */\n      dup5\n        /* \"#utility.yul\":11240:11312   */\n      tag_288\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10987:11319   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11325:11505   */\n    tag_320:\n        /* \"#utility.yul\":11373:11450   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11370:11371   */\n      0x00\n        /* \"#utility.yul\":11363:11451   */\n      mstore\n        /* \"#utility.yul\":11470:11474   */\n      0x11\n        /* \"#utility.yul\":11467:11468   */\n      0x04\n        /* \"#utility.yul\":11460:11475   */\n      mstore\n        /* \"#utility.yul\":11494:11498   */\n      0x24\n        /* \"#utility.yul\":11491:11492   */\n      0x00\n        /* \"#utility.yul\":11484:11499   */\n      revert\n        /* \"#utility.yul\":11511:11921   */\n    tag_197:\n        /* \"#utility.yul\":11551:11558   */\n      0x00\n        /* \"#utility.yul\":11574:11594   */\n      tag_453\n        /* \"#utility.yul\":11592:11593   */\n      dup3\n        /* \"#utility.yul\":11574:11594   */\n      tag_287\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11569:11594   */\n      swap2\n      pop\n        /* \"#utility.yul\":11608:11628   */\n      tag_454\n        /* \"#utility.yul\":11626:11627   */\n      dup4\n        /* \"#utility.yul\":11608:11628   */\n      tag_287\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11603:11628   */\n      swap3\n      pop\n        /* \"#utility.yul\":11663:11664   */\n      dup3\n        /* \"#utility.yul\":11660:11661   */\n      dup3\n        /* \"#utility.yul\":11656:11665   */\n      mul\n        /* \"#utility.yul\":11685:11715   */\n      tag_455\n        /* \"#utility.yul\":11703:11714   */\n      dup2\n        /* \"#utility.yul\":11685:11715   */\n      tag_287\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11674:11715   */\n      swap2\n      pop\n        /* \"#utility.yul\":11864:11865   */\n      dup3\n        /* \"#utility.yul\":11855:11862   */\n      dup3\n        /* \"#utility.yul\":11851:11866   */\n      div\n        /* \"#utility.yul\":11848:11849   */\n      dup5\n        /* \"#utility.yul\":11845:11867   */\n      eq\n        /* \"#utility.yul\":11825:11826   */\n      dup4\n        /* \"#utility.yul\":11818:11827   */\n      iszero\n        /* \"#utility.yul\":11798:11881   */\n      or\n        /* \"#utility.yul\":11775:11914   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":11894:11912   */\n      tag_457\n      tag_320\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11775:11914   */\n    tag_456:\n        /* \"#utility.yul\":11559:11921   */\n      pop\n        /* \"#utility.yul\":11511:11921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11927:12107   */\n    tag_321:\n        /* \"#utility.yul\":11975:12052   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11972:11973   */\n      0x00\n        /* \"#utility.yul\":11965:12053   */\n      mstore\n        /* \"#utility.yul\":12072:12076   */\n      0x12\n        /* \"#utility.yul\":12069:12070   */\n      0x04\n        /* \"#utility.yul\":12062:12077   */\n      mstore\n        /* \"#utility.yul\":12096:12100   */\n      0x24\n        /* \"#utility.yul\":12093:12094   */\n      0x00\n        /* \"#utility.yul\":12086:12101   */\n      revert\n        /* \"#utility.yul\":12113:12298   */\n    tag_199:\n        /* \"#utility.yul\":12153:12154   */\n      0x00\n        /* \"#utility.yul\":12170:12190   */\n      tag_460\n        /* \"#utility.yul\":12188:12189   */\n      dup3\n        /* \"#utility.yul\":12170:12190   */\n      tag_287\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12165:12190   */\n      swap2\n      pop\n        /* \"#utility.yul\":12204:12224   */\n      tag_461\n        /* \"#utility.yul\":12222:12223   */\n      dup4\n        /* \"#utility.yul\":12204:12224   */\n      tag_287\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12199:12224   */\n      swap3\n      pop\n        /* \"#utility.yul\":12243:12244   */\n      dup3\n        /* \"#utility.yul\":12233:12268   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":12248:12266   */\n      tag_463\n      tag_321\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12233:12268   */\n    tag_462:\n        /* \"#utility.yul\":12290:12291   */\n      dup3\n        /* \"#utility.yul\":12287:12288   */\n      dup3\n        /* \"#utility.yul\":12283:12292   */\n      div\n        /* \"#utility.yul\":12278:12292   */\n      swap1\n      pop\n        /* \"#utility.yul\":12113:12298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12304:12498   */\n    tag_205:\n        /* \"#utility.yul\":12344:12348   */\n      0x00\n        /* \"#utility.yul\":12364:12384   */\n      tag_465\n        /* \"#utility.yul\":12382:12383   */\n      dup3\n        /* \"#utility.yul\":12364:12384   */\n      tag_287\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12359:12384   */\n      swap2\n      pop\n        /* \"#utility.yul\":12398:12418   */\n      tag_466\n        /* \"#utility.yul\":12416:12417   */\n      dup4\n        /* \"#utility.yul\":12398:12418   */\n      tag_287\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12393:12418   */\n      swap3\n      pop\n        /* \"#utility.yul\":12442:12443   */\n      dup3\n        /* \"#utility.yul\":12439:12440   */\n      dup3\n        /* \"#utility.yul\":12435:12444   */\n      sub\n        /* \"#utility.yul\":12427:12444   */\n      swap1\n      pop\n        /* \"#utility.yul\":12466:12467   */\n      dup2\n        /* \"#utility.yul\":12460:12464   */\n      dup2\n        /* \"#utility.yul\":12457:12468   */\n      gt\n        /* \"#utility.yul\":12454:12491   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":12471:12489   */\n      tag_468\n      tag_320\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12454:12491   */\n    tag_467:\n        /* \"#utility.yul\":12304:12498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12504:12695   */\n    tag_207:\n        /* \"#utility.yul\":12544:12547   */\n      0x00\n        /* \"#utility.yul\":12563:12583   */\n      tag_470\n        /* \"#utility.yul\":12581:12582   */\n      dup3\n        /* \"#utility.yul\":12563:12583   */\n      tag_287\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12558:12583   */\n      swap2\n      pop\n        /* \"#utility.yul\":12597:12617   */\n      tag_471\n        /* \"#utility.yul\":12615:12616   */\n      dup4\n        /* \"#utility.yul\":12597:12617   */\n      tag_287\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12592:12617   */\n      swap3\n      pop\n        /* \"#utility.yul\":12640:12641   */\n      dup3\n        /* \"#utility.yul\":12637:12638   */\n      dup3\n        /* \"#utility.yul\":12633:12642   */\n      add\n        /* \"#utility.yul\":12626:12642   */\n      swap1\n      pop\n        /* \"#utility.yul\":12661:12664   */\n      dup1\n        /* \"#utility.yul\":12658:12659   */\n      dup3\n        /* \"#utility.yul\":12655:12665   */\n      gt\n        /* \"#utility.yul\":12652:12688   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":12668:12686   */\n      tag_473\n      tag_320\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12652:12688   */\n    tag_472:\n        /* \"#utility.yul\":12504:12695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12701:13143   */\n    tag_248:\n        /* \"#utility.yul\":12850:12854   */\n      0x00\n        /* \"#utility.yul\":12888:12890   */\n      0x60\n        /* \"#utility.yul\":12877:12886   */\n      dup3\n        /* \"#utility.yul\":12873:12891   */\n      add\n        /* \"#utility.yul\":12865:12891   */\n      swap1\n      pop\n        /* \"#utility.yul\":12901:12972   */\n      tag_475\n        /* \"#utility.yul\":12969:12970   */\n      0x00\n        /* \"#utility.yul\":12958:12967   */\n      dup4\n        /* \"#utility.yul\":12954:12971   */\n      add\n        /* \"#utility.yul\":12945:12951   */\n      dup7\n        /* \"#utility.yul\":12901:12972   */\n      tag_312\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12982:13054   */\n      tag_476\n        /* \"#utility.yul\":13050:13052   */\n      0x20\n        /* \"#utility.yul\":13039:13048   */\n      dup4\n        /* \"#utility.yul\":13035:13053   */\n      add\n        /* \"#utility.yul\":13026:13032   */\n      dup6\n        /* \"#utility.yul\":12982:13054   */\n      tag_288\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13064:13136   */\n      tag_477\n        /* \"#utility.yul\":13132:13134   */\n      0x40\n        /* \"#utility.yul\":13121:13130   */\n      dup4\n        /* \"#utility.yul\":13117:13135   */\n      add\n        /* \"#utility.yul\":13108:13114   */\n      dup5\n        /* \"#utility.yul\":13064:13136   */\n      tag_288\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12701:13143   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ab067f48bb8ba78f4ec9a3755d5d356ddb4f16e0c80f68484ffb5d65fe12bbb64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1514": {
									"entryPoint": null,
									"id": 1514,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_605": {
									"entryPoint": 950,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10338:10",
										"nodeType": "YulBlock",
										"src": "0:10338:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:77:10",
													"nodeType": "YulBlock",
													"src": "1672:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:10"
																},
																"nativeSrc": "1683:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:10"
															},
															"nativeSrc": "1683:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:10"
																		},
																		"nativeSrc": "1722:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:10"
																},
																"nativeSrc": "1715:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:10"
															},
															"nativeSrc": "1715:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:139:10"
											},
											{
												"body": {
													"nativeSrc": "1850:339:10",
													"nodeType": "YulBlock",
													"src": "1850:339:10",
													"statements": [
														{
															"nativeSrc": "1860:75:10",
															"nodeType": "YulAssignment",
															"src": "1860:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:10"
																		},
																		"nativeSrc": "1885:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:10"
																},
																"nativeSrc": "1869:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:10"
																},
																"nativeSrc": "1944:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:10"
															},
															"nativeSrc": "1944:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:10"
														},
														{
															"nativeSrc": "1974:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:10"
																},
																"nativeSrc": "1985:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:10",
																"nodeType": "YulBlock",
																"src": "2039:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:10"
																			},
																			"nativeSrc": "2041:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:10"
																		},
																		"nativeSrc": "2041:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:10"
																		},
																		"nativeSrc": "2016:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:10"
																},
																"nativeSrc": "2013:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:10"
															},
															"nativeSrc": "2010:112:10",
															"nodeType": "YulIf",
															"src": "2010:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:10"
																},
																"nativeSrc": "2131:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:10"
															},
															"nativeSrc": "2131:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:10",
														"nodeType": "YulTypedName",
														"src": "1823:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:10",
														"nodeType": "YulTypedName",
														"src": "1828:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:10",
														"nodeType": "YulTypedName",
														"src": "1836:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:10",
														"nodeType": "YulTypedName",
														"src": "1844:5:10",
														"type": ""
													}
												],
												"src": "1755:434:10"
											},
											{
												"body": {
													"nativeSrc": "2282:282:10",
													"nodeType": "YulBlock",
													"src": "2282:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:10",
																"nodeType": "YulBlock",
																"src": "2331:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:10"
																			},
																			"nativeSrc": "2333:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:10"
																		},
																		"nativeSrc": "2333:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:10"
																				},
																				"nativeSrc": "2306:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:10"
																		},
																		"nativeSrc": "2302:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:10"
																},
																"nativeSrc": "2295:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:10"
															},
															"nativeSrc": "2292:122:10",
															"nodeType": "YulIf",
															"src": "2292:122:10"
														},
														{
															"nativeSrc": "2423:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:10"
																},
																"nativeSrc": "2437:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:10",
															"nodeType": "YulAssignment",
															"src": "2459:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:10"
																		},
																		"nativeSrc": "2527:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:10"
																},
																"nativeSrc": "2468:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:10",
														"nodeType": "YulTypedName",
														"src": "2260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:10",
														"nodeType": "YulTypedName",
														"src": "2268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:10",
														"nodeType": "YulTypedName",
														"src": "2276:5:10",
														"type": ""
													}
												],
												"src": "2209:355:10"
											},
											{
												"body": {
													"nativeSrc": "2615:81:10",
													"nodeType": "YulBlock",
													"src": "2615:81:10",
													"statements": [
														{
															"nativeSrc": "2625:65:10",
															"nodeType": "YulAssignment",
															"src": "2625:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nativeSrc": "2636:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:10",
														"nodeType": "YulTypedName",
														"src": "2597:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:10",
														"nodeType": "YulTypedName",
														"src": "2607:7:10",
														"type": ""
													}
												],
												"src": "2570:126:10"
											},
											{
												"body": {
													"nativeSrc": "2747:51:10",
													"nodeType": "YulBlock",
													"src": "2747:51:10",
													"statements": [
														{
															"nativeSrc": "2757:35:10",
															"nodeType": "YulAssignment",
															"src": "2757:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:10"
																},
																"nativeSrc": "2768:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:10",
														"nodeType": "YulTypedName",
														"src": "2729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:10",
														"nodeType": "YulTypedName",
														"src": "2739:7:10",
														"type": ""
													}
												],
												"src": "2702:96:10"
											},
											{
												"body": {
													"nativeSrc": "2847:79:10",
													"nodeType": "YulBlock",
													"src": "2847:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:10",
																"nodeType": "YulBlock",
																"src": "2904:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:10"
																			},
																			"nativeSrc": "2906:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:10"
																		},
																		"nativeSrc": "2906:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:10"
																				},
																				"nativeSrc": "2877:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:10"
																		},
																		"nativeSrc": "2867:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:10"
																},
																"nativeSrc": "2860:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:10"
															},
															"nativeSrc": "2857:63:10",
															"nodeType": "YulIf",
															"src": "2857:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:10",
														"nodeType": "YulTypedName",
														"src": "2840:5:10",
														"type": ""
													}
												],
												"src": "2804:122:10"
											},
											{
												"body": {
													"nativeSrc": "2995:80:10",
													"nodeType": "YulBlock",
													"src": "2995:80:10",
													"statements": [
														{
															"nativeSrc": "3005:22:10",
															"nodeType": "YulAssignment",
															"src": "3005:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:10"
																},
																"nativeSrc": "3014:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:10"
																},
																"nativeSrc": "3036:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:10"
															},
															"nativeSrc": "3036:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:10",
														"nodeType": "YulTypedName",
														"src": "2973:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:10",
														"nodeType": "YulTypedName",
														"src": "2981:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:10",
														"nodeType": "YulTypedName",
														"src": "2989:5:10",
														"type": ""
													}
												],
												"src": "2932:143:10"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:10",
													"nodeType": "YulBlock",
													"src": "3229:1018:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:10",
																"nodeType": "YulBlock",
																"src": "3276:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:10"
																			},
																			"nativeSrc": "3278:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:10"
																		},
																		"nativeSrc": "3278:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:10"
																		},
																		"nativeSrc": "3246:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:10"
																},
																"nativeSrc": "3242:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:10"
															},
															"nativeSrc": "3239:120:10",
															"nodeType": "YulIf",
															"src": "3239:120:10"
														},
														{
															"nativeSrc": "3369:291:10",
															"nodeType": "YulBlock",
															"src": "3369:291:10",
															"statements": [
																{
																	"nativeSrc": "3384:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3408:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3408:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3419:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3419:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3404:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3404:3:10"
																				},
																				"nativeSrc": "3404:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3404:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3398:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3398:5:10"
																		},
																		"nativeSrc": "3398:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3469:83:10",
																		"nodeType": "YulBlock",
																		"src": "3469:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3471:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3471:77:10"
																					},
																					"nativeSrc": "3471:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3471:79:10"
																				},
																				"nativeSrc": "3471:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3471:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3441:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3449:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3449:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3438:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:10"
																		},
																		"nativeSrc": "3438:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:30:10"
																	},
																	"nativeSrc": "3435:117:10",
																	"nodeType": "YulIf",
																	"src": "3435:117:10"
																},
																{
																	"nativeSrc": "3566:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3566:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3622:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3622:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3633:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3633:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3618:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3618:3:10"
																				},
																				"nativeSrc": "3618:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3618:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3642:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3642:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3576:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3576:41:10"
																		},
																		"nativeSrc": "3576:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3576:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3566:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3566:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3670:292:10",
															"nodeType": "YulBlock",
															"src": "3670:292:10",
															"statements": [
																{
																	"nativeSrc": "3685:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3685:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3709:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3720:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3720:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3705:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:10"
																				},
																				"nativeSrc": "3705:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3699:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3699:5:10"
																		},
																		"nativeSrc": "3699:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3699:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3689:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3689:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3771:83:10",
																		"nodeType": "YulBlock",
																		"src": "3771:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3773:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3773:77:10"
																					},
																					"nativeSrc": "3773:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3773:79:10"
																				},
																				"nativeSrc": "3773:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3773:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3751:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3751:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3740:2:10"
																		},
																		"nativeSrc": "3740:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:30:10"
																	},
																	"nativeSrc": "3737:117:10",
																	"nodeType": "YulIf",
																	"src": "3737:117:10"
																},
																{
																	"nativeSrc": "3868:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3868:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3924:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3924:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3935:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3935:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3920:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3920:3:10"
																				},
																				"nativeSrc": "3920:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3920:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3944:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3944:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3878:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3878:41:10"
																		},
																		"nativeSrc": "3878:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3868:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3868:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3972:129:10",
															"nodeType": "YulBlock",
															"src": "3972:129:10",
															"statements": [
																{
																	"nativeSrc": "3987:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4001:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3991:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3991:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4017:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4017:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4063:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4063:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4074:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4074:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4059:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:10"
																				},
																				"nativeSrc": "4059:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4083:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4083:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4027:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4027:31:10"
																		},
																		"nativeSrc": "4027:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4017:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4017:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4111:129:10",
															"nodeType": "YulBlock",
															"src": "4111:129:10",
															"statements": [
																{
																	"nativeSrc": "4126:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4126:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4140:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4130:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4130:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4156:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4156:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:10"
																				},
																				"nativeSrc": "4198:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4166:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4166:31:10"
																		},
																		"nativeSrc": "4166:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4166:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4156:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4156:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
												"nativeSrc": "3081:1166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:10",
														"nodeType": "YulTypedName",
														"src": "3175:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:10",
														"nodeType": "YulTypedName",
														"src": "3186:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:10",
														"nodeType": "YulTypedName",
														"src": "3198:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:10",
														"nodeType": "YulTypedName",
														"src": "3206:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:10",
														"nodeType": "YulTypedName",
														"src": "3214:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:10",
														"nodeType": "YulTypedName",
														"src": "3222:6:10",
														"type": ""
													}
												],
												"src": "3081:1166:10"
											},
											{
												"body": {
													"nativeSrc": "4312:40:10",
													"nodeType": "YulBlock",
													"src": "4312:40:10",
													"statements": [
														{
															"nativeSrc": "4323:22:10",
															"nodeType": "YulAssignment",
															"src": "4323:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:10"
																},
																"nativeSrc": "4333:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:10",
														"nodeType": "YulTypedName",
														"src": "4295:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:10",
														"nodeType": "YulTypedName",
														"src": "4305:6:10",
														"type": ""
													}
												],
												"src": "4253:99:10"
											},
											{
												"body": {
													"nativeSrc": "4386:152:10",
													"nodeType": "YulBlock",
													"src": "4386:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:10"
																},
																"nativeSrc": "4396:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:10"
															},
															"nativeSrc": "4396:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:10"
																},
																"nativeSrc": "4493:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:10"
															},
															"nativeSrc": "4493:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:10"
																},
																"nativeSrc": "4517:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:10"
															},
															"nativeSrc": "4517:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:10"
											},
											{
												"body": {
													"nativeSrc": "4595:269:10",
													"nodeType": "YulBlock",
													"src": "4595:269:10",
													"statements": [
														{
															"nativeSrc": "4605:22:10",
															"nodeType": "YulAssignment",
															"src": "4605:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:10"
																},
																"nativeSrc": "4615:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:10"
																}
															]
														},
														{
															"nativeSrc": "4636:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:10"
																},
																"nativeSrc": "4662:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:10",
																"nodeType": "YulBlock",
																"src": "4713:51:10",
																"statements": [
																	{
																		"nativeSrc": "4727:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:10"
																			},
																			"nativeSrc": "4737:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:10"
																},
																"nativeSrc": "4686:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:10"
															},
															"nativeSrc": "4683:81:10",
															"nodeType": "YulIf",
															"src": "4683:81:10"
														},
														{
															"body": {
																"nativeSrc": "4816:42:10",
																"nodeType": "YulBlock",
																"src": "4816:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:10"
																			},
																			"nativeSrc": "4830:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:10"
																		},
																		"nativeSrc": "4830:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:10"
																		},
																		"nativeSrc": "4800:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:10"
																},
																"nativeSrc": "4777:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:10"
															},
															"nativeSrc": "4774:84:10",
															"nodeType": "YulIf",
															"src": "4774:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:10",
														"nodeType": "YulTypedName",
														"src": "4579:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:10",
														"nodeType": "YulTypedName",
														"src": "4588:6:10",
														"type": ""
													}
												],
												"src": "4544:320:10"
											},
											{
												"body": {
													"nativeSrc": "4924:87:10",
													"nodeType": "YulBlock",
													"src": "4924:87:10",
													"statements": [
														{
															"nativeSrc": "4934:11:10",
															"nodeType": "YulAssignment",
															"src": "4934:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:10",
																"nodeType": "YulIdentifier",
																"src": "4942:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:10"
																},
																"nativeSrc": "4955:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:10"
															},
															"nativeSrc": "4955:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:10"
														},
														{
															"nativeSrc": "4978:26:10",
															"nodeType": "YulAssignment",
															"src": "4978:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:10"
																},
																"nativeSrc": "4986:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:10",
														"nodeType": "YulTypedName",
														"src": "4911:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:10",
														"nodeType": "YulTypedName",
														"src": "4919:4:10",
														"type": ""
													}
												],
												"src": "4870:141:10"
											},
											{
												"body": {
													"nativeSrc": "5061:49:10",
													"nodeType": "YulBlock",
													"src": "5061:49:10",
													"statements": [
														{
															"nativeSrc": "5071:33:10",
															"nodeType": "YulAssignment",
															"src": "5071:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:10"
																		},
																		"nativeSrc": "5085:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:10"
																},
																"nativeSrc": "5081:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:10",
														"nodeType": "YulTypedName",
														"src": "5044:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:10",
														"nodeType": "YulTypedName",
														"src": "5054:6:10",
														"type": ""
													}
												],
												"src": "5017:93:10"
											},
											{
												"body": {
													"nativeSrc": "5169:54:10",
													"nodeType": "YulBlock",
													"src": "5169:54:10",
													"statements": [
														{
															"nativeSrc": "5179:37:10",
															"nodeType": "YulAssignment",
															"src": "5179:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:10"
																},
																"nativeSrc": "5200:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:10",
														"nodeType": "YulTypedName",
														"src": "5144:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:10",
														"nodeType": "YulTypedName",
														"src": "5150:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:10",
														"nodeType": "YulTypedName",
														"src": "5160:8:10",
														"type": ""
													}
												],
												"src": "5116:107:10"
											},
											{
												"body": {
													"nativeSrc": "5305:317:10",
													"nodeType": "YulBlock",
													"src": "5305:317:10",
													"statements": [
														{
															"nativeSrc": "5315:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:10"
																},
																"nativeSrc": "5332:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:10",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:10"
																},
																"nativeSrc": "5371:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:10",
															"nodeType": "YulAssignment",
															"src": "5477:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:10"
																},
																"nativeSrc": "5489:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:10"
																}
															]
														},
														{
															"nativeSrc": "5537:30:10",
															"nodeType": "YulAssignment",
															"src": "5537:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:10"
																		},
																		"nativeSrc": "5557:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:10"
																},
																"nativeSrc": "5546:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:10"
																}
															]
														},
														{
															"nativeSrc": "5576:40:10",
															"nodeType": "YulAssignment",
															"src": "5576:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:10"
																		},
																		"nativeSrc": "5596:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:10"
																},
																"nativeSrc": "5586:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:10",
														"nodeType": "YulTypedName",
														"src": "5266:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:10",
														"nodeType": "YulTypedName",
														"src": "5273:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:10",
														"nodeType": "YulTypedName",
														"src": "5285:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:10",
														"nodeType": "YulTypedName",
														"src": "5298:6:10",
														"type": ""
													}
												],
												"src": "5229:393:10"
											},
											{
												"body": {
													"nativeSrc": "5673:32:10",
													"nodeType": "YulBlock",
													"src": "5673:32:10",
													"statements": [
														{
															"nativeSrc": "5683:16:10",
															"nodeType": "YulAssignment",
															"src": "5683:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:10",
																"nodeType": "YulIdentifier",
																"src": "5694:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:10",
														"nodeType": "YulTypedName",
														"src": "5655:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:10",
														"nodeType": "YulTypedName",
														"src": "5665:7:10",
														"type": ""
													}
												],
												"src": "5628:77:10"
											},
											{
												"body": {
													"nativeSrc": "5743:28:10",
													"nodeType": "YulBlock",
													"src": "5743:28:10",
													"statements": [
														{
															"nativeSrc": "5753:12:10",
															"nodeType": "YulAssignment",
															"src": "5753:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:10",
																"nodeType": "YulIdentifier",
																"src": "5760:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:10",
														"nodeType": "YulTypedName",
														"src": "5729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:10",
														"nodeType": "YulTypedName",
														"src": "5739:3:10",
														"type": ""
													}
												],
												"src": "5711:60:10"
											},
											{
												"body": {
													"nativeSrc": "5837:82:10",
													"nodeType": "YulBlock",
													"src": "5837:82:10",
													"statements": [
														{
															"nativeSrc": "5847:66:10",
															"nodeType": "YulAssignment",
															"src": "5847:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:10"
																				},
																				"nativeSrc": "5887:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:10"
																		},
																		"nativeSrc": "5878:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:10"
																},
																"nativeSrc": "5860:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:10",
														"nodeType": "YulTypedName",
														"src": "5817:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:10",
														"nodeType": "YulTypedName",
														"src": "5827:9:10",
														"type": ""
													}
												],
												"src": "5777:142:10"
											},
											{
												"body": {
													"nativeSrc": "5972:28:10",
													"nodeType": "YulBlock",
													"src": "5972:28:10",
													"statements": [
														{
															"nativeSrc": "5982:12:10",
															"nodeType": "YulAssignment",
															"src": "5982:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:10",
																"nodeType": "YulIdentifier",
																"src": "5989:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:10",
														"nodeType": "YulTypedName",
														"src": "5958:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:10",
														"nodeType": "YulTypedName",
														"src": "5968:3:10",
														"type": ""
													}
												],
												"src": "5925:75:10"
											},
											{
												"body": {
													"nativeSrc": "6082:193:10",
													"nodeType": "YulBlock",
													"src": "6082:193:10",
													"statements": [
														{
															"nativeSrc": "6092:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:10"
																},
																"nativeSrc": "6116:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:10",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:10"
																				},
																				"nativeSrc": "6205:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:10"
																				},
																				"nativeSrc": "6226:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:10"
																		},
																		"nativeSrc": "6177:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:10"
																},
																"nativeSrc": "6164:105:10",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:10"
															},
															"nativeSrc": "6164:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:10",
														"nodeType": "YulTypedName",
														"src": "6059:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:10",
														"nodeType": "YulTypedName",
														"src": "6065:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:10",
														"nodeType": "YulTypedName",
														"src": "6073:7:10",
														"type": ""
													}
												],
												"src": "6006:269:10"
											},
											{
												"body": {
													"nativeSrc": "6330:24:10",
													"nodeType": "YulBlock",
													"src": "6330:24:10",
													"statements": [
														{
															"nativeSrc": "6340:8:10",
															"nodeType": "YulAssignment",
															"src": "6340:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:10",
																"nodeType": "YulLiteral",
																"src": "6347:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:10",
														"nodeType": "YulTypedName",
														"src": "6326:3:10",
														"type": ""
													}
												],
												"src": "6281:73:10"
											},
											{
												"body": {
													"nativeSrc": "6413:136:10",
													"nodeType": "YulBlock",
													"src": "6413:136:10",
													"statements": [
														{
															"nativeSrc": "6423:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:10"
																},
																"nativeSrc": "6437:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:10"
																},
																"nativeSrc": "6478:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:10"
															},
															"nativeSrc": "6478:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:10",
														"nodeType": "YulTypedName",
														"src": "6399:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:10",
														"nodeType": "YulTypedName",
														"src": "6405:6:10",
														"type": ""
													}
												],
												"src": "6360:189:10"
											},
											{
												"body": {
													"nativeSrc": "6605:136:10",
													"nodeType": "YulBlock",
													"src": "6605:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:10",
																"nodeType": "YulBlock",
																"src": "6672:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:10"
																			},
																			"nativeSrc": "6686:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:10"
																		},
																		"nativeSrc": "6686:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:10"
																},
																"nativeSrc": "6622:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:10"
															},
															"nativeSrc": "6615:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:10",
																"nodeType": "YulBlock",
																"src": "6637:26:10",
																"statements": [
																	{
																		"nativeSrc": "6639:22:10",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:10"
																			},
																			"nativeSrc": "6648:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:10",
																"nodeType": "YulBlock",
																"src": "6619:2:10",
																"statements": []
															},
															"src": "6615:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:10",
														"nodeType": "YulTypedName",
														"src": "6593:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:10",
														"nodeType": "YulTypedName",
														"src": "6600:3:10",
														"type": ""
													}
												],
												"src": "6555:186:10"
											},
											{
												"body": {
													"nativeSrc": "6826:464:10",
													"nodeType": "YulBlock",
													"src": "6826:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:10",
																"nodeType": "YulBlock",
																"src": "6852:431:10",
																"statements": [
																	{
																		"nativeSrc": "6866:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:10"
																			},
																			"nativeSrc": "6882:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:10"
																					},
																					"nativeSrc": "6966:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:10"
																			},
																			"nativeSrc": "6952:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:10",
																			"nodeType": "YulBlock",
																			"src": "7153:27:10",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:10",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:10",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:10"
																			},
																			"nativeSrc": "7134:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:10"
																		},
																		"nativeSrc": "7131:49:10",
																		"nodeType": "YulIf",
																		"src": "7131:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:10"
																							},
																							"nativeSrc": "7249:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:10"
																					},
																					"nativeSrc": "7235:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:10"
																			},
																			"nativeSrc": "7193:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:10"
																		},
																		"nativeSrc": "7193:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:10"
																},
																"nativeSrc": "6840:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:10"
															},
															"nativeSrc": "6837:446:10",
															"nodeType": "YulIf",
															"src": "6837:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:10",
														"nodeType": "YulTypedName",
														"src": "6802:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:10",
														"nodeType": "YulTypedName",
														"src": "6809:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:10",
														"nodeType": "YulTypedName",
														"src": "6814:10:10",
														"type": ""
													}
												],
												"src": "6747:543:10"
											},
											{
												"body": {
													"nativeSrc": "7359:54:10",
													"nodeType": "YulBlock",
													"src": "7359:54:10",
													"statements": [
														{
															"nativeSrc": "7369:37:10",
															"nodeType": "YulAssignment",
															"src": "7369:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:10"
																},
																"nativeSrc": "7390:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:10",
														"nodeType": "YulTypedName",
														"src": "7334:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:10",
														"nodeType": "YulTypedName",
														"src": "7340:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:10",
														"nodeType": "YulTypedName",
														"src": "7350:8:10",
														"type": ""
													}
												],
												"src": "7296:117:10"
											},
											{
												"body": {
													"nativeSrc": "7470:118:10",
													"nodeType": "YulBlock",
													"src": "7470:118:10",
													"statements": [
														{
															"nativeSrc": "7480:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:10"
																				},
																				"nativeSrc": "7525:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:10"
																				},
																				"nativeSrc": "7540:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:10"
																		},
																		"nativeSrc": "7496:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:10"
																},
																"nativeSrc": "7492:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:10",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:10",
															"nodeType": "YulAssignment",
															"src": "7557:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:10"
																},
																"nativeSrc": "7567:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:10",
														"nodeType": "YulTypedName",
														"src": "7447:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:10",
														"nodeType": "YulTypedName",
														"src": "7453:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:10",
														"nodeType": "YulTypedName",
														"src": "7463:6:10",
														"type": ""
													}
												],
												"src": "7419:169:10"
											},
											{
												"body": {
													"nativeSrc": "7674:214:10",
													"nodeType": "YulBlock",
													"src": "7674:214:10",
													"statements": [
														{
															"nativeSrc": "7807:37:10",
															"nodeType": "YulAssignment",
															"src": "7807:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:10"
																},
																"nativeSrc": "7815:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:10"
																}
															]
														},
														{
															"nativeSrc": "7853:29:10",
															"nodeType": "YulAssignment",
															"src": "7853:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:10"
																		},
																		"nativeSrc": "7870:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:10"
																},
																"nativeSrc": "7861:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:10",
														"nodeType": "YulTypedName",
														"src": "7655:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:10",
														"nodeType": "YulTypedName",
														"src": "7661:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:10",
														"nodeType": "YulTypedName",
														"src": "7669:4:10",
														"type": ""
													}
												],
												"src": "7593:295:10"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:10",
													"nodeType": "YulBlock",
													"src": "7985:1303:10",
													"statements": [
														{
															"nativeSrc": "7996:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:10"
																},
																"nativeSrc": "8010:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:10",
																"nodeType": "YulBlock",
																"src": "8132:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:10"
																			},
																			"nativeSrc": "8134:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:10"
																		},
																		"nativeSrc": "8134:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:10"
																},
																"nativeSrc": "8101:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:10"
															},
															"nativeSrc": "8098:56:10",
															"nodeType": "YulIf",
															"src": "8098:56:10"
														},
														{
															"nativeSrc": "8164:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:10"
																		},
																		"nativeSrc": "8204:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:10"
																},
																"nativeSrc": "8178:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:10"
																},
																"nativeSrc": "8263:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:10"
															},
															"nativeSrc": "8263:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:10"
														},
														{
															"nativeSrc": "8340:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:10",
																"nodeType": "YulLiteral",
																"src": "8357:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:10",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:10",
															"nodeType": "YulAssignment",
															"src": "8368:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:10",
																"nodeType": "YulLiteral",
																"src": "8381:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:10",
																		"nodeType": "YulBlock",
																		"src": "8432:611:10",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:10",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:10"
																							},
																							"nativeSrc": "8473:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:10"
																					},
																					"nativeSrc": "8461:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:10",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:10"
																					},
																					"nativeSrc": "8511:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:10",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:10",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:10",
																					"nodeType": "YulBlock",
																					"src": "8629:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:10"
																												},
																												"nativeSrc": "8668:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:10"
																										},
																										"nativeSrc": "8662:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:10"
																								},
																								"nativeSrc": "8647:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:10"
																							},
																							"nativeSrc": "8647:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:10"
																						},
																						{
																							"nativeSrc": "8706:24:10",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:10"
																								},
																								"nativeSrc": "8716:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:10"
																								},
																								"nativeSrc": "8760:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:10"
																					},
																					"nativeSrc": "8592:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:10"
																				},
																				"nativeSrc": "8584:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:10",
																					"nodeType": "YulBlock",
																					"src": "8607:21:10",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:10",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:10",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:10"
																								},
																								"nativeSrc": "8614:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:10",
																					"nodeType": "YulBlock",
																					"src": "8588:3:10",
																					"statements": []
																				},
																				"src": "8584:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:10",
																					"nodeType": "YulBlock",
																					"src": "8828:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:10"
																										},
																										"nativeSrc": "8869:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:10"
																								},
																								"nativeSrc": "8863:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:10"
																												},
																												"nativeSrc": "8951:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:10"
																										},
																										"nativeSrc": "8921:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:10"
																								},
																								"nativeSrc": "8906:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:10"
																							},
																							"nativeSrc": "8906:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:10"
																					},
																					"nativeSrc": "8808:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:10"
																				},
																				"nativeSrc": "8805:179:10",
																				"nodeType": "YulIf",
																				"src": "8805:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:10",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:10"
																									},
																									"nativeSrc": "9014:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:10",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:10"
																							},
																							"nativeSrc": "9010:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:10"
																					},
																					"nativeSrc": "8997:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:10"
																				},
																				"nativeSrc": "8997:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:10"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:10",
																	"nodeType": "YulCase",
																	"src": "8425:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:10",
																		"nodeType": "YulBlock",
																		"src": "9060:222:10",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:10",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:10",
																					"nodeType": "YulBlock",
																					"src": "9111:67:10",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:10",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:10"
																										},
																										"nativeSrc": "9144:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:10"
																								},
																								"nativeSrc": "9138:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:10"
																				},
																				"nativeSrc": "9101:77:10",
																				"nodeType": "YulIf",
																				"src": "9101:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:10"
																							},
																							"nativeSrc": "9204:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:10"
																					},
																					"nativeSrc": "9191:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:10"
																				},
																				"nativeSrc": "9191:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:10"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:10",
																	"nodeType": "YulCase",
																	"src": "9052:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:10"
																},
																"nativeSrc": "8402:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:10"
															},
															"nativeSrc": "8395:887:10",
															"nodeType": "YulSwitch",
															"src": "8395:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:10",
														"nodeType": "YulTypedName",
														"src": "7974:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:10",
														"nodeType": "YulTypedName",
														"src": "7980:3:10",
														"type": ""
													}
												],
												"src": "7893:1395:10"
											},
											{
												"body": {
													"nativeSrc": "9359:53:10",
													"nodeType": "YulBlock",
													"src": "9359:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9376:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9399:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9399:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9381:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9381:17:10"
																		},
																		"nativeSrc": "9381:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:10"
																},
																"nativeSrc": "9369:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9369:37:10"
															},
															"nativeSrc": "9369:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9369:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9294:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9347:5:10",
														"nodeType": "YulTypedName",
														"src": "9347:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9354:3:10",
														"nodeType": "YulTypedName",
														"src": "9354:3:10",
														"type": ""
													}
												],
												"src": "9294:118:10"
											},
											{
												"body": {
													"nativeSrc": "9516:124:10",
													"nodeType": "YulBlock",
													"src": "9516:124:10",
													"statements": [
														{
															"nativeSrc": "9526:26:10",
															"nodeType": "YulAssignment",
															"src": "9526:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9538:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9538:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9549:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9549:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:10"
																},
																"nativeSrc": "9534:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9534:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9526:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9526:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9606:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9619:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9615:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:10"
																		},
																		"nativeSrc": "9615:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9562:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9562:43:10"
																},
																"nativeSrc": "9562:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9562:71:10"
															},
															"nativeSrc": "9562:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9562:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9418:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:10",
														"nodeType": "YulTypedName",
														"src": "9488:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9500:6:10",
														"nodeType": "YulTypedName",
														"src": "9500:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9511:4:10",
														"nodeType": "YulTypedName",
														"src": "9511:4:10",
														"type": ""
													}
												],
												"src": "9418:222:10"
											},
											{
												"body": {
													"nativeSrc": "9723:274:10",
													"nodeType": "YulBlock",
													"src": "9723:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9769:83:10",
																"nodeType": "YulBlock",
																"src": "9769:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9771:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9771:77:10"
																			},
																			"nativeSrc": "9771:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9771:79:10"
																		},
																		"nativeSrc": "9771:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9771:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9744:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9744:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9740:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:10"
																		},
																		"nativeSrc": "9740:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9740:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9736:3:10"
																},
																"nativeSrc": "9736:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9736:32:10"
															},
															"nativeSrc": "9733:119:10",
															"nodeType": "YulIf",
															"src": "9733:119:10"
														},
														{
															"nativeSrc": "9862:128:10",
															"nodeType": "YulBlock",
															"src": "9862:128:10",
															"statements": [
																{
																	"nativeSrc": "9877:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9877:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9891:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9891:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9881:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9881:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9906:74:10",
																	"nodeType": "YulAssignment",
																	"src": "9906:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9952:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9952:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9963:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9963:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9948:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9948:3:10"
																				},
																				"nativeSrc": "9948:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9948:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9972:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9972:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "9916:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "9916:31:10"
																		},
																		"nativeSrc": "9916:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9906:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9906:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "9646:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9693:9:10",
														"nodeType": "YulTypedName",
														"src": "9693:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9704:7:10",
														"nodeType": "YulTypedName",
														"src": "9704:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9716:6:10",
														"nodeType": "YulTypedName",
														"src": "9716:6:10",
														"type": ""
													}
												],
												"src": "9646:351:10"
											},
											{
												"body": {
													"nativeSrc": "10129:206:10",
													"nodeType": "YulBlock",
													"src": "10129:206:10",
													"statements": [
														{
															"nativeSrc": "10139:26:10",
															"nodeType": "YulAssignment",
															"src": "10139:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10151:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10151:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10162:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10147:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:10"
																},
																"nativeSrc": "10147:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10147:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10139:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10139:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10219:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10219:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10232:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10232:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10243:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10243:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10228:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:10"
																		},
																		"nativeSrc": "10228:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10228:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10175:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10175:43:10"
																},
																"nativeSrc": "10175:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10175:71:10"
															},
															"nativeSrc": "10175:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10175:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10300:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10313:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10313:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10324:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10324:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10309:3:10"
																		},
																		"nativeSrc": "10309:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10309:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10256:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10256:43:10"
																},
																"nativeSrc": "10256:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10256:72:10"
															},
															"nativeSrc": "10256:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10256:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "10003:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10093:9:10",
														"nodeType": "YulTypedName",
														"src": "10093:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10105:6:10",
														"nodeType": "YulTypedName",
														"src": "10105:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10113:6:10",
														"nodeType": "YulTypedName",
														"src": "10113:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10124:4:10",
														"nodeType": "YulTypedName",
														"src": "10124:4:10",
														"type": ""
													}
												],
												"src": "10003:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526005600655600a60075560326008556014600955601e600a55348015610028575f5ffd5b5060405161281e38038061281e833981810160405281019061004a9190610620565b808484816003908161005c91906108cc565b50806004908161006c91906108cc565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d691906109aa565b60405180910390fd5b6100ee816103b660201b60201c565b5081600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610199573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101bd91906109c3565b73ffffffffffffffffffffffffffffffffffffffff1663c9c6539630600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610243573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026791906109c3565b6040518363ffffffff1660e01b81526004016102849291906109ee565b6020604051808303815f875af11580156102a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c491906109c3565b600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506001600d5f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050505050610a15565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104d882610492565b810181811067ffffffffffffffff821117156104f7576104f66104a2565b5b80604052505050565b5f610509610479565b905061051582826104cf565b919050565b5f67ffffffffffffffff821115610534576105336104a2565b5b61053d82610492565b9050602081019050919050565b8281835e5f83830152505050565b5f61056a6105658461051a565b610500565b9050828152602081018484840111156105865761058561048e565b5b61059184828561054a565b509392505050565b5f82601f8301126105ad576105ac61048a565b5b81516105bd848260208601610558565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105ef826105c6565b9050919050565b6105ff816105e5565b8114610609575f5ffd5b50565b5f8151905061061a816105f6565b92915050565b5f5f5f5f6080858703121561063857610637610482565b5b5f85015167ffffffffffffffff81111561065557610654610486565b5b61066187828801610599565b945050602085015167ffffffffffffffff81111561068257610681610486565b5b61068e87828801610599565b935050604061069f8782880161060c565b92505060606106b08782880161060c565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061070a57607f821691505b60208210810361071d5761071c6106c6565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261077f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610744565b6107898683610744565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6107cd6107c86107c3846107a1565b6107aa565b6107a1565b9050919050565b5f819050919050565b6107e6836107b3565b6107fa6107f2826107d4565b848454610750565b825550505050565b5f5f905090565b610811610802565b61081c8184846107dd565b505050565b5b8181101561083f576108345f82610809565b600181019050610822565b5050565b601f8211156108845761085581610723565b61085e84610735565b8101602085101561086d578190505b61088161087985610735565b830182610821565b50505b505050565b5f82821c905092915050565b5f6108a45f1984600802610889565b1980831691505092915050565b5f6108bc8383610895565b9150826002028217905092915050565b6108d5826106bc565b67ffffffffffffffff8111156108ee576108ed6104a2565b5b6108f882546106f3565b610903828285610843565b5f60209050601f831160018114610934575f8415610922578287015190505b61092c85826108b1565b865550610993565b601f19841661094286610723565b5f5b8281101561096957848901518255600182019150602085019450602081019050610944565b868310156109865784890151610982601f891682610895565b8355505b6001600288020188555050505b505050505050565b6109a4816105e5565b82525050565b5f6020820190506109bd5f83018461099b565b92915050565b5f602082840312156109d8576109d7610482565b5b5f6109e58482850161060c565b91505092915050565b5f604082019050610a015f83018561099b565b610a0e602083018461099b565b9392505050565b611dfc80610a225f395ff3fe608060405234801561000f575f5ffd5b506004361061018c575f3560e01c806370a08231116100dc578063c647b20e11610095578063cb4ca6311161006f578063cb4ca6311461044e578063cc1776d31461047e578063dd62ed3e1461049c578063f2fde38b146104cc5761018c565b8063c647b20e146103f8578063c6a3064714610414578063c816841b146104305761018c565b806370a0823114610336578063715018a6146103665780638da5cb5b1461037057806395d89b411461038e578063a9059cbb146103ac578063beabacc8146103dc5761018c565b80632431ba7311610149578063337270771161012357806333727077146102c05780634e6fd6c4146102de5780634f7041a5146102fc57806351c6590a1461031a5761018c565b80632431ba73146102685780632e1a7d4d14610286578063313ce567146102a25761018c565b806305bf0a541461019057806306fdde03146101ae578063095ea7b3146101cc57806315291cd4146101fc57806318160ddd1461021a57806323b872dd14610238575b5f5ffd5b6101986104e8565b6040516101a591906116e4565b60405180910390f35b6101b66104ee565b6040516101c3919061176d565b60405180910390f35b6101e660048036038101906101e19190611815565b61057e565b6040516101f3919061186d565b60405180910390f35b6102046105a0565b60405161021191906116e4565b60405180910390f35b6102226105a6565b60405161022f91906116e4565b60405180910390f35b610252600480360381019061024d9190611886565b6105af565b60405161025f919061186d565b60405180910390f35b6102706105dd565b60405161027d9190611931565b60405180910390f35b6102a0600480360381019061029b919061194a565b610602565b005b6102aa6106fc565b6040516102b79190611990565b60405180910390f35b6102c8610704565b6040516102d591906116e4565b60405180910390f35b6102e661070a565b6040516102f391906119b8565b60405180910390f35b610304610710565b60405161031191906116e4565b60405180910390f35b610334600480360381019061032f919061194a565b610716565b005b610350600480360381019061034b91906119d1565b61086f565b60405161035d91906116e4565b60405180910390f35b61036e6108b4565b005b6103786108c7565b60405161038591906119b8565b60405180910390f35b6103966108ef565b6040516103a3919061176d565b60405180910390f35b6103c660048036038101906103c19190611815565b61097f565b6040516103d3919061186d565b60405180910390f35b6103f660048036038101906103f19190611886565b6109a1565b005b610412600480360381019061040d91906119fc565b610d5f565b005b61042e60048036038101906104299190611a64565b610dc1565b005b610438610e21565b60405161044591906119b8565b60405180910390f35b610468600480360381019061046391906119d1565b610e46565b604051610475919061186d565b60405180910390f35b610486610e63565b60405161049391906116e4565b60405180910390f35b6104b660048036038101906104b19190611aa2565b610e69565b6040516104c391906116e4565b60405180910390f35b6104e660048036038101906104e191906119d1565b610eeb565b005b60095481565b6060600380546104fd90611b0d565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611b0d565b80156105745780601f1061054b57610100808354040283529160200191610574565b820191905f5260205f20905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b5f5f610588610f6f565b9050610595818585610f76565b600191505092915050565b60085481565b5f600254905090565b5f5f6105b9610f6f565b90506105c6858285610f88565b6105d185858561101b565b60019150509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060a61110b565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361066f576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156106a9576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506106b56108c7565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106f7573d5f5f3e3d5ffd5b505050565b5f6012905090565b600a5481565b61dead81565b60065481565b61071e61110b565b5f8111610757576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078330600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610f76565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6107cd6108c7565b426040518863ffffffff1660e01b81526004016107ef96959493929190611b76565b60606040518083038185885af115801561080b573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906108309190611be9565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8147604051610864929190611c39565b60405180910390a150565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108bc61110b565b6108c55f611192565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108fe90611b0d565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611b0d565b80156109755780601f1061094c57610100808354040283529160200191610975565b820191905f5260205f20905b81548152906001019060200180831161095857829003601f168201915b5050505050905090565b5f5f610989610f6f565b905061099681858561101b565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a06576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6b576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610b065750600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610b1b57610b1683838361101b565b610d5a565b5f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610be957606460065485610bd89190611c8d565b610be29190611cfb565b9050610c0d565b8115610c0c57606460075485610bff9190611c8d565b610c099190611cfb565b90505b5b5f8185610c1a9190611d2b565b90508181610c289190611d5e565b8514610c60576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610d4a57610c7387308461101b565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610ca291906116e4565b60405180910390a15f606460085484610cbb9190611c8d565b610cc59190611cfb565b90505f606460095485610cd89190611c8d565b610ce29190611cfb565b90505f818386610cf29190611d2b565b610cfc9190611d2b565b9050610d2a30600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561101b565b610d343083611255565b610d4630610d406108c7565b8361101b565b5050505b610d5587878361101b565b505050505b505050565b610d6761110b565b600a8211158015610d79575060148111155b610daf576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600681905550806007819055505050565b610dc961110b565b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052805f5260405f205f915054906101000a900460ff1681565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ef361110b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f63575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f5a91906119b8565b60405180910390fd5b610f6c81611192565b50565b5f33905090565b610f8383838360016112d4565b505050565b5f610f938484610e69565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110155781811015611006578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ffd93929190611d91565b60405180910390fd5b61101484848484035f6112d4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108b575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161108291906119b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110fb575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110f291906119b8565b60405180910390fd5b6111068383836114a3565b505050565b611113610f6f565b73ffffffffffffffffffffffffffffffffffffffff166111316108c7565b73ffffffffffffffffffffffffffffffffffffffff161461119057611154610f6f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161118791906119b8565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112c5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112bc91906119b8565b60405180910390fd5b6112d0825f836114a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611344575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161133b91906119b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113ab91906119b8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561149d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161149491906116e4565b60405180910390a35b50505050565b6114ae8383836114b3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611503578060025f8282546114f79190611d5e565b925050819055506115d1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561158c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161158393929190611d91565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611618578060025f8282540392505081905550611662565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116bf91906116e4565b60405180910390a3505050565b5f819050919050565b6116de816116cc565b82525050565b5f6020820190506116f75f8301846116d5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61173f826116fd565b6117498185611707565b9350611759818560208601611717565b61176281611725565b840191505092915050565b5f6020820190508181035f8301526117858184611735565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117ba82611791565b9050919050565b6117ca816117b0565b81146117d4575f5ffd5b50565b5f813590506117e5816117c1565b92915050565b6117f4816116cc565b81146117fe575f5ffd5b50565b5f8135905061180f816117eb565b92915050565b5f5f6040838503121561182b5761182a61178d565b5b5f611838858286016117d7565b925050602061184985828601611801565b9150509250929050565b5f8115159050919050565b61186781611853565b82525050565b5f6020820190506118805f83018461185e565b92915050565b5f5f5f6060848603121561189d5761189c61178d565b5b5f6118aa868287016117d7565b93505060206118bb868287016117d7565b92505060406118cc86828701611801565b9150509250925092565b5f819050919050565b5f6118f96118f46118ef84611791565b6118d6565b611791565b9050919050565b5f61190a826118df565b9050919050565b5f61191b82611900565b9050919050565b61192b81611911565b82525050565b5f6020820190506119445f830184611922565b92915050565b5f6020828403121561195f5761195e61178d565b5b5f61196c84828501611801565b91505092915050565b5f60ff82169050919050565b61198a81611975565b82525050565b5f6020820190506119a35f830184611981565b92915050565b6119b2816117b0565b82525050565b5f6020820190506119cb5f8301846119a9565b92915050565b5f602082840312156119e6576119e561178d565b5b5f6119f3848285016117d7565b91505092915050565b5f5f60408385031215611a1257611a1161178d565b5b5f611a1f85828601611801565b9250506020611a3085828601611801565b9150509250929050565b611a4381611853565b8114611a4d575f5ffd5b50565b5f81359050611a5e81611a3a565b92915050565b5f5f60408385031215611a7a57611a7961178d565b5b5f611a87858286016117d7565b9250506020611a9885828601611a50565b9150509250929050565b5f5f60408385031215611ab857611ab761178d565b5b5f611ac5858286016117d7565b9250506020611ad6858286016117d7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b2457607f821691505b602082108103611b3757611b36611ae0565b5b50919050565b5f819050919050565b5f611b60611b5b611b5684611b3d565b6118d6565b6116cc565b9050919050565b611b7081611b46565b82525050565b5f60c082019050611b895f8301896119a9565b611b9660208301886116d5565b611ba36040830187611b67565b611bb06060830186611b67565b611bbd60808301856119a9565b611bca60a08301846116d5565b979650505050505050565b5f81519050611be3816117eb565b92915050565b5f5f5f60608486031215611c0057611bff61178d565b5b5f611c0d86828701611bd5565b9350506020611c1e86828701611bd5565b9250506040611c2f86828701611bd5565b9150509250925092565b5f604082019050611c4c5f8301856116d5565b611c5960208301846116d5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c97826116cc565b9150611ca2836116cc565b9250828202611cb0816116cc565b91508282048414831517611cc757611cc6611c60565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d05826116cc565b9150611d10836116cc565b925082611d2057611d1f611cce565b5b828204905092915050565b5f611d35826116cc565b9150611d40836116cc565b9250828203905081811115611d5857611d57611c60565b5b92915050565b5f611d68826116cc565b9150611d73836116cc565b9250828201905080821115611d8b57611d8a611c60565b5b92915050565b5f606082019050611da45f8301866119a9565b611db160208301856116d5565b611dbe60408301846116d5565b94935050505056fea26469706673582212209ab067f48bb8ba78f4ec9a3755d5d356ddb4f16e0c80f68484ffb5d65fe12bbb64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x6 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0x32 PUSH1 0x8 SSTORE PUSH1 0x14 PUSH1 0x9 SSTORE PUSH1 0x1E PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x281E CODESIZE SUB DUP1 PUSH2 0x281E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x3B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x243 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP3 SWAP2 SWAP1 PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4D8 DUP3 PUSH2 0x492 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x509 PUSH2 0x479 JUMP JUMPDEST SWAP1 POP PUSH2 0x515 DUP3 DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x534 JUMPI PUSH2 0x533 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x53D DUP3 PUSH2 0x492 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56A PUSH2 0x565 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x48E JUMP JUMPDEST JUMPDEST PUSH2 0x591 DUP5 DUP3 DUP6 PUSH2 0x54A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5AD JUMPI PUSH2 0x5AC PUSH2 0x48A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x558 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5EF DUP3 PUSH2 0x5C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FF DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x609 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x61A DUP2 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x655 JUMPI PUSH2 0x654 PUSH2 0x486 JUMP JUMPDEST JUMPDEST PUSH2 0x661 DUP8 DUP3 DUP9 ADD PUSH2 0x599 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x682 JUMPI PUSH2 0x681 PUSH2 0x486 JUMP JUMPDEST JUMPDEST PUSH2 0x68E DUP8 DUP3 DUP9 ADD PUSH2 0x599 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x69F DUP8 DUP3 DUP9 ADD PUSH2 0x60C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x6B0 DUP8 DUP3 DUP9 ADD PUSH2 0x60C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x70A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x71D JUMPI PUSH2 0x71C PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x77F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x789 DUP7 DUP4 PUSH2 0x744 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7CD PUSH2 0x7C8 PUSH2 0x7C3 DUP5 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E6 DUP4 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0x7F2 DUP3 PUSH2 0x7D4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x750 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x81C DUP2 DUP5 DUP5 PUSH2 0x7DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x83F JUMPI PUSH2 0x834 PUSH0 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x822 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x884 JUMPI PUSH2 0x855 DUP2 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x85E DUP5 PUSH2 0x735 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x86D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x881 PUSH2 0x879 DUP6 PUSH2 0x735 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x821 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x889 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8BC DUP4 DUP4 PUSH2 0x895 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D5 DUP3 PUSH2 0x6BC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8EE JUMPI PUSH2 0x8ED PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x8F8 DUP3 SLOAD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x903 DUP3 DUP3 DUP6 PUSH2 0x843 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x934 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x922 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x92C DUP6 DUP3 PUSH2 0x8B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x993 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x942 DUP7 PUSH2 0x723 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x944 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x986 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x982 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x895 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A4 DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9BD PUSH0 DUP4 ADD DUP5 PUSH2 0x99B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH2 0x9D7 PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9E5 DUP5 DUP3 DUP6 ADD PUSH2 0x60C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA01 PUSH0 DUP4 ADD DUP6 PUSH2 0x99B JUMP JUMPDEST PUSH2 0xA0E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x99B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1DFC DUP1 PUSH2 0xA22 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC647B20E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC647B20E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x430 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x3DC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x33727077 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x31A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x8B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x588 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x595 DUP2 DUP6 DUP6 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x5D1 DUP6 DUP6 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60A PUSH2 0x110B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x6B5 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x110B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x783 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x7CD PUSH2 0x8C7 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BC PUSH2 0x110B JUMP JUMPDEST PUSH2 0x8C5 PUSH0 PUSH2 0x1192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8FE SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92A SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x975 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x975 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x958 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x989 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP2 DUP6 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB06 JUMPI POP PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB16 DUP4 DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x64 PUSH1 0x6 SLOAD DUP6 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH2 0xC0D JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP6 EQ PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xC73 DUP8 ADDRESS DUP5 PUSH2 0x101B JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA2 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP PUSH2 0xD2A ADDRESS PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xD34 ADDRESS DUP4 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0xD46 ADDRESS PUSH2 0xD40 PUSH2 0x8C7 JUMP JUMPDEST DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0xD55 DUP8 DUP8 DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD67 PUSH2 0x110B JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDC9 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF3 PUSH2 0x110B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF63 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6C DUP2 PUSH2 0x1192 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF83 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP5 DUP5 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1015 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1006 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1106 DUP4 DUP4 DUP4 PUSH2 0x14A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1113 PUSH2 0xF6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1131 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1190 JUMPI PUSH2 0x1154 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D0 DUP3 PUSH0 DUP4 PUSH2 0x14A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1344 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x149D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1494 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x14AE DUP4 DUP4 DUP4 PUSH2 0x14B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1503 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15D1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x158C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1583 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1618 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1662 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16BF SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP PUSH2 0x1759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x1762 DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1785 DUP2 DUP5 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BA DUP3 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CA DUP2 PUSH2 0x17B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E5 DUP2 PUSH2 0x17C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18AA DUP7 DUP3 DUP8 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F9 PUSH2 0x18F4 PUSH2 0x18EF DUP5 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190A DUP3 PUSH2 0x18DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x1900 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1911 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1944 PUSH0 DUP4 ADD DUP5 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198A DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B2 DUP2 PUSH2 0x17B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CB PUSH0 DUP4 ADD DUP5 PUSH2 0x19A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F3 DUP5 DUP3 DUP6 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A43 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5E DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A87 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD6 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B24 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 PUSH2 0x1B5B PUSH2 0x1B56 DUP5 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x16CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP10 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1BA3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1BB0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1BBD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1BCA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BE3 DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C00 JUMPI PUSH2 0x1BFF PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0D DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C1E DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2F DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CB0 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D05 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D10 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1CCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D35 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D68 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D73 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DA4 PUSH0 DUP4 ADD DUP7 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1DB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1DBE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xB0 PUSH8 0xF48BB8BA78F4EC9A CALLDATACOPY SSTORE 0xD5 0xD3 JUMP 0xDD 0xB4 CALL PUSH15 0xC80F68484FFB5D65FE12BBB64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "348:4008:9:-:0;;;603:1;579:25;;636:2;611:27;;677:2;645:34;;713:2;686:29;;752:2;722:32;;1150:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1319:5;1295;1302:7;1675:5:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1372:13:9::2;1337;;:49;;;;;;;;;;;;;;;;;;1429:13;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:53;;;1473:4;1480:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1397:11;;:104;;;;;;;;;;;;;;;;;;1541:4;1514:17;:24;1532:5;1514:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1591:4;1556:17;:32;1582:4;1556:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1150:453:::0;;;;348:4008;;2912:187:3;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3419:1;3408:9;3404:17;3398:24;3449:18;3441:6;3438:30;3435:117;;;3471:79;;:::i;:::-;3435:117;3576:74;3642:7;3633:6;3622:9;3618:22;3576:74;:::i;:::-;3566:84;;3369:291;3720:2;3709:9;3705:18;3699:25;3751:18;3743:6;3740:30;3737:117;;;3773:79;;:::i;:::-;3737:117;3878:74;3944:7;3935:6;3924:9;3920:22;3878:74;:::i;:::-;3868:84;;3670:292;4001:2;4027:64;4083:7;4074:6;4063:9;4059:22;4027:64;:::i;:::-;4017:74;;3972:129;4140:2;4166:64;4222:7;4213:6;4202:9;4198:22;4166:64;:::i;:::-;4156:74;;4111:129;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6347:1;6340:8;;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;9294:118::-;9381:24;9399:5;9381:24;:::i;:::-;9376:3;9369:37;9294:118;;:::o;9418:222::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9562:71;9630:1;9619:9;9615:17;9606:6;9562:71;:::i;:::-;9418:222;;;;:::o;9646:351::-;9716:6;9765:2;9753:9;9744:7;9740:23;9736:32;9733:119;;;9771:79;;:::i;:::-;9733:119;9891:1;9916:64;9972:7;9963:6;9952:9;9948:22;9916:64;:::i;:::-;9906:74;;9862:128;9646:351;;;;:::o;10003:332::-;10124:4;10162:2;10151:9;10147:18;10139:26;;10175:71;10243:1;10232:9;10228:17;10219:6;10175:71;:::i;:::-;10256:72;10324:2;10313:9;10309:18;10300:6;10256:72;:::i;:::-;10003:332;;;;;:::o;348:4008:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEAD_ADDRESS_1437": {
									"entryPoint": 1802,
									"id": 1437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1149": {
									"entryPoint": 3958,
									"id": 1149,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1209": {
									"entryPoint": 4820,
									"id": 1209,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1131": {
									"entryPoint": 4693,
									"id": 1131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_543": {
									"entryPoint": 4363,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1374": {
									"entryPoint": 3951,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1257": {
									"entryPoint": 3976,
									"id": 1257,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_605": {
									"entryPoint": 4498,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_988": {
									"entryPoint": 4123,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1065": {
									"entryPoint": 5299,
									"id": 1065,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1725": {
									"entryPoint": 5283,
									"id": 1725,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1784": {
									"entryPoint": 1814,
									"id": 1784,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_885": {
									"entryPoint": 3689,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_909": {
									"entryPoint": 1406,
									"id": 909,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_844": {
									"entryPoint": 2159,
									"id": 844,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnShare_1426": {
									"entryPoint": 1256,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTax_1417": {
									"entryPoint": 1808,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_822": {
									"entryPoint": 1788,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromTax_1849": {
									"entryPoint": 3521,
									"id": 1849,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isExcludedFromTax_1441": {
									"entryPoint": 3654,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityShare_1423": {
									"entryPoint": 1440,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_804": {
									"entryPoint": 1262,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_526": {
									"entryPoint": 2247,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_557": {
									"entryPoint": 2228,
									"id": 557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsShare_1429": {
									"entryPoint": 1796,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1420": {
									"entryPoint": 3683,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTaxes_1879": {
									"entryPoint": 3423,
									"id": 1879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_813": {
									"entryPoint": 2287,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_831": {
									"entryPoint": 1446,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_941": {
									"entryPoint": 1455,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_585": {
									"entryPoint": 3819,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1706": {
									"entryPoint": 2465,
									"id": 1706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_868": {
									"entryPoint": 2431,
									"id": 868,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1434": {
									"entryPoint": 3617,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswaprouter_1432": {
									"entryPoint": 1501,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1833": {
									"entryPoint": 1538,
									"id": 1833,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$458_to_t_address_fromStack": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7569,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$458__to_t_address__fromStack_reversed": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$458_to_t_address": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13146:10",
										"nodeType": "YulBlock",
										"src": "0:13146:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "501:40:10",
													"nodeType": "YulBlock",
													"src": "501:40:10",
													"statements": [
														{
															"nativeSrc": "512:22:10",
															"nodeType": "YulAssignment",
															"src": "512:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:10"
																},
																"nativeSrc": "522:12:10",
																"nodeType": "YulFunctionCall",
																"src": "522:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:10",
														"nodeType": "YulTypedName",
														"src": "484:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:10",
														"nodeType": "YulTypedName",
														"src": "494:6:10",
														"type": ""
													}
												],
												"src": "442:99:10"
											},
											{
												"body": {
													"nativeSrc": "643:73:10",
													"nodeType": "YulBlock",
													"src": "643:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:10"
																},
																"nativeSrc": "653:19:10",
																"nodeType": "YulFunctionCall",
																"src": "653:19:10"
															},
															"nativeSrc": "653:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:10"
														},
														{
															"nativeSrc": "681:29:10",
															"nodeType": "YulAssignment",
															"src": "681:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:10",
																		"nodeType": "YulLiteral",
																		"src": "705:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:10"
																},
																"nativeSrc": "696:14:10",
																"nodeType": "YulFunctionCall",
																"src": "696:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:10",
														"nodeType": "YulTypedName",
														"src": "615:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:10",
														"nodeType": "YulTypedName",
														"src": "620:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:10",
														"nodeType": "YulTypedName",
														"src": "631:11:10",
														"type": ""
													}
												],
												"src": "547:169:10"
											},
											{
												"body": {
													"nativeSrc": "784:77:10",
													"nodeType": "YulBlock",
													"src": "784:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:10"
																},
																"nativeSrc": "795:23:10",
																"nodeType": "YulFunctionCall",
																"src": "795:23:10"
															},
															"nativeSrc": "795:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:10"
																		},
																		"nativeSrc": "834:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:10",
																		"nodeType": "YulLiteral",
																		"src": "852:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:10"
																},
																"nativeSrc": "827:27:10",
																"nodeType": "YulFunctionCall",
																"src": "827:27:10"
															},
															"nativeSrc": "827:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:10",
														"nodeType": "YulTypedName",
														"src": "766:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:10",
														"nodeType": "YulTypedName",
														"src": "771:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:10",
														"nodeType": "YulTypedName",
														"src": "776:6:10",
														"type": ""
													}
												],
												"src": "722:139:10"
											},
											{
												"body": {
													"nativeSrc": "915:54:10",
													"nodeType": "YulBlock",
													"src": "915:54:10",
													"statements": [
														{
															"nativeSrc": "925:38:10",
															"nodeType": "YulAssignment",
															"src": "925:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:10",
																				"nodeType": "YulLiteral",
																				"src": "950:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:10",
																				"nodeType": "YulLiteral",
																				"src": "959:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:28:10",
																"nodeType": "YulFunctionCall",
																"src": "935:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:10",
														"nodeType": "YulTypedName",
														"src": "898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:10",
														"nodeType": "YulTypedName",
														"src": "908:6:10",
														"type": ""
													}
												],
												"src": "867:102:10"
											},
											{
												"body": {
													"nativeSrc": "1067:285:10",
													"nodeType": "YulBlock",
													"src": "1067:285:10",
													"statements": [
														{
															"nativeSrc": "1077:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:10"
																},
																"nativeSrc": "1091:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:10",
															"nodeType": "YulAssignment",
															"src": "1139:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:10"
																},
																"nativeSrc": "1146:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:10"
																		},
																		"nativeSrc": "1261:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:10"
																},
																"nativeSrc": "1226:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:10"
															},
															"nativeSrc": "1226:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:10"
														},
														{
															"nativeSrc": "1300:46:10",
															"nodeType": "YulAssignment",
															"src": "1300:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:10"
																		},
																		"nativeSrc": "1316:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:10"
																},
																"nativeSrc": "1307:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:10",
														"nodeType": "YulTypedName",
														"src": "1048:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:10",
														"nodeType": "YulTypedName",
														"src": "1055:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:10",
														"nodeType": "YulTypedName",
														"src": "1063:3:10",
														"type": ""
													}
												],
												"src": "975:377:10"
											},
											{
												"body": {
													"nativeSrc": "1476:195:10",
													"nodeType": "YulBlock",
													"src": "1476:195:10",
													"statements": [
														{
															"nativeSrc": "1486:26:10",
															"nodeType": "YulAssignment",
															"src": "1486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:10"
																},
																"nativeSrc": "1494:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:10"
																		},
																		"nativeSrc": "1529:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:10"
																		},
																		"nativeSrc": "1548:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:10"
																},
																"nativeSrc": "1522:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:10"
															},
															"nativeSrc": "1522:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:10"
														},
														{
															"nativeSrc": "1578:86:10",
															"nodeType": "YulAssignment",
															"src": "1578:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:10"
																},
																"nativeSrc": "1586:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:10",
														"nodeType": "YulTypedName",
														"src": "1448:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:10",
														"nodeType": "YulTypedName",
														"src": "1460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:10",
														"nodeType": "YulTypedName",
														"src": "1471:4:10",
														"type": ""
													}
												],
												"src": "1358:313:10"
											},
											{
												"body": {
													"nativeSrc": "1717:35:10",
													"nodeType": "YulBlock",
													"src": "1717:35:10",
													"statements": [
														{
															"nativeSrc": "1727:19:10",
															"nodeType": "YulAssignment",
															"src": "1727:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:10"
																},
																"nativeSrc": "1737:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:10",
														"nodeType": "YulTypedName",
														"src": "1710:6:10",
														"type": ""
													}
												],
												"src": "1677:75:10"
											},
											{
												"body": {
													"nativeSrc": "1847:28:10",
													"nodeType": "YulBlock",
													"src": "1847:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:10"
																},
																"nativeSrc": "1857:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:10"
															},
															"nativeSrc": "1857:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:10"
											},
											{
												"body": {
													"nativeSrc": "1970:28:10",
													"nodeType": "YulBlock",
													"src": "1970:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:10"
																},
																"nativeSrc": "1980:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:10"
															},
															"nativeSrc": "1980:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:10"
											},
											{
												"body": {
													"nativeSrc": "2049:81:10",
													"nodeType": "YulBlock",
													"src": "2049:81:10",
													"statements": [
														{
															"nativeSrc": "2059:65:10",
															"nodeType": "YulAssignment",
															"src": "2059:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:10"
																},
																"nativeSrc": "2070:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:10",
														"nodeType": "YulTypedName",
														"src": "2031:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:10",
														"nodeType": "YulTypedName",
														"src": "2041:7:10",
														"type": ""
													}
												],
												"src": "2004:126:10"
											},
											{
												"body": {
													"nativeSrc": "2181:51:10",
													"nodeType": "YulBlock",
													"src": "2181:51:10",
													"statements": [
														{
															"nativeSrc": "2191:35:10",
															"nodeType": "YulAssignment",
															"src": "2191:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:10"
																},
																"nativeSrc": "2202:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:10",
														"nodeType": "YulTypedName",
														"src": "2163:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:10",
														"nodeType": "YulTypedName",
														"src": "2173:7:10",
														"type": ""
													}
												],
												"src": "2136:96:10"
											},
											{
												"body": {
													"nativeSrc": "2281:79:10",
													"nodeType": "YulBlock",
													"src": "2281:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:10",
																"nodeType": "YulBlock",
																"src": "2338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:10"
																			},
																			"nativeSrc": "2340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:10"
																		},
																		"nativeSrc": "2340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:10"
																				},
																				"nativeSrc": "2311:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:10"
																		},
																		"nativeSrc": "2301:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nativeSrc": "2294:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:10"
															},
															"nativeSrc": "2291:63:10",
															"nodeType": "YulIf",
															"src": "2291:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:10",
														"nodeType": "YulTypedName",
														"src": "2274:5:10",
														"type": ""
													}
												],
												"src": "2238:122:10"
											},
											{
												"body": {
													"nativeSrc": "2418:87:10",
													"nodeType": "YulBlock",
													"src": "2418:87:10",
													"statements": [
														{
															"nativeSrc": "2428:29:10",
															"nodeType": "YulAssignment",
															"src": "2428:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:10"
																},
																"nativeSrc": "2437:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:10"
																},
																"nativeSrc": "2466:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:10"
															},
															"nativeSrc": "2466:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:10",
														"nodeType": "YulTypedName",
														"src": "2396:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:10",
														"nodeType": "YulTypedName",
														"src": "2404:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:10",
														"nodeType": "YulTypedName",
														"src": "2412:5:10",
														"type": ""
													}
												],
												"src": "2366:139:10"
											},
											{
												"body": {
													"nativeSrc": "2554:79:10",
													"nodeType": "YulBlock",
													"src": "2554:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:10",
																"nodeType": "YulBlock",
																"src": "2611:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:10"
																			},
																			"nativeSrc": "2613:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:10"
																		},
																		"nativeSrc": "2613:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:10"
																				},
																				"nativeSrc": "2584:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:10"
																		},
																		"nativeSrc": "2574:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:10"
																},
																"nativeSrc": "2567:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:10"
															},
															"nativeSrc": "2564:63:10",
															"nodeType": "YulIf",
															"src": "2564:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:10",
														"nodeType": "YulTypedName",
														"src": "2547:5:10",
														"type": ""
													}
												],
												"src": "2511:122:10"
											},
											{
												"body": {
													"nativeSrc": "2691:87:10",
													"nodeType": "YulBlock",
													"src": "2691:87:10",
													"statements": [
														{
															"nativeSrc": "2701:29:10",
															"nodeType": "YulAssignment",
															"src": "2701:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:10"
																},
																"nativeSrc": "2710:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:10"
																},
																"nativeSrc": "2739:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:10"
															},
															"nativeSrc": "2739:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:10",
														"nodeType": "YulTypedName",
														"src": "2669:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:10",
														"nodeType": "YulTypedName",
														"src": "2677:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:10",
														"nodeType": "YulTypedName",
														"src": "2685:5:10",
														"type": ""
													}
												],
												"src": "2639:139:10"
											},
											{
												"body": {
													"nativeSrc": "2867:391:10",
													"nodeType": "YulBlock",
													"src": "2867:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:10",
																"nodeType": "YulBlock",
																"src": "2913:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:10"
																			},
																			"nativeSrc": "2915:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:10"
																		},
																		"nativeSrc": "2915:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:10"
																		},
																		"nativeSrc": "2884:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:10"
																},
																"nativeSrc": "2880:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:10"
															},
															"nativeSrc": "2877:119:10",
															"nodeType": "YulIf",
															"src": "2877:119:10"
														},
														{
															"nativeSrc": "3006:117:10",
															"nodeType": "YulBlock",
															"src": "3006:117:10",
															"statements": [
																{
																	"nativeSrc": "3021:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:10"
																				},
																				"nativeSrc": "3081:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:10"
																		},
																		"nativeSrc": "3060:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:10",
															"nodeType": "YulBlock",
															"src": "3133:118:10",
															"statements": [
																{
																	"nativeSrc": "3148:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:10"
																				},
																				"nativeSrc": "3209:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:10"
																		},
																		"nativeSrc": "3188:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:10",
														"nodeType": "YulTypedName",
														"src": "2829:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:10",
														"nodeType": "YulTypedName",
														"src": "2840:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:10",
														"nodeType": "YulTypedName",
														"src": "2852:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:10",
														"nodeType": "YulTypedName",
														"src": "2860:6:10",
														"type": ""
													}
												],
												"src": "2784:474:10"
											},
											{
												"body": {
													"nativeSrc": "3306:48:10",
													"nodeType": "YulBlock",
													"src": "3306:48:10",
													"statements": [
														{
															"nativeSrc": "3316:32:10",
															"nodeType": "YulAssignment",
															"src": "3316:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:10"
																		},
																		"nativeSrc": "3334:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:10"
																},
																"nativeSrc": "3327:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:10",
														"nodeType": "YulTypedName",
														"src": "3288:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:10",
														"nodeType": "YulTypedName",
														"src": "3298:7:10",
														"type": ""
													}
												],
												"src": "3264:90:10"
											},
											{
												"body": {
													"nativeSrc": "3419:50:10",
													"nodeType": "YulBlock",
													"src": "3419:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:10"
																		},
																		"nativeSrc": "3441:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:10"
																},
																"nativeSrc": "3429:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:10"
															},
															"nativeSrc": "3429:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:10",
														"nodeType": "YulTypedName",
														"src": "3407:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:10",
														"nodeType": "YulTypedName",
														"src": "3414:3:10",
														"type": ""
													}
												],
												"src": "3360:109:10"
											},
											{
												"body": {
													"nativeSrc": "3567:118:10",
													"nodeType": "YulBlock",
													"src": "3567:118:10",
													"statements": [
														{
															"nativeSrc": "3577:26:10",
															"nodeType": "YulAssignment",
															"src": "3577:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:10"
																},
																"nativeSrc": "3585:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:10"
																},
																"nativeSrc": "3613:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:10"
															},
															"nativeSrc": "3613:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:10",
														"nodeType": "YulTypedName",
														"src": "3539:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:10",
														"nodeType": "YulTypedName",
														"src": "3551:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:10",
														"nodeType": "YulTypedName",
														"src": "3562:4:10",
														"type": ""
													}
												],
												"src": "3475:210:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4348:28:10",
													"nodeType": "YulBlock",
													"src": "4348:28:10",
													"statements": [
														{
															"nativeSrc": "4358:12:10",
															"nodeType": "YulAssignment",
															"src": "4358:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4365:5:10",
																"nodeType": "YulIdentifier",
																"src": "4365:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4316:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:10",
														"nodeType": "YulTypedName",
														"src": "4334:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4344:3:10",
														"nodeType": "YulTypedName",
														"src": "4344:3:10",
														"type": ""
													}
												],
												"src": "4316:60:10"
											},
											{
												"body": {
													"nativeSrc": "4442:82:10",
													"nodeType": "YulBlock",
													"src": "4442:82:10",
													"statements": [
														{
															"nativeSrc": "4452:66:10",
															"nodeType": "YulAssignment",
															"src": "4452:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4510:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4510:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4492:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4492:17:10"
																				},
																				"nativeSrc": "4492:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4492:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4483:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4483:8:10"
																		},
																		"nativeSrc": "4483:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4465:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4465:17:10"
																},
																"nativeSrc": "4465:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4465:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4382:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:10",
														"nodeType": "YulTypedName",
														"src": "4422:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:10",
														"nodeType": "YulTypedName",
														"src": "4432:9:10",
														"type": ""
													}
												],
												"src": "4382:142:10"
											},
											{
												"body": {
													"nativeSrc": "4590:66:10",
													"nodeType": "YulBlock",
													"src": "4590:66:10",
													"statements": [
														{
															"nativeSrc": "4600:50:10",
															"nodeType": "YulAssignment",
															"src": "4600:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4644:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4644:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4613:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4613:30:10"
																},
																"nativeSrc": "4613:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4600:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4600:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4530:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:10",
														"nodeType": "YulTypedName",
														"src": "4570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4580:9:10",
														"nodeType": "YulTypedName",
														"src": "4580:9:10",
														"type": ""
													}
												],
												"src": "4530:126:10"
											},
											{
												"body": {
													"nativeSrc": "4748:66:10",
													"nodeType": "YulBlock",
													"src": "4748:66:10",
													"statements": [
														{
															"nativeSrc": "4758:50:10",
															"nodeType": "YulAssignment",
															"src": "4758:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4802:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4802:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4771:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4771:30:10"
																},
																"nativeSrc": "4771:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4771:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4758:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4758:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$458_to_t_address",
												"nativeSrc": "4662:152:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4728:5:10",
														"nodeType": "YulTypedName",
														"src": "4728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4738:9:10",
														"nodeType": "YulTypedName",
														"src": "4738:9:10",
														"type": ""
													}
												],
												"src": "4662:152:10"
											},
											{
												"body": {
													"nativeSrc": "4911:92:10",
													"nodeType": "YulBlock",
													"src": "4911:92:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4928:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4990:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4990:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$458_to_t_address",
																			"nativeSrc": "4933:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "4933:56:10"
																		},
																		"nativeSrc": "4933:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:63:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:10"
																},
																"nativeSrc": "4921:76:10",
																"nodeType": "YulFunctionCall",
																"src": "4921:76:10"
															},
															"nativeSrc": "4921:76:10",
															"nodeType": "YulExpressionStatement",
															"src": "4921:76:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$458_to_t_address_fromStack",
												"nativeSrc": "4820:183:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4899:5:10",
														"nodeType": "YulTypedName",
														"src": "4899:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4906:3:10",
														"nodeType": "YulTypedName",
														"src": "4906:3:10",
														"type": ""
													}
												],
												"src": "4820:183:10"
											},
											{
												"body": {
													"nativeSrc": "5133:150:10",
													"nodeType": "YulBlock",
													"src": "5133:150:10",
													"statements": [
														{
															"nativeSrc": "5143:26:10",
															"nodeType": "YulAssignment",
															"src": "5143:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5155:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5155:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5166:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5166:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5151:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:10"
																},
																"nativeSrc": "5151:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5151:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5143:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5249:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5262:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5273:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5273:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5258:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:10"
																		},
																		"nativeSrc": "5258:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$458_to_t_address_fromStack",
																	"nativeSrc": "5179:69:10",
																	"nodeType": "YulIdentifier",
																	"src": "5179:69:10"
																},
																"nativeSrc": "5179:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5179:97:10"
															},
															"nativeSrc": "5179:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "5179:97:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$458__to_t_address__fromStack_reversed",
												"nativeSrc": "5009:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5105:9:10",
														"nodeType": "YulTypedName",
														"src": "5105:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5117:6:10",
														"nodeType": "YulTypedName",
														"src": "5117:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5128:4:10",
														"nodeType": "YulTypedName",
														"src": "5128:4:10",
														"type": ""
													}
												],
												"src": "5009:274:10"
											},
											{
												"body": {
													"nativeSrc": "5355:263:10",
													"nodeType": "YulBlock",
													"src": "5355:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5401:83:10",
																"nodeType": "YulBlock",
																"src": "5401:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5403:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5403:77:10"
																			},
																			"nativeSrc": "5403:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5403:79:10"
																		},
																		"nativeSrc": "5403:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5403:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5376:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5376:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5385:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5372:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5372:3:10"
																		},
																		"nativeSrc": "5372:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5372:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5368:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5368:3:10"
																},
																"nativeSrc": "5368:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5368:32:10"
															},
															"nativeSrc": "5365:119:10",
															"nodeType": "YulIf",
															"src": "5365:119:10"
														},
														{
															"nativeSrc": "5494:117:10",
															"nodeType": "YulBlock",
															"src": "5494:117:10",
															"statements": [
																{
																	"nativeSrc": "5509:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5509:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5523:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5523:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5513:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5513:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5538:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5538:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5573:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5573:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5584:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5584:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5569:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:10"
																				},
																				"nativeSrc": "5569:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5569:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5593:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5593:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5548:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5548:20:10"
																		},
																		"nativeSrc": "5548:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5538:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5538:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5289:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5325:9:10",
														"nodeType": "YulTypedName",
														"src": "5325:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5336:7:10",
														"nodeType": "YulTypedName",
														"src": "5336:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5348:6:10",
														"nodeType": "YulTypedName",
														"src": "5348:6:10",
														"type": ""
													}
												],
												"src": "5289:329:10"
											},
											{
												"body": {
													"nativeSrc": "5667:43:10",
													"nodeType": "YulBlock",
													"src": "5667:43:10",
													"statements": [
														{
															"nativeSrc": "5677:27:10",
															"nodeType": "YulAssignment",
															"src": "5677:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5699:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:10"
																},
																"nativeSrc": "5688:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5688:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5624:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:10",
														"nodeType": "YulTypedName",
														"src": "5649:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:10",
														"nodeType": "YulTypedName",
														"src": "5659:7:10",
														"type": ""
													}
												],
												"src": "5624:86:10"
											},
											{
												"body": {
													"nativeSrc": "5777:51:10",
													"nodeType": "YulBlock",
													"src": "5777:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5794:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5794:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5815:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5799:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5799:15:10"
																		},
																		"nativeSrc": "5799:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5787:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:10"
																},
																"nativeSrc": "5787:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5787:35:10"
															},
															"nativeSrc": "5787:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5787:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5716:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5765:5:10",
														"nodeType": "YulTypedName",
														"src": "5765:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5772:3:10",
														"nodeType": "YulTypedName",
														"src": "5772:3:10",
														"type": ""
													}
												],
												"src": "5716:112:10"
											},
											{
												"body": {
													"nativeSrc": "5928:120:10",
													"nodeType": "YulBlock",
													"src": "5928:120:10",
													"statements": [
														{
															"nativeSrc": "5938:26:10",
															"nodeType": "YulAssignment",
															"src": "5938:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5950:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5946:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:10"
																},
																"nativeSrc": "5946:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5946:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5938:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6014:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6027:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6027:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6038:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6038:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6023:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:10"
																		},
																		"nativeSrc": "6023:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5974:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5974:39:10"
																},
																"nativeSrc": "5974:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5974:67:10"
															},
															"nativeSrc": "5974:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5974:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5834:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5900:9:10",
														"nodeType": "YulTypedName",
														"src": "5900:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5912:6:10",
														"nodeType": "YulTypedName",
														"src": "5912:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5923:4:10",
														"nodeType": "YulTypedName",
														"src": "5923:4:10",
														"type": ""
													}
												],
												"src": "5834:214:10"
											},
											{
												"body": {
													"nativeSrc": "6119:53:10",
													"nodeType": "YulBlock",
													"src": "6119:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6136:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6136:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6159:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6159:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6141:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6141:17:10"
																		},
																		"nativeSrc": "6141:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6141:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6129:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6129:6:10"
																},
																"nativeSrc": "6129:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6129:37:10"
															},
															"nativeSrc": "6129:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6129:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6054:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6107:5:10",
														"nodeType": "YulTypedName",
														"src": "6107:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6114:3:10",
														"nodeType": "YulTypedName",
														"src": "6114:3:10",
														"type": ""
													}
												],
												"src": "6054:118:10"
											},
											{
												"body": {
													"nativeSrc": "6276:124:10",
													"nodeType": "YulBlock",
													"src": "6276:124:10",
													"statements": [
														{
															"nativeSrc": "6286:26:10",
															"nodeType": "YulAssignment",
															"src": "6286:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6298:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6298:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6309:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6309:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6294:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6294:3:10"
																},
																"nativeSrc": "6294:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6294:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6286:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6286:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6366:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6366:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6379:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6379:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6390:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6390:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6375:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6375:3:10"
																		},
																		"nativeSrc": "6375:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6375:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6322:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6322:43:10"
																},
																"nativeSrc": "6322:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6322:71:10"
															},
															"nativeSrc": "6322:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6322:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6178:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6248:9:10",
														"nodeType": "YulTypedName",
														"src": "6248:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6260:6:10",
														"nodeType": "YulTypedName",
														"src": "6260:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6271:4:10",
														"nodeType": "YulTypedName",
														"src": "6271:4:10",
														"type": ""
													}
												],
												"src": "6178:222:10"
											},
											{
												"body": {
													"nativeSrc": "6472:263:10",
													"nodeType": "YulBlock",
													"src": "6472:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6518:83:10",
																"nodeType": "YulBlock",
																"src": "6518:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6520:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6520:77:10"
																			},
																			"nativeSrc": "6520:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6520:79:10"
																		},
																		"nativeSrc": "6520:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6520:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6493:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6493:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6502:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6489:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6489:3:10"
																		},
																		"nativeSrc": "6489:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6489:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6485:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6485:3:10"
																},
																"nativeSrc": "6485:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6485:32:10"
															},
															"nativeSrc": "6482:119:10",
															"nodeType": "YulIf",
															"src": "6482:119:10"
														},
														{
															"nativeSrc": "6611:117:10",
															"nodeType": "YulBlock",
															"src": "6611:117:10",
															"statements": [
																{
																	"nativeSrc": "6626:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6626:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6640:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6640:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6630:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6630:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6655:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6655:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6690:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6690:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6701:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6701:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6686:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:10"
																				},
																				"nativeSrc": "6686:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6686:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6710:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6710:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6665:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6665:20:10"
																		},
																		"nativeSrc": "6665:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6665:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6655:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6655:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6406:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6442:9:10",
														"nodeType": "YulTypedName",
														"src": "6442:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6453:7:10",
														"nodeType": "YulTypedName",
														"src": "6453:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6465:6:10",
														"nodeType": "YulTypedName",
														"src": "6465:6:10",
														"type": ""
													}
												],
												"src": "6406:329:10"
											},
											{
												"body": {
													"nativeSrc": "6824:391:10",
													"nodeType": "YulBlock",
													"src": "6824:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6870:83:10",
																"nodeType": "YulBlock",
																"src": "6870:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6872:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6872:77:10"
																			},
																			"nativeSrc": "6872:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6872:79:10"
																		},
																		"nativeSrc": "6872:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6872:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6845:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6845:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6854:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6841:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:10"
																		},
																		"nativeSrc": "6841:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6841:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6866:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6866:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6837:3:10"
																},
																"nativeSrc": "6837:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6837:32:10"
															},
															"nativeSrc": "6834:119:10",
															"nodeType": "YulIf",
															"src": "6834:119:10"
														},
														{
															"nativeSrc": "6963:117:10",
															"nodeType": "YulBlock",
															"src": "6963:117:10",
															"statements": [
																{
																	"nativeSrc": "6978:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6978:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6992:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6992:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6982:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6982:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7007:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7007:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7042:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7042:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7053:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7038:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7038:3:10"
																				},
																				"nativeSrc": "7038:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7038:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7062:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7062:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7017:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7017:20:10"
																		},
																		"nativeSrc": "7017:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7007:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7007:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7090:118:10",
															"nodeType": "YulBlock",
															"src": "7090:118:10",
															"statements": [
																{
																	"nativeSrc": "7105:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7105:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7119:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7109:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7109:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7135:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7135:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7170:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7170:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7181:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7181:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7166:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7166:3:10"
																				},
																				"nativeSrc": "7166:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7166:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7190:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7190:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7145:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7145:20:10"
																		},
																		"nativeSrc": "7145:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7145:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7135:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7135:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6741:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6786:9:10",
														"nodeType": "YulTypedName",
														"src": "6786:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6797:7:10",
														"nodeType": "YulTypedName",
														"src": "6797:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6809:6:10",
														"nodeType": "YulTypedName",
														"src": "6809:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6817:6:10",
														"nodeType": "YulTypedName",
														"src": "6817:6:10",
														"type": ""
													}
												],
												"src": "6741:474:10"
											},
											{
												"body": {
													"nativeSrc": "7261:76:10",
													"nodeType": "YulBlock",
													"src": "7261:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7315:16:10",
																"nodeType": "YulBlock",
																"src": "7315:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7324:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7327:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7327:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7317:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7317:6:10"
																			},
																			"nativeSrc": "7317:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7317:12:10"
																		},
																		"nativeSrc": "7317:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7317:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7284:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7284:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7306:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7306:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7291:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "7291:14:10"
																				},
																				"nativeSrc": "7291:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7281:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7281:2:10"
																		},
																		"nativeSrc": "7281:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7274:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:10"
																},
																"nativeSrc": "7274:40:10",
																"nodeType": "YulFunctionCall",
																"src": "7274:40:10"
															},
															"nativeSrc": "7271:60:10",
															"nodeType": "YulIf",
															"src": "7271:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7221:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7254:5:10",
														"nodeType": "YulTypedName",
														"src": "7254:5:10",
														"type": ""
													}
												],
												"src": "7221:116:10"
											},
											{
												"body": {
													"nativeSrc": "7392:84:10",
													"nodeType": "YulBlock",
													"src": "7392:84:10",
													"statements": [
														{
															"nativeSrc": "7402:29:10",
															"nodeType": "YulAssignment",
															"src": "7402:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7424:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7424:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7411:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7411:12:10"
																},
																"nativeSrc": "7411:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7411:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7402:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7402:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7464:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7464:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7440:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "7440:23:10"
																},
																"nativeSrc": "7440:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7440:30:10"
															},
															"nativeSrc": "7440:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7440:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7343:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7370:6:10",
														"nodeType": "YulTypedName",
														"src": "7370:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7378:3:10",
														"nodeType": "YulTypedName",
														"src": "7378:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7386:5:10",
														"nodeType": "YulTypedName",
														"src": "7386:5:10",
														"type": ""
													}
												],
												"src": "7343:133:10"
											},
											{
												"body": {
													"nativeSrc": "7562:388:10",
													"nodeType": "YulBlock",
													"src": "7562:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7608:83:10",
																"nodeType": "YulBlock",
																"src": "7608:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7610:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7610:77:10"
																			},
																			"nativeSrc": "7610:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:79:10"
																		},
																		"nativeSrc": "7610:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7583:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7583:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7592:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7592:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7579:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7579:3:10"
																		},
																		"nativeSrc": "7579:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7579:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7604:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7604:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7575:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7575:3:10"
																},
																"nativeSrc": "7575:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7575:32:10"
															},
															"nativeSrc": "7572:119:10",
															"nodeType": "YulIf",
															"src": "7572:119:10"
														},
														{
															"nativeSrc": "7701:117:10",
															"nodeType": "YulBlock",
															"src": "7701:117:10",
															"statements": [
																{
																	"nativeSrc": "7716:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7716:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7730:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7730:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7720:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7720:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7745:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7745:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7780:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7780:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7791:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7791:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7776:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7776:3:10"
																				},
																				"nativeSrc": "7776:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7776:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7800:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7800:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7755:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7755:20:10"
																		},
																		"nativeSrc": "7755:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7755:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7745:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7745:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7828:115:10",
															"nodeType": "YulBlock",
															"src": "7828:115:10",
															"statements": [
																{
																	"nativeSrc": "7843:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7843:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7857:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7857:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7847:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7847:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7873:60:10",
																	"nodeType": "YulAssignment",
																	"src": "7873:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7905:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7905:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7916:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7916:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7901:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7901:3:10"
																				},
																				"nativeSrc": "7901:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7901:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7925:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7925:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7883:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7883:17:10"
																		},
																		"nativeSrc": "7883:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7883:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7873:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7873:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7482:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7524:9:10",
														"nodeType": "YulTypedName",
														"src": "7524:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7535:7:10",
														"nodeType": "YulTypedName",
														"src": "7535:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7547:6:10",
														"nodeType": "YulTypedName",
														"src": "7547:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7555:6:10",
														"nodeType": "YulTypedName",
														"src": "7555:6:10",
														"type": ""
													}
												],
												"src": "7482:468:10"
											},
											{
												"body": {
													"nativeSrc": "8039:391:10",
													"nodeType": "YulBlock",
													"src": "8039:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8085:83:10",
																"nodeType": "YulBlock",
																"src": "8085:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8087:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8087:77:10"
																			},
																			"nativeSrc": "8087:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8087:79:10"
																		},
																		"nativeSrc": "8087:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8087:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8060:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8069:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8069:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8056:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8056:3:10"
																		},
																		"nativeSrc": "8056:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8056:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8081:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8081:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:10"
																},
																"nativeSrc": "8052:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8052:32:10"
															},
															"nativeSrc": "8049:119:10",
															"nodeType": "YulIf",
															"src": "8049:119:10"
														},
														{
															"nativeSrc": "8178:117:10",
															"nodeType": "YulBlock",
															"src": "8178:117:10",
															"statements": [
																{
																	"nativeSrc": "8193:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8193:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8207:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8207:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8197:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8197:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8222:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8222:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8257:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8257:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8268:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8268:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8253:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8253:3:10"
																				},
																				"nativeSrc": "8253:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8253:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8277:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8277:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8232:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8232:20:10"
																		},
																		"nativeSrc": "8232:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8232:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8222:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8222:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8305:118:10",
															"nodeType": "YulBlock",
															"src": "8305:118:10",
															"statements": [
																{
																	"nativeSrc": "8320:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8320:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8334:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8324:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8324:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8350:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8350:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8385:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8385:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8396:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8396:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8381:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8381:3:10"
																				},
																				"nativeSrc": "8381:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8381:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8405:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8405:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8360:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8360:20:10"
																		},
																		"nativeSrc": "8360:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8360:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8350:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8350:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7956:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8001:9:10",
														"nodeType": "YulTypedName",
														"src": "8001:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8012:7:10",
														"nodeType": "YulTypedName",
														"src": "8012:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8024:6:10",
														"nodeType": "YulTypedName",
														"src": "8024:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8032:6:10",
														"nodeType": "YulTypedName",
														"src": "8032:6:10",
														"type": ""
													}
												],
												"src": "7956:474:10"
											},
											{
												"body": {
													"nativeSrc": "8464:152:10",
													"nodeType": "YulBlock",
													"src": "8464:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8481:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8481:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8484:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8474:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:10"
																},
																"nativeSrc": "8474:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8474:88:10"
															},
															"nativeSrc": "8474:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8474:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8578:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8578:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8581:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8581:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8571:6:10"
																},
																"nativeSrc": "8571:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8571:15:10"
															},
															"nativeSrc": "8571:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8571:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8602:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8602:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8605:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8605:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8595:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:10"
																},
																"nativeSrc": "8595:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8595:15:10"
															},
															"nativeSrc": "8595:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8595:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8436:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8436:180:10"
											},
											{
												"body": {
													"nativeSrc": "8673:269:10",
													"nodeType": "YulBlock",
													"src": "8673:269:10",
													"statements": [
														{
															"nativeSrc": "8683:22:10",
															"nodeType": "YulAssignment",
															"src": "8683:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8697:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8697:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8703:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8703:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8693:3:10"
																},
																"nativeSrc": "8693:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8693:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8683:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:10"
																}
															]
														},
														{
															"nativeSrc": "8714:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8714:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8744:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8744:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8750:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8750:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8740:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8740:3:10"
																},
																"nativeSrc": "8740:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8740:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8718:18:10",
																	"nodeType": "YulTypedName",
																	"src": "8718:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8791:51:10",
																"nodeType": "YulBlock",
																"src": "8791:51:10",
																"statements": [
																	{
																		"nativeSrc": "8805:27:10",
																		"nodeType": "YulAssignment",
																		"src": "8805:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8819:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8819:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8827:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8815:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8815:3:10"
																			},
																			"nativeSrc": "8815:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8815:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8805:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8805:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8771:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8771:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8764:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:10"
																},
																"nativeSrc": "8764:26:10",
																"nodeType": "YulFunctionCall",
																"src": "8764:26:10"
															},
															"nativeSrc": "8761:81:10",
															"nodeType": "YulIf",
															"src": "8761:81:10"
														},
														{
															"body": {
																"nativeSrc": "8894:42:10",
																"nodeType": "YulBlock",
																"src": "8894:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8908:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8908:16:10"
																			},
																			"nativeSrc": "8908:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8908:18:10"
																		},
																		"nativeSrc": "8908:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8908:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8858:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8858:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8881:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8881:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8889:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8889:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8878:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8878:2:10"
																		},
																		"nativeSrc": "8878:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8878:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8855:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8855:2:10"
																},
																"nativeSrc": "8855:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8855:38:10"
															},
															"nativeSrc": "8852:84:10",
															"nodeType": "YulIf",
															"src": "8852:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8622:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8657:4:10",
														"nodeType": "YulTypedName",
														"src": "8657:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8666:6:10",
														"nodeType": "YulTypedName",
														"src": "8666:6:10",
														"type": ""
													}
												],
												"src": "8622:320:10"
											},
											{
												"body": {
													"nativeSrc": "9001:32:10",
													"nodeType": "YulBlock",
													"src": "9001:32:10",
													"statements": [
														{
															"nativeSrc": "9011:16:10",
															"nodeType": "YulAssignment",
															"src": "9011:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "9022:5:10",
																"nodeType": "YulIdentifier",
																"src": "9022:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9011:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9011:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "8948:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8983:5:10",
														"nodeType": "YulTypedName",
														"src": "8983:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8993:7:10",
														"nodeType": "YulTypedName",
														"src": "8993:7:10",
														"type": ""
													}
												],
												"src": "8948:85:10"
											},
											{
												"body": {
													"nativeSrc": "9107:90:10",
													"nodeType": "YulBlock",
													"src": "9107:90:10",
													"statements": [
														{
															"nativeSrc": "9117:74:10",
															"nodeType": "YulAssignment",
															"src": "9117:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9183:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9183:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9157:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "9157:25:10"
																				},
																				"nativeSrc": "9157:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9157:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9148:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "9148:8:10"
																		},
																		"nativeSrc": "9148:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9148:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9130:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9130:17:10"
																},
																"nativeSrc": "9130:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9130:61:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9117:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9117:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9039:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9087:5:10",
														"nodeType": "YulTypedName",
														"src": "9087:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9097:9:10",
														"nodeType": "YulTypedName",
														"src": "9097:9:10",
														"type": ""
													}
												],
												"src": "9039:158:10"
											},
											{
												"body": {
													"nativeSrc": "9276:74:10",
													"nodeType": "YulBlock",
													"src": "9276:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9293:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9293:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9337:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9337:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9298:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "9298:38:10"
																		},
																		"nativeSrc": "9298:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9298:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9286:6:10"
																},
																"nativeSrc": "9286:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9286:58:10"
															},
															"nativeSrc": "9286:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9286:58:10"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9203:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9264:5:10",
														"nodeType": "YulTypedName",
														"src": "9264:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9271:3:10",
														"nodeType": "YulTypedName",
														"src": "9271:3:10",
														"type": ""
													}
												],
												"src": "9203:147:10"
											},
											{
												"body": {
													"nativeSrc": "9610:553:10",
													"nodeType": "YulBlock",
													"src": "9610:553:10",
													"statements": [
														{
															"nativeSrc": "9620:27:10",
															"nodeType": "YulAssignment",
															"src": "9620:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9632:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9632:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9643:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9643:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9628:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9628:3:10"
																},
																"nativeSrc": "9628:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9628:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9620:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9620:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9701:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9714:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9714:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9725:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9725:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9710:3:10"
																		},
																		"nativeSrc": "9710:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9710:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9657:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9657:43:10"
																},
																"nativeSrc": "9657:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9657:71:10"
															},
															"nativeSrc": "9657:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9657:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9782:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9782:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9795:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9795:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9806:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9806:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9791:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9791:3:10"
																		},
																		"nativeSrc": "9791:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9791:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9738:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9738:43:10"
																},
																"nativeSrc": "9738:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9738:72:10"
															},
															"nativeSrc": "9738:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9738:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9872:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9872:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9885:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9885:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9896:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9896:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9881:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9881:3:10"
																		},
																		"nativeSrc": "9881:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9881:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9820:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "9820:51:10"
																},
																"nativeSrc": "9820:80:10",
																"nodeType": "YulFunctionCall",
																"src": "9820:80:10"
															},
															"nativeSrc": "9820:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "9820:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9962:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9962:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9975:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9975:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9986:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9986:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9971:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9971:3:10"
																		},
																		"nativeSrc": "9971:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9971:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9910:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "9910:51:10"
																},
																"nativeSrc": "9910:80:10",
																"nodeType": "YulFunctionCall",
																"src": "9910:80:10"
															},
															"nativeSrc": "9910:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "9910:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10044:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10057:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10057:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10068:3:10",
																				"nodeType": "YulLiteral",
																				"src": "10068:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10053:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10053:3:10"
																		},
																		"nativeSrc": "10053:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10053:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10000:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10000:43:10"
																},
																"nativeSrc": "10000:73:10",
																"nodeType": "YulFunctionCall",
																"src": "10000:73:10"
															},
															"nativeSrc": "10000:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "10000:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10127:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10127:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10140:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10140:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10151:3:10",
																				"nodeType": "YulLiteral",
																				"src": "10151:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10136:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10136:3:10"
																		},
																		"nativeSrc": "10136:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10136:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10083:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10083:43:10"
																},
																"nativeSrc": "10083:73:10",
																"nodeType": "YulFunctionCall",
																"src": "10083:73:10"
															},
															"nativeSrc": "10083:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "10083:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9356:807:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9542:9:10",
														"nodeType": "YulTypedName",
														"src": "9542:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9554:6:10",
														"nodeType": "YulTypedName",
														"src": "9554:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9562:6:10",
														"nodeType": "YulTypedName",
														"src": "9562:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9570:6:10",
														"nodeType": "YulTypedName",
														"src": "9570:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9578:6:10",
														"nodeType": "YulTypedName",
														"src": "9578:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9586:6:10",
														"nodeType": "YulTypedName",
														"src": "9586:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9594:6:10",
														"nodeType": "YulTypedName",
														"src": "9594:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9605:4:10",
														"nodeType": "YulTypedName",
														"src": "9605:4:10",
														"type": ""
													}
												],
												"src": "9356:807:10"
											},
											{
												"body": {
													"nativeSrc": "10232:80:10",
													"nodeType": "YulBlock",
													"src": "10232:80:10",
													"statements": [
														{
															"nativeSrc": "10242:22:10",
															"nodeType": "YulAssignment",
															"src": "10242:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10257:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10257:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10251:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10251:5:10"
																},
																"nativeSrc": "10251:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10251:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10242:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10242:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10300:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10300:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10273:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "10273:26:10"
																},
																"nativeSrc": "10273:33:10",
																"nodeType": "YulFunctionCall",
																"src": "10273:33:10"
															},
															"nativeSrc": "10273:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "10273:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10169:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10210:6:10",
														"nodeType": "YulTypedName",
														"src": "10210:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10218:3:10",
														"nodeType": "YulTypedName",
														"src": "10218:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10226:5:10",
														"nodeType": "YulTypedName",
														"src": "10226:5:10",
														"type": ""
													}
												],
												"src": "10169:143:10"
											},
											{
												"body": {
													"nativeSrc": "10429:552:10",
													"nodeType": "YulBlock",
													"src": "10429:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10475:83:10",
																"nodeType": "YulBlock",
																"src": "10475:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10477:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10477:77:10"
																			},
																			"nativeSrc": "10477:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10477:79:10"
																		},
																		"nativeSrc": "10477:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10477:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10450:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10450:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10459:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10459:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10446:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:10"
																		},
																		"nativeSrc": "10446:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10446:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10471:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10471:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:10"
																},
																"nativeSrc": "10442:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10442:32:10"
															},
															"nativeSrc": "10439:119:10",
															"nodeType": "YulIf",
															"src": "10439:119:10"
														},
														{
															"nativeSrc": "10568:128:10",
															"nodeType": "YulBlock",
															"src": "10568:128:10",
															"statements": [
																{
																	"nativeSrc": "10583:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10583:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10597:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10597:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10587:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10587:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10612:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10612:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10658:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10658:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10669:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10669:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10654:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10654:3:10"
																				},
																				"nativeSrc": "10654:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10654:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10678:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10678:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10622:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10622:31:10"
																		},
																		"nativeSrc": "10622:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10612:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10612:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10706:129:10",
															"nodeType": "YulBlock",
															"src": "10706:129:10",
															"statements": [
																{
																	"nativeSrc": "10721:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10721:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10735:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10725:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10725:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10751:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10751:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10797:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10797:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10808:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10808:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10793:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10793:3:10"
																				},
																				"nativeSrc": "10793:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10793:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10817:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10817:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10761:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10761:31:10"
																		},
																		"nativeSrc": "10761:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10761:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10751:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10751:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10845:129:10",
															"nodeType": "YulBlock",
															"src": "10845:129:10",
															"statements": [
																{
																	"nativeSrc": "10860:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10860:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10874:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10874:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10864:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10864:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10890:74:10",
																	"nodeType": "YulAssignment",
																	"src": "10890:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10936:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10936:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10947:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10947:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10932:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10932:3:10"
																				},
																				"nativeSrc": "10932:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10932:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10956:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10956:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10900:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "10900:31:10"
																		},
																		"nativeSrc": "10900:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10900:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10890:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10890:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "10318:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10383:9:10",
														"nodeType": "YulTypedName",
														"src": "10383:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10394:7:10",
														"nodeType": "YulTypedName",
														"src": "10394:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10406:6:10",
														"nodeType": "YulTypedName",
														"src": "10406:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10414:6:10",
														"nodeType": "YulTypedName",
														"src": "10414:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10422:6:10",
														"nodeType": "YulTypedName",
														"src": "10422:6:10",
														"type": ""
													}
												],
												"src": "10318:663:10"
											},
											{
												"body": {
													"nativeSrc": "11113:206:10",
													"nodeType": "YulBlock",
													"src": "11113:206:10",
													"statements": [
														{
															"nativeSrc": "11123:26:10",
															"nodeType": "YulAssignment",
															"src": "11123:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11135:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11135:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11131:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11131:3:10"
																},
																"nativeSrc": "11131:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11131:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11123:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11123:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11203:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11203:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11212:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:10"
																		},
																		"nativeSrc": "11212:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11159:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11159:43:10"
																},
																"nativeSrc": "11159:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11159:71:10"
															},
															"nativeSrc": "11159:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11159:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11284:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11284:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11297:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11297:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11308:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11308:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11293:3:10"
																		},
																		"nativeSrc": "11293:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11293:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11240:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11240:43:10"
																},
																"nativeSrc": "11240:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11240:72:10"
															},
															"nativeSrc": "11240:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11240:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10987:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11077:9:10",
														"nodeType": "YulTypedName",
														"src": "11077:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11089:6:10",
														"nodeType": "YulTypedName",
														"src": "11089:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11097:6:10",
														"nodeType": "YulTypedName",
														"src": "11097:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11108:4:10",
														"nodeType": "YulTypedName",
														"src": "11108:4:10",
														"type": ""
													}
												],
												"src": "10987:332:10"
											},
											{
												"body": {
													"nativeSrc": "11353:152:10",
													"nodeType": "YulBlock",
													"src": "11353:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11370:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11373:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11373:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11363:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11363:6:10"
																},
																"nativeSrc": "11363:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11363:88:10"
															},
															"nativeSrc": "11363:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11363:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11467:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11467:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11470:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11470:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11460:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11460:6:10"
																},
																"nativeSrc": "11460:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11460:15:10"
															},
															"nativeSrc": "11460:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11460:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11491:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11491:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11494:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11494:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11484:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11484:6:10"
																},
																"nativeSrc": "11484:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11484:15:10"
															},
															"nativeSrc": "11484:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11484:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11325:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11325:180:10"
											},
											{
												"body": {
													"nativeSrc": "11559:362:10",
													"nodeType": "YulBlock",
													"src": "11559:362:10",
													"statements": [
														{
															"nativeSrc": "11569:25:10",
															"nodeType": "YulAssignment",
															"src": "11569:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11592:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11592:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11574:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11574:17:10"
																},
																"nativeSrc": "11574:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11574:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11569:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11569:1:10"
																}
															]
														},
														{
															"nativeSrc": "11603:25:10",
															"nodeType": "YulAssignment",
															"src": "11603:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11626:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11626:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11608:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11608:17:10"
																},
																"nativeSrc": "11608:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11608:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11603:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11603:1:10"
																}
															]
														},
														{
															"nativeSrc": "11637:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11637:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11660:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11660:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11663:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11663:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11656:3:10"
																},
																"nativeSrc": "11656:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11656:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11641:11:10",
																	"nodeType": "YulTypedName",
																	"src": "11641:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11674:41:10",
															"nodeType": "YulAssignment",
															"src": "11674:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11703:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "11703:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11685:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11685:17:10"
																},
																"nativeSrc": "11685:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11685:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11674:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "11674:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11892:22:10",
																"nodeType": "YulBlock",
																"src": "11892:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11894:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11894:16:10"
																			},
																			"nativeSrc": "11894:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11894:18:10"
																		},
																		"nativeSrc": "11894:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11894:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11825:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11825:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11818:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11818:6:10"
																				},
																				"nativeSrc": "11818:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11818:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11848:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11848:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11855:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "11855:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11864:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "11864:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11851:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11851:3:10"
																						},
																						"nativeSrc": "11851:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11851:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11845:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "11845:2:10"
																				},
																				"nativeSrc": "11845:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11845:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11798:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11798:2:10"
																		},
																		"nativeSrc": "11798:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11798:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11778:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11778:6:10"
																},
																"nativeSrc": "11778:113:10",
																"nodeType": "YulFunctionCall",
																"src": "11778:113:10"
															},
															"nativeSrc": "11775:139:10",
															"nodeType": "YulIf",
															"src": "11775:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11511:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11542:1:10",
														"nodeType": "YulTypedName",
														"src": "11542:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11545:1:10",
														"nodeType": "YulTypedName",
														"src": "11545:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11551:7:10",
														"nodeType": "YulTypedName",
														"src": "11551:7:10",
														"type": ""
													}
												],
												"src": "11511:410:10"
											},
											{
												"body": {
													"nativeSrc": "11955:152:10",
													"nodeType": "YulBlock",
													"src": "11955:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11972:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11972:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11975:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11975:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11965:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:10"
																},
																"nativeSrc": "11965:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11965:88:10"
															},
															"nativeSrc": "11965:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11965:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12069:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12069:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12072:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12072:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12062:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12062:6:10"
																},
																"nativeSrc": "12062:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12062:15:10"
															},
															"nativeSrc": "12062:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12062:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12093:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12093:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12096:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12096:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12086:6:10"
																},
																"nativeSrc": "12086:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12086:15:10"
															},
															"nativeSrc": "12086:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12086:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11927:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11927:180:10"
											},
											{
												"body": {
													"nativeSrc": "12155:143:10",
													"nodeType": "YulBlock",
													"src": "12155:143:10",
													"statements": [
														{
															"nativeSrc": "12165:25:10",
															"nodeType": "YulAssignment",
															"src": "12165:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12188:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12188:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12170:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12170:17:10"
																},
																"nativeSrc": "12170:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12170:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12165:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12165:1:10"
																}
															]
														},
														{
															"nativeSrc": "12199:25:10",
															"nodeType": "YulAssignment",
															"src": "12199:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12222:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12222:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12204:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12204:17:10"
																},
																"nativeSrc": "12204:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12204:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12199:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12199:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12246:22:10",
																"nodeType": "YulBlock",
																"src": "12246:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12248:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12248:16:10"
																			},
																			"nativeSrc": "12248:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12248:18:10"
																		},
																		"nativeSrc": "12248:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12248:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12243:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12243:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12236:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12236:6:10"
																},
																"nativeSrc": "12236:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12236:9:10"
															},
															"nativeSrc": "12233:35:10",
															"nodeType": "YulIf",
															"src": "12233:35:10"
														},
														{
															"nativeSrc": "12278:14:10",
															"nodeType": "YulAssignment",
															"src": "12278:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12287:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12287:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12290:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12290:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:10"
																},
																"nativeSrc": "12283:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12283:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12278:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12278:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12113:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12144:1:10",
														"nodeType": "YulTypedName",
														"src": "12144:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12147:1:10",
														"nodeType": "YulTypedName",
														"src": "12147:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12153:1:10",
														"nodeType": "YulTypedName",
														"src": "12153:1:10",
														"type": ""
													}
												],
												"src": "12113:185:10"
											},
											{
												"body": {
													"nativeSrc": "12349:149:10",
													"nodeType": "YulBlock",
													"src": "12349:149:10",
													"statements": [
														{
															"nativeSrc": "12359:25:10",
															"nodeType": "YulAssignment",
															"src": "12359:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12382:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12382:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12364:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12364:17:10"
																},
																"nativeSrc": "12364:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12364:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12359:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12359:1:10"
																}
															]
														},
														{
															"nativeSrc": "12393:25:10",
															"nodeType": "YulAssignment",
															"src": "12393:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12416:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12416:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12398:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12398:17:10"
																},
																"nativeSrc": "12398:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12398:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12393:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12393:1:10"
																}
															]
														},
														{
															"nativeSrc": "12427:17:10",
															"nodeType": "YulAssignment",
															"src": "12427:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12439:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12439:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12442:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12442:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12435:3:10"
																},
																"nativeSrc": "12435:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12435:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12427:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12427:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12469:22:10",
																"nodeType": "YulBlock",
																"src": "12469:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12471:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12471:16:10"
																			},
																			"nativeSrc": "12471:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12471:18:10"
																		},
																		"nativeSrc": "12471:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12471:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12460:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12460:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12466:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12466:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12457:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12457:2:10"
																},
																"nativeSrc": "12457:11:10",
																"nodeType": "YulFunctionCall",
																"src": "12457:11:10"
															},
															"nativeSrc": "12454:37:10",
															"nodeType": "YulIf",
															"src": "12454:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12304:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12335:1:10",
														"nodeType": "YulTypedName",
														"src": "12335:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12338:1:10",
														"nodeType": "YulTypedName",
														"src": "12338:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12344:4:10",
														"nodeType": "YulTypedName",
														"src": "12344:4:10",
														"type": ""
													}
												],
												"src": "12304:194:10"
											},
											{
												"body": {
													"nativeSrc": "12548:147:10",
													"nodeType": "YulBlock",
													"src": "12548:147:10",
													"statements": [
														{
															"nativeSrc": "12558:25:10",
															"nodeType": "YulAssignment",
															"src": "12558:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12581:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12581:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12563:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12563:17:10"
																},
																"nativeSrc": "12563:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12563:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12558:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12558:1:10"
																}
															]
														},
														{
															"nativeSrc": "12592:25:10",
															"nodeType": "YulAssignment",
															"src": "12592:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12615:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12615:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12597:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12597:17:10"
																},
																"nativeSrc": "12597:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12597:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12592:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12592:1:10"
																}
															]
														},
														{
															"nativeSrc": "12626:16:10",
															"nodeType": "YulAssignment",
															"src": "12626:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12637:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12637:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12640:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12640:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12633:3:10"
																},
																"nativeSrc": "12633:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12633:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12626:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12666:22:10",
																"nodeType": "YulBlock",
																"src": "12666:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12668:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12668:16:10"
																			},
																			"nativeSrc": "12668:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12668:18:10"
																		},
																		"nativeSrc": "12668:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12668:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12658:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12658:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12661:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12655:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:10"
																},
																"nativeSrc": "12655:10:10",
																"nodeType": "YulFunctionCall",
																"src": "12655:10:10"
															},
															"nativeSrc": "12652:36:10",
															"nodeType": "YulIf",
															"src": "12652:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12504:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12535:1:10",
														"nodeType": "YulTypedName",
														"src": "12535:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12538:1:10",
														"nodeType": "YulTypedName",
														"src": "12538:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12544:3:10",
														"nodeType": "YulTypedName",
														"src": "12544:3:10",
														"type": ""
													}
												],
												"src": "12504:191:10"
											},
											{
												"body": {
													"nativeSrc": "12855:288:10",
													"nodeType": "YulBlock",
													"src": "12855:288:10",
													"statements": [
														{
															"nativeSrc": "12865:26:10",
															"nodeType": "YulAssignment",
															"src": "12865:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12877:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12877:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12888:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12888:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12873:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12873:3:10"
																},
																"nativeSrc": "12873:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12873:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12865:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12865:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12945:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12945:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12958:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12958:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12969:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12969:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12954:3:10"
																		},
																		"nativeSrc": "12954:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12954:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12901:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12901:43:10"
																},
																"nativeSrc": "12901:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12901:71:10"
															},
															"nativeSrc": "12901:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12901:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13026:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13026:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13039:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13039:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13050:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13050:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13035:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13035:3:10"
																		},
																		"nativeSrc": "13035:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13035:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12982:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12982:43:10"
																},
																"nativeSrc": "12982:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12982:72:10"
															},
															"nativeSrc": "12982:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12982:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13108:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13108:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13132:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13132:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13117:3:10"
																		},
																		"nativeSrc": "13117:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13117:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13064:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13064:43:10"
																},
																"nativeSrc": "13064:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13064:72:10"
															},
															"nativeSrc": "13064:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13064:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12701:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12811:9:10",
														"nodeType": "YulTypedName",
														"src": "12811:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12823:6:10",
														"nodeType": "YulTypedName",
														"src": "12823:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12831:6:10",
														"nodeType": "YulTypedName",
														"src": "12831:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12839:6:10",
														"nodeType": "YulTypedName",
														"src": "12839:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12850:4:10",
														"nodeType": "YulTypedName",
														"src": "12850:4:10",
														"type": ""
													}
												],
												"src": "12701:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$458_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$458_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$458_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$458__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$458_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061018c575f3560e01c806370a08231116100dc578063c647b20e11610095578063cb4ca6311161006f578063cb4ca6311461044e578063cc1776d31461047e578063dd62ed3e1461049c578063f2fde38b146104cc5761018c565b8063c647b20e146103f8578063c6a3064714610414578063c816841b146104305761018c565b806370a0823114610336578063715018a6146103665780638da5cb5b1461037057806395d89b411461038e578063a9059cbb146103ac578063beabacc8146103dc5761018c565b80632431ba7311610149578063337270771161012357806333727077146102c05780634e6fd6c4146102de5780634f7041a5146102fc57806351c6590a1461031a5761018c565b80632431ba73146102685780632e1a7d4d14610286578063313ce567146102a25761018c565b806305bf0a541461019057806306fdde03146101ae578063095ea7b3146101cc57806315291cd4146101fc57806318160ddd1461021a57806323b872dd14610238575b5f5ffd5b6101986104e8565b6040516101a591906116e4565b60405180910390f35b6101b66104ee565b6040516101c3919061176d565b60405180910390f35b6101e660048036038101906101e19190611815565b61057e565b6040516101f3919061186d565b60405180910390f35b6102046105a0565b60405161021191906116e4565b60405180910390f35b6102226105a6565b60405161022f91906116e4565b60405180910390f35b610252600480360381019061024d9190611886565b6105af565b60405161025f919061186d565b60405180910390f35b6102706105dd565b60405161027d9190611931565b60405180910390f35b6102a0600480360381019061029b919061194a565b610602565b005b6102aa6106fc565b6040516102b79190611990565b60405180910390f35b6102c8610704565b6040516102d591906116e4565b60405180910390f35b6102e661070a565b6040516102f391906119b8565b60405180910390f35b610304610710565b60405161031191906116e4565b60405180910390f35b610334600480360381019061032f919061194a565b610716565b005b610350600480360381019061034b91906119d1565b61086f565b60405161035d91906116e4565b60405180910390f35b61036e6108b4565b005b6103786108c7565b60405161038591906119b8565b60405180910390f35b6103966108ef565b6040516103a3919061176d565b60405180910390f35b6103c660048036038101906103c19190611815565b61097f565b6040516103d3919061186d565b60405180910390f35b6103f660048036038101906103f19190611886565b6109a1565b005b610412600480360381019061040d91906119fc565b610d5f565b005b61042e60048036038101906104299190611a64565b610dc1565b005b610438610e21565b60405161044591906119b8565b60405180910390f35b610468600480360381019061046391906119d1565b610e46565b604051610475919061186d565b60405180910390f35b610486610e63565b60405161049391906116e4565b60405180910390f35b6104b660048036038101906104b19190611aa2565b610e69565b6040516104c391906116e4565b60405180910390f35b6104e660048036038101906104e191906119d1565b610eeb565b005b60095481565b6060600380546104fd90611b0d565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611b0d565b80156105745780601f1061054b57610100808354040283529160200191610574565b820191905f5260205f20905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b5f5f610588610f6f565b9050610595818585610f76565b600191505092915050565b60085481565b5f600254905090565b5f5f6105b9610f6f565b90506105c6858285610f88565b6105d185858561101b565b60019150509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060a61110b565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361066f576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156106a9576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506106b56108c7565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106f7573d5f5f3e3d5ffd5b505050565b5f6012905090565b600a5481565b61dead81565b60065481565b61071e61110b565b5f8111610757576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078330600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610f76565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6107cd6108c7565b426040518863ffffffff1660e01b81526004016107ef96959493929190611b76565b60606040518083038185885af115801561080b573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906108309190611be9565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8147604051610864929190611c39565b60405180910390a150565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108bc61110b565b6108c55f611192565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108fe90611b0d565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611b0d565b80156109755780601f1061094c57610100808354040283529160200191610975565b820191905f5260205f20905b81548152906001019060200180831161095857829003601f168201915b5050505050905090565b5f5f610989610f6f565b905061099681858561101b565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a06576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6b576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610b065750600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610b1b57610b1683838361101b565b610d5a565b5f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610be957606460065485610bd89190611c8d565b610be29190611cfb565b9050610c0d565b8115610c0c57606460075485610bff9190611c8d565b610c099190611cfb565b90505b5b5f8185610c1a9190611d2b565b90508181610c289190611d5e565b8514610c60576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610d4a57610c7387308461101b565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610ca291906116e4565b60405180910390a15f606460085484610cbb9190611c8d565b610cc59190611cfb565b90505f606460095485610cd89190611c8d565b610ce29190611cfb565b90505f818386610cf29190611d2b565b610cfc9190611d2b565b9050610d2a30600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561101b565b610d343083611255565b610d4630610d406108c7565b8361101b565b5050505b610d5587878361101b565b505050505b505050565b610d6761110b565b600a8211158015610d79575060148111155b610daf576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600681905550806007819055505050565b610dc961110b565b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d602052805f5260405f205f915054906101000a900460ff1681565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ef361110b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f63575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f5a91906119b8565b60405180910390fd5b610f6c81611192565b50565b5f33905090565b610f8383838360016112d4565b505050565b5f610f938484610e69565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110155781811015611006578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ffd93929190611d91565b60405180910390fd5b61101484848484035f6112d4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108b575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161108291906119b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110fb575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110f291906119b8565b60405180910390fd5b6111068383836114a3565b505050565b611113610f6f565b73ffffffffffffffffffffffffffffffffffffffff166111316108c7565b73ffffffffffffffffffffffffffffffffffffffff161461119057611154610f6f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161118791906119b8565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112c5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112bc91906119b8565b60405180910390fd5b6112d0825f836114a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611344575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161133b91906119b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113ab91906119b8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561149d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161149491906116e4565b60405180910390a35b50505050565b6114ae8383836114b3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611503578060025f8282546114f79190611d5e565b925050819055506115d1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561158c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161158393929190611d91565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611618578060025f8282540392505081905550611662565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116bf91906116e4565b60405180910390a3505050565b5f819050919050565b6116de816116cc565b82525050565b5f6020820190506116f75f8301846116d5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61173f826116fd565b6117498185611707565b9350611759818560208601611717565b61176281611725565b840191505092915050565b5f6020820190508181035f8301526117858184611735565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117ba82611791565b9050919050565b6117ca816117b0565b81146117d4575f5ffd5b50565b5f813590506117e5816117c1565b92915050565b6117f4816116cc565b81146117fe575f5ffd5b50565b5f8135905061180f816117eb565b92915050565b5f5f6040838503121561182b5761182a61178d565b5b5f611838858286016117d7565b925050602061184985828601611801565b9150509250929050565b5f8115159050919050565b61186781611853565b82525050565b5f6020820190506118805f83018461185e565b92915050565b5f5f5f6060848603121561189d5761189c61178d565b5b5f6118aa868287016117d7565b93505060206118bb868287016117d7565b92505060406118cc86828701611801565b9150509250925092565b5f819050919050565b5f6118f96118f46118ef84611791565b6118d6565b611791565b9050919050565b5f61190a826118df565b9050919050565b5f61191b82611900565b9050919050565b61192b81611911565b82525050565b5f6020820190506119445f830184611922565b92915050565b5f6020828403121561195f5761195e61178d565b5b5f61196c84828501611801565b91505092915050565b5f60ff82169050919050565b61198a81611975565b82525050565b5f6020820190506119a35f830184611981565b92915050565b6119b2816117b0565b82525050565b5f6020820190506119cb5f8301846119a9565b92915050565b5f602082840312156119e6576119e561178d565b5b5f6119f3848285016117d7565b91505092915050565b5f5f60408385031215611a1257611a1161178d565b5b5f611a1f85828601611801565b9250506020611a3085828601611801565b9150509250929050565b611a4381611853565b8114611a4d575f5ffd5b50565b5f81359050611a5e81611a3a565b92915050565b5f5f60408385031215611a7a57611a7961178d565b5b5f611a87858286016117d7565b9250506020611a9885828601611a50565b9150509250929050565b5f5f60408385031215611ab857611ab761178d565b5b5f611ac5858286016117d7565b9250506020611ad6858286016117d7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b2457607f821691505b602082108103611b3757611b36611ae0565b5b50919050565b5f819050919050565b5f611b60611b5b611b5684611b3d565b6118d6565b6116cc565b9050919050565b611b7081611b46565b82525050565b5f60c082019050611b895f8301896119a9565b611b9660208301886116d5565b611ba36040830187611b67565b611bb06060830186611b67565b611bbd60808301856119a9565b611bca60a08301846116d5565b979650505050505050565b5f81519050611be3816117eb565b92915050565b5f5f5f60608486031215611c0057611bff61178d565b5b5f611c0d86828701611bd5565b9350506020611c1e86828701611bd5565b9250506040611c2f86828701611bd5565b9150509250925092565b5f604082019050611c4c5f8301856116d5565b611c5960208301846116d5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c97826116cc565b9150611ca2836116cc565b9250828202611cb0816116cc565b91508282048414831517611cc757611cc6611c60565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d05826116cc565b9150611d10836116cc565b925082611d2057611d1f611cce565b5b828204905092915050565b5f611d35826116cc565b9150611d40836116cc565b9250828203905081811115611d5857611d57611c60565b5b92915050565b5f611d68826116cc565b9150611d73836116cc565b9250828201905080821115611d8b57611d8a611c60565b5b92915050565b5f606082019050611da45f8301866119a9565b611db160208301856116d5565b611dbe60408301846116d5565b94935050505056fea26469706673582212209ab067f48bb8ba78f4ec9a3755d5d356ddb4f16e0c80f68484ffb5d65fe12bbb64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC647B20E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC647B20E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x430 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x3DC JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x33727077 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x31A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x8B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x588 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x595 DUP2 DUP6 DUP6 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x5D1 DUP6 DUP6 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60A PUSH2 0x110B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x6B5 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x110B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x783 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x7CD PUSH2 0x8C7 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BC PUSH2 0x110B JUMP JUMPDEST PUSH2 0x8C5 PUSH0 PUSH2 0x1192 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8FE SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92A SWAP1 PUSH2 0x1B0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x975 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x975 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x958 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x989 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP2 DUP6 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB06 JUMPI POP PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB16 DUP4 DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x64 PUSH1 0x6 SLOAD DUP6 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH2 0xC0D JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP6 EQ PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xC73 DUP8 ADDRESS DUP5 PUSH2 0x101B JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA2 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP PUSH2 0xD2A ADDRESS PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xD34 ADDRESS DUP4 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0xD46 ADDRESS PUSH2 0xD40 PUSH2 0x8C7 JUMP JUMPDEST DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0xD55 DUP8 DUP8 DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD67 PUSH2 0x110B JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDC9 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF3 PUSH2 0x110B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF63 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6C DUP2 PUSH2 0x1192 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF83 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP5 DUP5 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1015 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1006 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1106 DUP4 DUP4 DUP4 PUSH2 0x14A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1113 PUSH2 0xF6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1131 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1190 JUMPI PUSH2 0x1154 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D0 DUP3 PUSH0 DUP4 PUSH2 0x14A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1344 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x149D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1494 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x14AE DUP4 DUP4 DUP4 PUSH2 0x14B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1503 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15D1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x158C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1583 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1618 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1662 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16BF SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP PUSH2 0x1759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x1762 DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1785 DUP2 DUP5 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BA DUP3 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CA DUP2 PUSH2 0x17B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E5 DUP2 PUSH2 0x17C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18AA DUP7 DUP3 DUP8 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F9 PUSH2 0x18F4 PUSH2 0x18EF DUP5 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190A DUP3 PUSH2 0x18DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x1900 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1911 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1944 PUSH0 DUP4 ADD DUP5 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198A DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B2 DUP2 PUSH2 0x17B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CB PUSH0 DUP4 ADD DUP5 PUSH2 0x19A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F3 DUP5 DUP3 DUP6 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A43 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5E DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A87 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD6 DUP6 DUP3 DUP7 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B24 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 PUSH2 0x1B5B PUSH2 0x1B56 DUP5 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x16CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP10 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1BA3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1BB0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1BBD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1BCA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BE3 DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C00 JUMPI PUSH2 0x1BFF PUSH2 0x178D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0D DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C1E DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2F DUP7 DUP3 DUP8 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CB0 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D05 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D10 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1CCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D35 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D68 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D73 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DA4 PUSH0 DUP4 ADD DUP7 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1DB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1DBE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xB0 PUSH8 0xF48BB8BA78F4EC9A CALLDATACOPY SSTORE 0xD5 0xD3 JUMP 0xDD 0xB4 CALL PUSH15 0xC80F68484FFB5D65FE12BBB64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "348:4008:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;645:34:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;763:39:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3711:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:32:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;842:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;579:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3205:496;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1611:1423:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4152:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4013:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;809:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;932:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;611:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;686:29:9;;;;:::o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;645:34:9:-;;;;:::o;2849:97:5:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;763:39:9:-;;;;;;;;;;;;;:::o;3711:294::-;1531:13:3;:11;:13::i;:::-;3805:1:9::1;3783:24;;:10;:24;;::::0;3775:51:::1;;;;;;;;;;;;;;;;;3855:21;3845:6;:31;;3837:61;;;;;;;;;;;;;;;;;3911:15;3929:21;3911:39;;3971:7;:5;:7::i;:::-;3963:25;;:34;3989:7;3963:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3764:241;3711:294:::0;:::o;2707:82:5:-;2756:5;2780:2;2773:9;;2707:82;:::o;722:32:9:-;;;;:::o;842:81::-;881:42;842:81;:::o;579:25::-;;;;:::o;3205:496::-;1531:13:3;:11;:13::i;:::-;3300:1:9::1;3286:11;:15;3278:53;;;;;;;;;;;;;;;;;3344:60;3361:4;3376:13;;;;;;;;;;;3392:11;3344:8;:60::i;:::-;3417:13;;;;;;;;;;;:29;;;3454:21;3499:4;3519:11;3545:1;3561;3577:7;:5;:7::i;:::-;3599:15;3417:208;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3643:50;3658:11;3671:21;3643:50;;;;;;;:::i;:::-;;;;;;;;3205:496:::0;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1611:1423:9:-;1725:1;1707:20;;:6;:20;;;1699:49;;;;;;;;;;;;;;;;;1788:1;1767:23;;:9;:23;;;1759:50;;;;;;;;;;;;;;;;;1826:17;:25;1844:6;1826:25;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;1855:17;:28;1873:9;1855:28;;;;;;;;;;;;;;;;;;;;;;;;;1826:57;1822:153;;;1900:42;1916:6;1924:9;1935:6;1900:15;:42::i;:::-;1957:7;;1822:153;1987:10;2013:11;;;;;;;;;;;2000:24;;:9;:24;;;1987:37;;2035:11;2059;;;;;;;;;;;2049:21;;:6;:21;;;2035:35;;2083:17;2114:5;2111:151;;;2168:3;2158:6;;2149;:15;;;;:::i;:::-;2148:23;;;;:::i;:::-;2136:35;;2111:151;;;2191:6;2188:74;;;2247:3;2236:7;;2227:6;:16;;;;:::i;:::-;2226:24;;;;:::i;:::-;2214:36;;2188:74;2111:151;2274:17;2303:9;2294:6;:18;;;;:::i;:::-;2274:38;;2353:9;2341;:21;;;;:::i;:::-;2331:6;:31;2323:59;;;;;;;;;;;;;;;;;2411:1;2399:9;:13;2395:574;;;2429:49;2445:6;2461:4;2468:9;2429:15;:49::i;:::-;2498:23;2511:9;2498:23;;;;;;:::i;:::-;;;;;;;;2538;2595:3;2577:14;;2565:9;:26;;;;:::i;:::-;2564:34;;;;:::i;:::-;2538:60;;2613:18;2660:3;2647:9;;2635;:21;;;;:::i;:::-;2634:29;;;;:::i;:::-;2613:50;;2678:21;2732:10;2714:15;2702:9;:27;;;;:::i;:::-;:40;;;;:::i;:::-;2678:64;;2759:60;2783:4;2790:11;;;;;;;;;;;2803:15;2759;:60::i;:::-;2848:38;2868:4;2875:10;2848:11;:38::i;:::-;2903:54;2927:4;2934:7;:5;:7::i;:::-;2943:13;2903:15;:54::i;:::-;2414:555;;;2395:574;2981:45;2997:6;3005:9;3016;2981:15;:45::i;:::-;1688:1346;;;;1611:1423;;;;:::o;4152:201::-;1531:13:3;:11;:13::i;:::-;4254:2:9::1;4243:7;:13;;:31;;;;;4272:2;4260:8;:14;;4243:31;4235:54;;;;;;;;;;;;;;;;;4309:7;4300:6;:16;;;;4337:8;4327:7;:18;;;;4152:201:::0;;:::o;4013:131::-;1531:13:3;:11;:13::i;:::-;4128:8:9::1;4099:17;:26;4117:7;4099:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4013:131:::0;;:::o;809:26::-;;;;;;;;;;;;;:::o;932:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;611:27::-;;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:3:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7984:206:5:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3042:153:9:-;3147:40;3161:6;3169:9;3180:6;3147:13;:40::i;:::-;3042:153;;;:::o;6008:1107:5:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:60::-;4344:3;4365:5;4358:12;;4316:60;;;:::o;4382:142::-;4432:9;4465:53;4483:34;4492:24;4510:5;4492:24;:::i;:::-;4483:34;:::i;:::-;4465:53;:::i;:::-;4452:66;;4382:142;;;:::o;4530:126::-;4580:9;4613:37;4644:5;4613:37;:::i;:::-;4600:50;;4530:126;;;:::o;4662:152::-;4738:9;4771:37;4802:5;4771:37;:::i;:::-;4758:50;;4662:152;;;:::o;4820:183::-;4933:63;4990:5;4933:63;:::i;:::-;4928:3;4921:76;4820:183;;:::o;5009:274::-;5128:4;5166:2;5155:9;5151:18;5143:26;;5179:97;5273:1;5262:9;5258:17;5249:6;5179:97;:::i;:::-;5009:274;;;;:::o;5289:329::-;5348:6;5397:2;5385:9;5376:7;5372:23;5368:32;5365:119;;;5403:79;;:::i;:::-;5365:119;5523:1;5548:53;5593:7;5584:6;5573:9;5569:22;5548:53;:::i;:::-;5538:63;;5494:117;5289:329;;;;:::o;5624:86::-;5659:7;5699:4;5692:5;5688:16;5677:27;;5624:86;;;:::o;5716:112::-;5799:22;5815:5;5799:22;:::i;:::-;5794:3;5787:35;5716:112;;:::o;5834:214::-;5923:4;5961:2;5950:9;5946:18;5938:26;;5974:67;6038:1;6027:9;6023:17;6014:6;5974:67;:::i;:::-;5834:214;;;;:::o;6054:118::-;6141:24;6159:5;6141:24;:::i;:::-;6136:3;6129:37;6054:118;;:::o;6178:222::-;6271:4;6309:2;6298:9;6294:18;6286:26;;6322:71;6390:1;6379:9;6375:17;6366:6;6322:71;:::i;:::-;6178:222;;;;:::o;6406:329::-;6465:6;6514:2;6502:9;6493:7;6489:23;6485:32;6482:119;;;6520:79;;:::i;:::-;6482:119;6640:1;6665:53;6710:7;6701:6;6690:9;6686:22;6665:53;:::i;:::-;6655:63;;6611:117;6406:329;;;;:::o;6741:474::-;6809:6;6817;6866:2;6854:9;6845:7;6841:23;6837:32;6834:119;;;6872:79;;:::i;:::-;6834:119;6992:1;7017:53;7062:7;7053:6;7042:9;7038:22;7017:53;:::i;:::-;7007:63;;6963:117;7119:2;7145:53;7190:7;7181:6;7170:9;7166:22;7145:53;:::i;:::-;7135:63;;7090:118;6741:474;;;;;:::o;7221:116::-;7291:21;7306:5;7291:21;:::i;:::-;7284:5;7281:32;7271:60;;7327:1;7324;7317:12;7271:60;7221:116;:::o;7343:133::-;7386:5;7424:6;7411:20;7402:29;;7440:30;7464:5;7440:30;:::i;:::-;7343:133;;;;:::o;7482:468::-;7547:6;7555;7604:2;7592:9;7583:7;7579:23;7575:32;7572:119;;;7610:79;;:::i;:::-;7572:119;7730:1;7755:53;7800:7;7791:6;7780:9;7776:22;7755:53;:::i;:::-;7745:63;;7701:117;7857:2;7883:50;7925:7;7916:6;7905:9;7901:22;7883:50;:::i;:::-;7873:60;;7828:115;7482:468;;;;;:::o;7956:474::-;8024:6;8032;8081:2;8069:9;8060:7;8056:23;8052:32;8049:119;;;8087:79;;:::i;:::-;8049:119;8207:1;8232:53;8277:7;8268:6;8257:9;8253:22;8232:53;:::i;:::-;8222:63;;8178:117;8334:2;8360:53;8405:7;8396:6;8385:9;8381:22;8360:53;:::i;:::-;8350:63;;8305:118;7956:474;;;;;:::o;8436:180::-;8484:77;8481:1;8474:88;8581:4;8578:1;8571:15;8605:4;8602:1;8595:15;8622:320;8666:6;8703:1;8697:4;8693:12;8683:22;;8750:1;8744:4;8740:12;8771:18;8761:81;;8827:4;8819:6;8815:17;8805:27;;8761:81;8889:2;8881:6;8878:14;8858:18;8855:38;8852:84;;8908:18;;:::i;:::-;8852:84;8673:269;8622:320;;;:::o;8948:85::-;8993:7;9022:5;9011:16;;8948:85;;;:::o;9039:158::-;9097:9;9130:61;9148:42;9157:32;9183:5;9157:32;:::i;:::-;9148:42;:::i;:::-;9130:61;:::i;:::-;9117:74;;9039:158;;;:::o;9203:147::-;9298:45;9337:5;9298:45;:::i;:::-;9293:3;9286:58;9203:147;;:::o;9356:807::-;9605:4;9643:3;9632:9;9628:19;9620:27;;9657:71;9725:1;9714:9;9710:17;9701:6;9657:71;:::i;:::-;9738:72;9806:2;9795:9;9791:18;9782:6;9738:72;:::i;:::-;9820:80;9896:2;9885:9;9881:18;9872:6;9820:80;:::i;:::-;9910;9986:2;9975:9;9971:18;9962:6;9910:80;:::i;:::-;10000:73;10068:3;10057:9;10053:19;10044:6;10000:73;:::i;:::-;10083;10151:3;10140:9;10136:19;10127:6;10083:73;:::i;:::-;9356:807;;;;;;;;;:::o;10169:143::-;10226:5;10257:6;10251:13;10242:22;;10273:33;10300:5;10273:33;:::i;:::-;10169:143;;;;:::o;10318:663::-;10406:6;10414;10422;10471:2;10459:9;10450:7;10446:23;10442:32;10439:119;;;10477:79;;:::i;:::-;10439:119;10597:1;10622:64;10678:7;10669:6;10658:9;10654:22;10622:64;:::i;:::-;10612:74;;10568:128;10735:2;10761:64;10817:7;10808:6;10797:9;10793:22;10761:64;:::i;:::-;10751:74;;10706:129;10874:2;10900:64;10956:7;10947:6;10936:9;10932:22;10900:64;:::i;:::-;10890:74;;10845:129;10318:663;;;;;:::o;10987:332::-;11108:4;11146:2;11135:9;11131:18;11123:26;;11159:71;11227:1;11216:9;11212:17;11203:6;11159:71;:::i;:::-;11240:72;11308:2;11297:9;11293:18;11284:6;11240:72;:::i;:::-;10987:332;;;;;:::o;11325:180::-;11373:77;11370:1;11363:88;11470:4;11467:1;11460:15;11494:4;11491:1;11484:15;11511:410;11551:7;11574:20;11592:1;11574:20;:::i;:::-;11569:25;;11608:20;11626:1;11608:20;:::i;:::-;11603:25;;11663:1;11660;11656:9;11685:30;11703:11;11685:30;:::i;:::-;11674:41;;11864:1;11855:7;11851:15;11848:1;11845:22;11825:1;11818:9;11798:83;11775:139;;11894:18;;:::i;:::-;11775:139;11559:362;11511:410;;;;:::o;11927:180::-;11975:77;11972:1;11965:88;12072:4;12069:1;12062:15;12096:4;12093:1;12086:15;12113:185;12153:1;12170:20;12188:1;12170:20;:::i;:::-;12165:25;;12204:20;12222:1;12204:20;:::i;:::-;12199:25;;12243:1;12233:35;;12248:18;;:::i;:::-;12233:35;12290:1;12287;12283:9;12278:14;;12113:185;;;;:::o;12304:194::-;12344:4;12364:20;12382:1;12364:20;:::i;:::-;12359:25;;12398:20;12416:1;12398:20;:::i;:::-;12393:25;;12442:1;12439;12435:9;12427:17;;12466:1;12460:4;12457:11;12454:37;;;12471:18;;:::i;:::-;12454:37;12304:194;;;;:::o;12504:191::-;12544:3;12563:20;12581:1;12563:20;:::i;:::-;12558:25;;12597:20;12615:1;12597:20;:::i;:::-;12592:25;;12640:1;12637;12633:9;12626:16;;12661:3;12658:1;12655:10;12652:36;;;12668:18;;:::i;:::-;12652:36;12504:191;;;;:::o;12701:442::-;12850:4;12888:2;12877:9;12873:18;12865:26;;12901:71;12969:1;12958:9;12954:17;12945:6;12901:71;:::i;:::-;12982:72;13050:2;13039:9;13035:18;13026:6;12982:72;:::i;:::-;13064;13132:2;13121:9;13117:18;13108:6;13064:72;:::i;:::-;12701:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1535200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD_ADDRESS()": "440",
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burnShare()": "2449",
								"buyTax()": "2514",
								"decimals()": "428",
								"excludeFromTax(address,bool)": "infinite",
								"isExcludedFromTax(address)": "2877",
								"liquidityShare()": "2515",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"rewardsShare()": "2470",
								"sellTax()": "2491",
								"setTaxes(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,address,uint256)": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapPair()": "2597",
								"uniswaprouter()": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 603,
									"end": 604,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 579,
									"end": 604,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 579,
									"end": 604,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 636,
									"end": 638,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 611,
									"end": 638,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 611,
									"end": 638,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 677,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 645,
									"end": 679,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 645,
									"end": 679,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 713,
									"end": 715,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 686,
									"end": 715,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 686,
									"end": 715,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 752,
									"end": 754,
									"name": "PUSH",
									"source": 9,
									"value": "1E"
								},
								{
									"begin": 722,
									"end": 754,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 722,
									"end": 754,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1150,
									"end": 1603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1324,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1295,
									"end": 1300,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1309,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1385,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1350,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1337,
									"end": 1350,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1386,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1429,
									"end": 1442,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1450,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1429,
									"end": 1450,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1450,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C45A0155"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1429,
									"end": 1452,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1452,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1411,
									"end": 1464,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C9C65396"
								},
								{
									"begin": 1473,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1493,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1498,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "AD5C4648"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1480,
									"end": 1500,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1480,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1411,
									"end": 1501,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1411,
									"end": 1501,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1411,
									"end": 1501,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1397,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1514,
									"end": 1531,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1537,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1545,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1591,
									"end": 1595,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1556,
									"end": 1573,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1582,
									"end": 1586,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1595,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3417,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3404,
									"end": 3421,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3398,
									"end": 3422,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3449,
									"end": 3467,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3438,
									"end": 3468,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3471,
									"end": 3550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3642,
									"end": 3649,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3622,
									"end": 3631,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3618,
									"end": 3640,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3576,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3369,
									"end": 3660,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3720,
									"end": 3722,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3709,
									"end": 3718,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3705,
									"end": 3723,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3699,
									"end": 3724,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3749,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3740,
									"end": 3770,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3773,
									"end": 3852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3944,
									"end": 3951,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3924,
									"end": 3933,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3920,
									"end": 3942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3878,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3962,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4001,
									"end": 4003,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4080,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4063,
									"end": 4072,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4059,
									"end": 4081,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4027,
									"end": 4091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3972,
									"end": 4101,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4142,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4166,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4111,
									"end": 4240,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6340,
									"end": 6348,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6340,
									"end": 6348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 9399,
									"end": 9404,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 9381,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9369,
									"end": 9406,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9294,
									"end": 9412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9549,
									"end": 9551,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9538,
									"end": 9547,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9534,
									"end": 9552,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9615,
									"end": 9632,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9606,
									"end": 9612,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 9562,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9418,
									"end": 9640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9716,
									"end": 9722,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9765,
									"end": 9767,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9753,
									"end": 9762,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9744,
									"end": 9751,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9740,
									"end": 9763,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 9736,
									"end": 9768,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 9771,
									"end": 9850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9891,
									"end": 9892,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 9972,
									"end": 9979,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9963,
									"end": 9969,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9952,
									"end": 9961,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9948,
									"end": 9970,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 9916,
									"end": 9980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9906,
									"end": 9980,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9906,
									"end": 9980,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9862,
									"end": 9990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9646,
									"end": 9997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10124,
									"end": 10128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10162,
									"end": 10164,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 10151,
									"end": 10160,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10147,
									"end": 10165,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10139,
									"end": 10165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10139,
									"end": 10165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 10243,
									"end": 10244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10232,
									"end": 10241,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10228,
									"end": 10245,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10219,
									"end": 10225,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 10175,
									"end": 10246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 10324,
									"end": 10326,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10313,
									"end": 10322,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10309,
									"end": 10327,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10300,
									"end": 10306,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 10256,
									"end": 10328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10003,
									"end": 10335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 4356,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ab067f48bb8ba78f4ec9a3755d5d356ddb4f16e0c80f68484ffb5d65fe12bbb64736f6c634300081c0033",
									".code": [
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "C647B20E"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "CB4CA631"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "CB4CA631"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "CC1776D3"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "C647B20E"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "C6A30647"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "C816841B"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "BEABACC8"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "2431BA73"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "33727077"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "33727077"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "4E6FD6C4"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "4F7041A5"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "51C6590A"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "2431BA73"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "5BF0A54"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "15291CD4"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 4356,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 686,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 686,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 645,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 645,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3711,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3711,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 722,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 722,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 722,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 842,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 842,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 579,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 579,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3205,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3205,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1611,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1611,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4152,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4152,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4013,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4013,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 809,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 809,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 932,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 932,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 932,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 611,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 611,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 686,
											"end": 715,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 715,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 686,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 679,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3793,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3807,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3775,
											"end": 3826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3876,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3876,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "356680B700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3837,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3950,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3971,
											"end": 3976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3971,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3971,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3963,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3989,
											"end": 3996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3997,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 4005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 722,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 722,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "DEAD"
										},
										{
											"begin": 842,
											"end": 923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 579,
											"end": 604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3301,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "671D94D800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3278,
											"end": 3331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3361,
											"end": 3365,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3344,
											"end": 3404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3344,
											"end": 3404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F305D719"
										},
										{
											"begin": 3454,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3530,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3577,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3577,
											"end": 3584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3577,
											"end": 3584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3614,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3417,
											"end": 3625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3417,
											"end": 3625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B"
										},
										{
											"begin": 3658,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3692,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3643,
											"end": 3693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3693,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "PUSH",
											"source": 9,
											"value": "F38F85C300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "PUSH",
											"source": 9,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1759,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1872,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1826,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1975,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1822,
											"end": 1975,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1900,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1975,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1822,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 1997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2024,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2149,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2149,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2148,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2227,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2226,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2226,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2111,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2294,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2341,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "1F825C6A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2323,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2412,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2395,
											"end": 2969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2395,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2395,
											"end": 2969,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2477,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2429,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2478,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2429,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "PUSH",
											"source": 9,
											"value": "92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2498,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2598,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2565,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2565,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2564,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2564,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2663,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2635,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2635,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2634,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2634,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2729,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2702,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2702,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2803,
											"end": 2818,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2759,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2819,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2759,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2868,
											"end": 2872,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2848,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2886,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2848,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2934,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2934,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2956,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2903,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2957,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2903,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2395,
											"end": 2969,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2395,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2981,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3026,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2981,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 3034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4243,
											"end": 4250,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4256,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4256,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4260,
											"end": 4268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4274,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4274,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "AF1EE13400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4235,
											"end": 4289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4300,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4327,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4345,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4124,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 809,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 932,
											"end": 981,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 611,
											"end": 638,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 611,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3195,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3042,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3147,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3187,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3147,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4370,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4492,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4483,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4465,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4613,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4814,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4662,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 4802,
											"end": 4807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4771,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5003,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4820,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4933,
											"end": 4996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5179,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5276,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5179,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5385,
											"end": 5394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5383,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5372,
											"end": 5395,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5365,
											"end": 5484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5403,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5484,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5365,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5593,
											"end": 5600,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5548,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5710,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5624,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5704,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5710,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5828,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5716,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5799,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 5964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 5964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6023,
											"end": 6040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6020,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5974,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6041,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5974,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6172,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6054,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6159,
											"end": 6164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6141,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6165,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6141,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 6307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6372,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6322,
											"end": 6393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6489,
											"end": 6512,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6517,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6601,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6482,
											"end": 6601,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6520,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6520,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6599,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6520,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6601,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6482,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6710,
											"end": 6717,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6699,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6665,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6611,
											"end": 6728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6854,
											"end": 6863,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6852,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6864,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6869,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6872,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 6993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7051,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7038,
											"end": 7060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7017,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 7080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7190,
											"end": 7197,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7145,
											"end": 7198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 7215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7306,
											"end": 7311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7291,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7281,
											"end": 7313,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7329,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7221,
											"end": 7337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7464,
											"end": 7469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7440,
											"end": 7470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7470,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7440,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7590,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7602,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7691,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7572,
											"end": 7691,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7610,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7691,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7572,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7800,
											"end": 7807,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7780,
											"end": 7789,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7755,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7808,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7755,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7745,
											"end": 7808,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7745,
											"end": 7808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7883,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7925,
											"end": 7932,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7901,
											"end": 7923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7883,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7883,
											"end": 7933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7883,
											"end": 7933,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7883,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 7933,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 7933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8069,
											"end": 8078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8079,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8084,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8168,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8049,
											"end": 8168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8087,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8087,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8166,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8087,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8168,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8049,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8277,
											"end": 8284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8232,
											"end": 8285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8285,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8334,
											"end": 8336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8405,
											"end": 8412,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8385,
											"end": 8394,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8360,
											"end": 8413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8360,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8436,
											"end": 8616,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8436,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8561,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8474,
											"end": 8562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8581,
											"end": 8585,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8578,
											"end": 8579,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8571,
											"end": 8586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8602,
											"end": 8603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8610,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8942,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 8622,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8697,
											"end": 8701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 8705,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8751,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8744,
											"end": 8748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8752,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 8761,
											"end": 8842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8819,
											"end": 8825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8815,
											"end": 8832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8842,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 8761,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 8891,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8881,
											"end": 8887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8892,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8858,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8893,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 8852,
											"end": 8936,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 8908,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8908,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8926,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 8908,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8936,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 8852,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 8948,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9022,
											"end": 9027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9033,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9197,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9039,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9148,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9157,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9183,
											"end": 9188,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9157,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9189,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9157,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 9148,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9190,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9148,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9130,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9203,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9337,
											"end": 9342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9298,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9343,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9298,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9646,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 9725,
											"end": 9726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9710,
											"end": 9727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9657,
											"end": 9728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9806,
											"end": 9808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9782,
											"end": 9788,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 9738,
											"end": 9810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9820,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9900,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9820,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9910,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9986,
											"end": 9988,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9910,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9910,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9910,
											"end": 9990,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9910,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10068,
											"end": 10071,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10057,
											"end": 10066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 10000,
											"end": 10073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10073,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10000,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10083,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10151,
											"end": 10154,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10140,
											"end": 10149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10127,
											"end": 10133,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10083,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 10083,
											"end": 10156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10083,
											"end": 10156,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10083,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 10163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10251,
											"end": 10264,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10300,
											"end": 10305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 10273,
											"end": 10306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10306,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10273,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10450,
											"end": 10457,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10469,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10442,
											"end": 10474,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10558,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 10439,
											"end": 10558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10477,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 10477,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10556,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10477,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10558,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 10439,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10597,
											"end": 10598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10622,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10678,
											"end": 10685,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10669,
											"end": 10675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10667,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10622,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10686,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10622,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10568,
											"end": 10696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10761,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10817,
											"end": 10824,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10806,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10793,
											"end": 10815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10761,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10825,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10761,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10825,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10900,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 10956,
											"end": 10963,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10947,
											"end": 10953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 10954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10900,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10900,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10900,
											"end": 10964,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 10900,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10964,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11227,
											"end": 11228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 11159,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11230,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11159,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11308,
											"end": 11310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11293,
											"end": 11311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 11240,
											"end": 11312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11312,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11240,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11325,
											"end": 11505,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11325,
											"end": 11505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11373,
											"end": 11450,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11370,
											"end": 11371,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11467,
											"end": 11468,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11460,
											"end": 11475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11498,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11491,
											"end": 11492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11484,
											"end": 11499,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11551,
											"end": 11558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 11592,
											"end": 11593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11574,
											"end": 11594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11569,
											"end": 11594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11569,
											"end": 11594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11626,
											"end": 11627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11608,
											"end": 11628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11628,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11608,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11656,
											"end": 11665,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11685,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11703,
											"end": 11714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11685,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11685,
											"end": 11715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11685,
											"end": 11715,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11685,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11674,
											"end": 11715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11674,
											"end": 11715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11851,
											"end": 11866,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 11867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11825,
											"end": 11826,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11881,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11775,
											"end": 11914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 11894,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11894,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 11912,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 11894,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11914,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11775,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11927,
											"end": 12107,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 11927,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12052,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 12053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12072,
											"end": 12076,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12069,
											"end": 12070,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12062,
											"end": 12077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12100,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12101,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 12188,
											"end": 12189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12170,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12222,
											"end": 12223,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12204,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12199,
											"end": 12224,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12199,
											"end": 12224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12233,
											"end": 12268,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12248,
											"end": 12266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12268,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12233,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12292,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12344,
											"end": 12348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12364,
											"end": 12384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 12416,
											"end": 12417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12398,
											"end": 12418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12418,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 12398,
											"end": 12418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12393,
											"end": 12418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12393,
											"end": 12418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12439,
											"end": 12440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12444,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12457,
											"end": 12468,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 12454,
											"end": 12491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12471,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12491,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 12454,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12581,
											"end": 12582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12563,
											"end": 12583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12558,
											"end": 12583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12558,
											"end": 12583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12597,
											"end": 12617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12617,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12597,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12592,
											"end": 12617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12592,
											"end": 12617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12640,
											"end": 12641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12637,
											"end": 12638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12626,
											"end": 12642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12626,
											"end": 12642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12658,
											"end": 12659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12655,
											"end": 12665,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 12652,
											"end": 12688,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12668,
											"end": 12686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12688,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 12652,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12890,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12877,
											"end": 12886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 12891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 12891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 12969,
											"end": 12970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 12967,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12954,
											"end": 12971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 12951,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 12901,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12972,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 12901,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 13050,
											"end": 13052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13039,
											"end": 13048,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13026,
											"end": 13032,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12982,
											"end": 13054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13054,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 12982,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13064,
											"end": 13136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13136,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13064,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 13143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
								".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/mem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEAD_ADDRESS()": "4e6fd6c4",
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnShare()": "05bf0a54",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"excludeFromTax(address,bool)": "c6a30647",
							"isExcludedFromTax(address)": "cb4ca631",
							"liquidityShare()": "15291cd4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardsShare()": "33727077",
							"sellTax()": "cc1776d3",
							"setTaxes(uint256,uint256)": "c647b20e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"uniswaprouter()": "2431ba73",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArithmeticError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TaxTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAmountMustBePositive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TaxCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswaprouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mem.sol\":\"MemCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mem.sol\":{\"keccak256\":\"0xb9d18491c9264d311ee34fddb76f370fafc272c9afc8e2d000e24ade21c569bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40874fefbbd4ea745fd54d014f0b0feec62d76880b5f4c15db0c713c7d2a8f8\",\"dweb:/ipfs/QmXTVXFjsmftCbzKP26ne2eirNdhwWPycMazF4HaL6ZjBB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 766,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 772,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 774,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 776,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 778,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 467,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1417,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "buyTax",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1420,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "sellTax",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1423,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "liquidityShare",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1426,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "burnShare",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1429,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "rewardsShare",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "uniswaprouter",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IUniswapV2Router02)458"
							},
							{
								"astId": 1434,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1441,
								"contract": "contracts/mem.sol:MemCoin",
								"label": "isExcludedFromTax",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)458": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> .deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> .deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> .deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							62
						]
					},
					"id": 63,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "36:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 11,
									"name": "PairCreated",
									"nameLocation": "66:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "94:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "78:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "102:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "134:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "126:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77:68:0"
									},
									"src": "60:86:0"
								},
								{
									"functionSelector": "017e7e58",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "161:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:0"
									},
									"scope": 62,
									"src": "152:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "215:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:0"
									},
									"scope": 62,
									"src": "206:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "276:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "292:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "308:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "300:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:32:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "347:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "339:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:14:0"
									},
									"scope": 62,
									"src": "267:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "367:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:6:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:14:0"
									},
									"scope": 62,
									"src": "358:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "433:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "473:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:6:0"
									},
									"scope": 62,
									"src": "424:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "494:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "513:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "529:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "521:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:32:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "563:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:14:0"
									},
									"scope": 62,
									"src": "485:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "584:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:0"
									},
									"scope": 62,
									"src": "575:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "625:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:0"
									},
									"scope": 62,
									"src": "616:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "26:634:0",
							"usedErrors": [],
							"usedEvents": [
								11
							]
						}
					],
					"src": "0:661:0"
				},
				"id": 0
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							370
						]
					},
					"id": 371,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "103:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:1"
									},
									"scope": 370,
									"src": "61:51:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "156:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:1"
									},
									"scope": 370,
									"src": "117:48:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "202:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "250:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "279:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "333:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "358:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "378:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "416:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "430:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "444:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:1"
									},
									"scope": 370,
									"src": "171:289:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "499:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "522:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "555:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "584:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "611:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "631:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "677:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "711:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:1"
									},
									"scope": 370,
									"src": "465:262:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "790:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "814:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "838:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "863:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "888:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "908:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "946:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "960:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:1"
									},
									"scope": 370,
									"src": "732:242:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1039:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1063:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1092:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1119:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1139:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1177:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1195:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:1"
									},
									"scope": 370,
									"src": "979:232:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1260:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1284:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1332:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1382:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1402:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1425:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1442:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 177,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1451:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1462:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1496:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1510:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:1"
									},
									"scope": 370,
									"src": "1216:308:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1576:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1599:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1623:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1652:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1679:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1699:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1739:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1748:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1759:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1793:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1811:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:1"
									},
									"scope": 370,
									"src": "1529:298:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1875:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1898:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1925:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 221,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 222,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1958:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1978:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2016:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 229,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:1"
									},
									"scope": 370,
									"src": "1832:207:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2087:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2111:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2137:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 238,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 239,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2170:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2190:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2228:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 246,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 247,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:1"
									},
									"scope": 370,
									"src": "2044:207:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2287:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2306:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 253,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 254,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2331:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2408:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:1"
									},
									"scope": 370,
									"src": "2256:175:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2483:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2501:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 270,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 271,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2526:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2538:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2587:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 278,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 279,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:1"
									},
									"scope": 370,
									"src": "2436:174:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2646:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2661:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2680:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2705:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2766:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 295,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 296,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:1"
									},
									"scope": 370,
									"src": "2615:174:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2825:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2841:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2878:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2943:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 310,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 311,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:1"
									},
									"scope": 370,
									"src": "2794:172:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2987:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3001:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:1"
									},
									"scope": 370,
									"src": "2972:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3095:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3126:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3166:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:1"
									},
									"scope": 370,
									"src": "3073:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3208:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3224:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3240:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3280:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:1"
									},
									"scope": 370,
									"src": "3187:108:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3323:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3338:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 350,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 351,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3386:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 354,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 355,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:1"
									},
									"scope": 370,
									"src": "3300:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3436:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3452:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 361,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 362,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3500:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:1"
									},
									"scope": 370,
									"src": "3414:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 371,
							"src": "26:3499:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:1"
				},
				"id": 1
			},
			".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							370
						],
						"IUniswapV2Router02": [
							458
						]
					},
					"id": 459,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 371,
							"src": "26:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 374,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"94:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 370,
										"src": "94:18:2"
									},
									"id": 375,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:2"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 458,
							"linearizedBaseContracts": [
								458,
								370
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "185:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "208:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "232:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "261:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "288:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "308:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "346:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:2"
									},
									"scope": 458,
									"src": "119:243:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "443:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "466:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "490:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "519:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "546:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "589:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "606:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 407,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "615:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "626:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 411,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "660:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:2"
									},
									"scope": 458,
									"src": "367:309:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "754:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "777:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "804:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 422,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 423,
													"nodeType": "ArrayTypeName",
													"src": "804:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "837:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "857:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:2"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:2"
									},
									"scope": 458,
									"src": "682:204:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "960:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "987:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 434,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 435,
													"nodeType": "ArrayTypeName",
													"src": "987:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1040:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:2"
									},
									"scope": 458,
									"src": "891:186:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1151:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1174:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1201:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 448,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 449,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1234:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1254:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:2"
									},
									"scope": 458,
									"src": "1082:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 459,
							"src": "62:1223:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1286:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1392
						],
						"Ownable": [
							606
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 1393,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 461,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1392,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 464,
										"name": "Context",
										"nameLocations": [
											"692:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "692:7:3"
									},
									"id": 465,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 463,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 606,
							"linearizedBaseContracts": [
								606,
								1392
							],
							"name": "Ownable",
							"nameLocation": "681:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 467,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 606,
									"src": "706:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 466,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 472,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:3"
									},
									"src": "825:50:3"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 477,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:3"
									},
									"src": "968:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 483,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1042:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1073:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:3"
									},
									"src": "1015:84:3"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1259:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1273:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 490,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "1269:95:3",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "1301:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 496,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 495,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "1322:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 501,
															"nodeType": "RevertStatement",
															"src": "1315:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1392:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 504,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "1373:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1237:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:3"
									},
									"scope": 606,
									"src": "1225:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "1521:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 512,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "1531:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:3"
											},
											{
												"id": 515,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:3"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 517,
									"name": "onlyOwner",
									"nameLocation": "1509:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:3"
									},
									"src": "1500:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "1693:30:3",
										"statements": [
											{
												"expression": {
													"id": 523,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 467,
													"src": "1710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 522,
												"id": 524,
												"nodeType": "Return",
												"src": "1703:13:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:3"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "1684:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:3"
									},
									"scope": 606,
									"src": "1638:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1841:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 530,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "1855:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 532,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "1866:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "1851:101:3",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "1880:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 536,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "1928:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "1901:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "1894:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:3"
									},
									"scope": 606,
									"src": "1796:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2347:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 549,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2357:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 546,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "2337:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:3"
									},
									"scope": 606,
									"src": "2293:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2627:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "2623:91:3",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "2651:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "2672:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "2665:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "2742:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 580,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2723:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:3"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 562,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "2603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2570:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:3"
									},
									"scope": 606,
									"src": "2543:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "2975:124:3",
										"statements": [
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "2985:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"id": 593,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 467,
													"src": "3004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:3"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "3020:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 596,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "3073:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3083:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 599,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3052:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "EmitStatement",
												"src": "3047:45:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:3"
									},
									"scope": 606,
									"src": "2912:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 607,
							"src": "663:2438:3",
							"usedErrors": [
								472,
								477
							],
							"usedEvents": [
								483
							]
						}
					],
					"src": "102:3000:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							743
						],
						"IERC20Errors": [
							648
						],
						"IERC721Errors": [
							696
						]
					},
					"id": 744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 618,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 623,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 628,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 637,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 642,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 647,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 744,
							"src": "280:1764:4",
							"usedErrors": [
								618,
								623,
								628,
								637,
								642,
								647
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 654,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 659,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 668,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 673,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 678,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 685,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 690,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 695,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 744,
							"src": "2190:2092:4",
							"usedErrors": [
								654,
								659,
								668,
								673,
								678,
								685,
								690,
								695
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 697,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 743,
							"linearizedBaseContracts": [
								743
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 708,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 713,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 718,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 725,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 730,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 735,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 742,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 744,
							"src": "4430:2107:4",
							"usedErrors": [
								708,
								713,
								718,
								725,
								730,
								735,
								742
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1392
						],
						"ERC20": [
							1258
						],
						"IERC20": [
							1336
						],
						"IERC20Errors": [
							648
						],
						"IERC20Metadata": [
							1362
						]
					},
					"id": 1259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1337,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 746,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1363,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 748,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1362,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1393,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1392,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 744,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 648,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 755,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "1133:7:5"
									},
									"id": 756,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 757,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "1142:6:5"
									},
									"id": 758,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 759,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1362,
										"src": "1150:14:5"
									},
									"id": 760,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 761,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "1166:12:5"
									},
									"id": 762,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 754,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1258,
							"linearizedBaseContracts": [
								1258,
								648,
								1362,
								1336,
								1392
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 766,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 765,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 763,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 764,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 772,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 771,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 767,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 770,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 768,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 769,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 774,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 776,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 775,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 778,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 777,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 786,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 787,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 791,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 795,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 1258,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 801,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 776,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 800,
												"id": 802,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 1258,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 810,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 778,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 809,
												"id": 811,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1258,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1361
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 818,
												"id": 820,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 816,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 1258,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1285
									],
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 828,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 774,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 827,
												"id": 829,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 1258,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 839,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 841,
													"indexExpression": {
														"id": 840,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 838,
												"id": 842,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 1258,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 854,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 856,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 853,
												"id": 866,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 1258,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 878,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 882,
													"indexExpression": {
														"id": 881,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 877,
												"id": 883,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 1258,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 895,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 897,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 901,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1149,
															1209
														],
														"referencedDeclaration": 1149,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 894,
												"id": 907,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 1258,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 923,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 920,
												"id": 939,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 1258,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 952,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 958,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 957,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 963,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 967,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 972,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 1258,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																1010
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1010,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1035,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1009,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1014,
															"initialValue": {
																"baseExpression": {
																	"id": 1011,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1013,
																"indexExpression": {
																	"id": 1012,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1015,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1025,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 1024,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1019,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1020,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1010,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1021,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1018,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1023,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 1034,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1026,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1028,
																			"indexExpression": {
																				"id": 1027,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1029,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1030,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1033,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1004,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1007,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1038,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 1055,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1049,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1051,
																			"indexExpression": {
																				"id": 1050,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1054,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 1048,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 1047,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1043,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1044,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1046,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1059,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 1258,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1073,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1074,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1080,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1079,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1085,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1088,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 1258,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1123,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 1258,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1141,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1149,
															1209
														],
														"referencedDeclaration": 1209,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 1258,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1162,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1167,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1173,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1176,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1183,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1182,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1188,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1191,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1194,
															"indexExpression": {
																"id": 1192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1195,
														"indexExpression": {
															"id": 1193,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 1199,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1158,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1201,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1202,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1203,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1200,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1205,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 1258,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "10504:387:5",
										"statements": [
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1256,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"arguments": [
														{
															"id": 1222,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1221,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1226,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1228,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1227,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1255,
												"nodeType": "IfStatement",
												"src": "10576:309:5",
												"trueBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "10618:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "10636:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "10655:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1243,
															"nodeType": "IfStatement",
															"src": "10632:130:5",
															"trueBody": {
																"id": 1242,
																"nodeType": "Block",
																"src": "10662:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1237,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1214,
																					"src": "10714:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1238,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "10723:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1239,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "10741:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1236,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "10687:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1241,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:5"
																	}
																]
															}
														},
														{
															"id": 1253,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1245,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1212,
																				"src": "10812:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1246,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1214,
																				"src": "10819:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1247,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "10828:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1248,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "10847:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1244,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1149,
																				1209
																			],
																			"referencedDeclaration": 1209,
																			"src": "10803:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1252,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 1258,
									"src": "10415:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1259,
							"src": "1106:9787:5",
							"usedErrors": [
								618,
								623,
								628,
								637,
								642,
								647
							],
							"usedEvents": [
								1270,
								1279
							]
						}
					],
					"src": "105:10789:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1336
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1336,
							"linearizedBaseContracts": [
								1336
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1270,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1279,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 1336,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 1336,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 1336,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 1336,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 1336,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 1336,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1337,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1270,
								1279
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1336
						],
						"IERC20Metadata": [
							1362
						]
					},
					"id": 1363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1363,
							"sourceUnit": 1337,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1339,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1342,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "306:6:7"
									},
									"id": 1343,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1341,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1362,
							"linearizedBaseContracts": [
								1362,
								1336
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1362,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1362,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1362,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1363,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1270,
								1279
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1365,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1370,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1372,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1392,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1379,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1381,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1392,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1387,
												"id": 1389,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1392,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1393,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"contracts/mem.sol": {
				"ast": {
					"absolutePath": "contracts/mem.sol",
					"exportedSymbols": {
						"Context": [
							1392
						],
						"ERC20": [
							1258
						],
						"IERC20": [
							1336
						],
						"IERC20Errors": [
							648
						],
						"IERC20Metadata": [
							1362
						],
						"IUniswapV2Factory": [
							62
						],
						"IUniswapV2Router01": [
							370
						],
						"IUniswapV2Router02": [
							458
						],
						"MemCoin": [
							1880
						],
						"Ownable": [
							606
						]
					},
					"id": 1881,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1881,
							"sourceUnit": 1259,
							"src": "61:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1881,
							"sourceUnit": 607,
							"src": "118:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "../.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"id": 1397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1881,
							"sourceUnit": 63,
							"src": "172:82:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "../.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1881,
							"sourceUnit": 459,
							"src": "256:88:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1399,
										"name": "ERC20",
										"nameLocations": [
											"368:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1258,
										"src": "368:5:9"
									},
									"id": 1400,
									"nodeType": "InheritanceSpecifier",
									"src": "368:5:9"
								},
								{
									"baseName": {
										"id": 1401,
										"name": "Ownable",
										"nameLocations": [
											"375:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 606,
										"src": "375:7:9"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "375:7:9"
								}
							],
							"canonicalName": "MemCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1880,
							"linearizedBaseContracts": [
								1880,
								606,
								1258,
								648,
								1362,
								1336,
								1392
							],
							"name": "MemCoin",
							"nameLocation": "357:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f38f85c3",
									"id": 1404,
									"name": "TransferFromZero",
									"nameLocation": "396:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:9"
									},
									"src": "390:25:9"
								},
								{
									"errorSelector": "a38ca3d9",
									"id": 1406,
									"name": "TransferToZero",
									"nameLocation": "427:14:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:9"
									},
									"src": "421:23:9"
								},
								{
									"errorSelector": "1f825c6a",
									"id": 1408,
									"name": "ArithmeticError",
									"nameLocation": "456:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:9"
									},
									"src": "450:24:9"
								},
								{
									"errorSelector": "671d94d8",
									"id": 1410,
									"name": "TokenAmountMustBePositive",
									"nameLocation": "486:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:9"
									},
									"src": "480:34:9"
								},
								{
									"errorSelector": "af1ee134",
									"id": 1412,
									"name": "TaxTooHigh",
									"nameLocation": "526:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:2:9"
									},
									"src": "520:19:9"
								},
								{
									"errorSelector": "356680b7",
									"id": 1414,
									"name": "InsufficientFunds",
									"nameLocation": "551:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:9"
									},
									"src": "545:26:9"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1417,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "594:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "579:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "603:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1420,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "626:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "611:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "636:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15291cd4",
									"id": 1423,
									"mutability": "mutable",
									"name": "liquidityShare",
									"nameLocation": "660:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "645:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "677:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05bf0a54",
									"id": 1426,
									"mutability": "mutable",
									"name": "burnShare",
									"nameLocation": "701:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "686:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1425,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "713:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33727077",
									"id": 1429,
									"mutability": "mutable",
									"name": "rewardsShare",
									"nameLocation": "737:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "722:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1427,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "752:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2431ba73",
									"id": 1432,
									"mutability": "mutable",
									"name": "uniswaprouter",
									"nameLocation": "789:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "763:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1431,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1430,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"763:18:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 458,
											"src": "763:18:9"
										},
										"referencedDeclaration": 458,
										"src": "763:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1434,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "824:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "809:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1433,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4e6fd6c4",
									"id": 1437,
									"mutability": "constant",
									"name": "DEAD_ADDRESS",
									"nameLocation": "866:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "842:81:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1435,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1436,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "881:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb4ca631",
									"id": 1441,
									"mutability": "mutable",
									"name": "isExcludedFromTax",
									"nameLocation": "964:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1880,
									"src": "932:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1440,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1438,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "940:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "932:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1439,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "951:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6",
									"id": 1445,
									"name": "TaxCollected",
									"nameLocation": "996:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1017:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1009:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:16:9"
									},
									"src": "990:35:9"
								},
								{
									"anonymous": false,
									"eventSelector": "38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b",
									"id": 1451,
									"name": "LiquidityAdded",
									"nameLocation": "1037:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1060:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1052:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "1076:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1068:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:29:9"
									},
									"src": "1031:50:9"
								},
								{
									"anonymous": false,
									"eventSelector": "3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273",
									"id": 1457,
									"name": "TokensMinted",
									"nameLocation": "1093:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1122:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1106:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1134:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1126:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:36:9"
									},
									"src": "1087:55:9"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1326:277:9",
										"statements": [
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1475,
														"name": "uniswaprouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "1337:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1477,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "1372:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1476,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "1353:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$458_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1353:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "1337:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "1337:49:9"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1481,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "1397:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1490,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1473:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$1880",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$1880",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1465:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1488,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1465:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1465:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1492,
																		"name": "uniswaprouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "1480:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1494:4:9",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 74,
																	"src": "1480:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1480:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1483,
																				"name": "uniswaprouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "1429:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1443:7:9",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 69,
																			"src": "1429:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1429:23:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1482,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1411:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$62_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1411:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$62",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1454:10:9",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "1411:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1411:90:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1397:104:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "1397:104:9"
											},
											{
												"expression": {
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1498,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1514:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1500,
														"indexExpression": {
															"id": 1499,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "1532:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1514:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1541:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1514:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "1514:31:9"
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1504,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1556:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1509,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1507,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1582:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1574:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1574:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1574:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1556:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1591:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1556:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "1556:39:9"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1468,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1459,
													"src": "1295:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1469,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1461,
													"src": "1302:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1470,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1467,
												"name": "ERC20",
												"nameLocations": [
													"1289:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1258,
												"src": "1289:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1289:21:9"
										},
										{
											"arguments": [
												{
													"id": 1472,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1465,
													"src": "1319:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1473,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1471,
												"name": "Ownable",
												"nameLocations": [
													"1311:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 606,
												"src": "1311:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1311:14:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1186:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1172:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1172:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1217:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1203:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1203:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "1244:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1236:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1276:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1268:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:127:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:0:9"
									},
									"scope": 1880,
									"src": "1150:453:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "1688:1346:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "1707:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1725:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1717:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1525,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1717:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1717:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1707:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1530,
																"name": "TransferFromZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "1729:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1729:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1699:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "1699:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1535,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "1767:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1780:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1536,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1780:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1780:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1767:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1541,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1792:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1792:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "1759:50:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1545,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1826:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1547,
														"indexExpression": {
															"id": 1546,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "1844:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1826:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1548,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1855:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1550,
														"indexExpression": {
															"id": 1549,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "1873:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1855:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1826:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "1822:153:9",
												"trueBody": {
													"id": 1561,
													"nodeType": "Block",
													"src": "1885:90:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1555,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "1916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1556,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "1924:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1557,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "1935:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1900:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1906:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 988,
																	"src": "1900:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1900:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "1900:42:9"
														},
														{
															"functionReturnParameters": 1522,
															"id": 1560,
															"nodeType": "Return",
															"src": "1957:7:9"
														}
													]
												}
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "1992:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "1987:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1563,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1987:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1565,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "2000:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1566,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2013:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2000:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1987:37:9"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "2040:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "2035:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1569,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2035:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "2049:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1572,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2059:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2049:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2035:35:9"
											},
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "2091:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "2083:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2083:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"nodeType": "VariableDeclarationStatement",
												"src": "2083:17:9"
											},
											{
												"condition": {
													"id": 1578,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1564,
													"src": "2114:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1589,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "2191:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1600,
													"nodeType": "IfStatement",
													"src": "2188:74:9",
													"trueBody": {
														"id": 1599,
														"nodeType": "Block",
														"src": "2199:63:9",
														"statements": [
															{
																"expression": {
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1590,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "2214:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1591,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1520,
																						"src": "2227:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1592,
																						"name": "sellTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "2236:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2227:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1594,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2226:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2247:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "2226:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1598,
																"nodeType": "ExpressionStatement",
																"src": "2214:36:9"
															}
														]
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2111:151:9",
												"trueBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "2121:62:9",
													"statements": [
														{
															"expression": {
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1579,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "2136:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1580,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1520,
																					"src": "2149:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1581,
																					"name": "buyTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1417,
																					"src": "2158:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2149:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1583,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2148:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2168:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2148:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2136:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "2136:35:9"
														}
													]
												}
											},
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "2282:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "2274:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2274:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1607,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1604,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2294:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1605,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "2303:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2294:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2274:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1609,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "2331:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "netAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "2341:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1611,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "2353:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2341:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2331:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1614,
																"name": "ArithmeticError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "2364:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2364:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2323:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "2323:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1618,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "2399:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2411:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2399:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1696,
												"nodeType": "IfStatement",
												"src": "2395:574:9",
												"trueBody": {
													"id": 1695,
													"nodeType": "Block",
													"src": "2414:555:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1624,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "2445:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1627,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2461:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2453:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1625,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2453:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2453:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1629,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "2468:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1621,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2429:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2435:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 988,
																	"src": "2429:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2429:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "2429:49:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "2511:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1632,
																	"name": "TaxCollected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "2498:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2498:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1635,
															"nodeType": "EmitStatement",
															"src": "2493:28:9"
														},
														{
															"assignments": [
																1637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1637,
																	"mutability": "mutable",
																	"name": "liquidityTokens",
																	"nameLocation": "2546:15:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1695,
																	"src": "2538:23:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2538:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1644,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1638,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1576,
																				"src": "2565:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1639,
																				"name": "liquidityShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "2577:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2565:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1641,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2564:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2564:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2538:60:9"
														},
														{
															"assignments": [
																1646
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1646,
																	"mutability": "mutable",
																	"name": "burnTokens",
																	"nameLocation": "2621:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1695,
																	"src": "2613:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2613:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1653,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1647,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1576,
																				"src": "2635:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1648,
																				"name": "burnShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "2647:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2635:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1650,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2634:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2660:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2634:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2613:50:9"
														},
														{
															"assignments": [
																1655
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1655,
																	"mutability": "mutable",
																	"name": "rewardsTokens",
																	"nameLocation": "2686:13:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1695,
																	"src": "2678:21:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1654,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2678:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1661,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1656,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "2702:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1657,
																		"name": "liquidityTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "2714:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2702:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1659,
																	"name": "burnTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "2732:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2702:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2678:64:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1667,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2783:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2775:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1665,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2775:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2775:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1669,
																		"name": "uniswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "2790:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1670,
																		"name": "liquidityTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "2803:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1662,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2759:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2765:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 988,
																	"src": "2759:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2759:60:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "2759:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1678,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2868:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2860:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1676,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2860:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2860:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1680,
																		"name": "burnTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "2875:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1673,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2848:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2854:5:9",
																	"memberName": "_burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "2848:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2848:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1682,
															"nodeType": "ExpressionStatement",
															"src": "2848:38:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1688,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2927:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$1880",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2919:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2919:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2919:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1690,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "2934:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2934:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1692,
																		"name": "rewardsTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "2943:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1683,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2903:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:9:9",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 988,
																	"src": "2903:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2903:54:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "2903:54:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1700,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "2997:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1701,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3005:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1702,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "3016:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1697,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2981:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																"typeString": "type(contract super MemCoin)"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2987:9:9",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 988,
														"src": "2981:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2981:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "2981:45:9"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1620:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1637:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1629:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1653:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1645:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1672:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1664:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:51:9"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1688:0:9"
									},
									"scope": 1880,
									"src": "1611:1423:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "3136:59:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1719,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "3161:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1720,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3169:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "3180:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1716,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3147:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemCoin_$1880_$",
																"typeString": "type(contract super MemCoin)"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3153:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3147:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3147:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "3147:40:9"
											}
										]
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3051:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3127:8:9"
									},
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3067:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3059:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3083:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3075:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3102:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3094:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3058:51:9"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3136:0:9"
									},
									"scope": 1880,
									"src": "3042:153:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "3267:434:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "3286:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3300:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3286:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1736,
																"name": "TokenAmountMustBePositive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3303:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3303:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3278:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3278:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "3278:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1743,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3361:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3353:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3353:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3353:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1747,
																	"name": "uniswaprouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "3376:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3368:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1745,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3368:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3368:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1749,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "3392:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1740,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1149,
															1209
														],
														"referencedDeclaration": 1149,
														"src": "3344:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "3344:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1763,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3499:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$1880",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3491:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1761,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3491:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3491:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "3519:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3545:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1768,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "3577:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3577:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1770,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3599:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3605:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3599:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1752,
																"name": "uniswaprouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "3417:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$458",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3431:15:9",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 120,
															"src": "3417:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1757,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3462:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$1880",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$1880",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3454:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1755,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3454:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3454:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3468:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3454:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3417:59:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:208:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "3417:208:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1775,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "3658:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1778,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3679:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$1880",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$1880",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3671:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3671:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3671:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3685:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3671:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1774,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3643:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "EmitStatement",
												"src": "3638:55:9"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1730,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1729,
												"name": "onlyOwner",
												"nameLocations": [
													"3257:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "3257:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3257:9:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3214:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "3235:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "3227:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:21:9"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3267:0:9"
									},
									"scope": 1880,
									"src": "3205:496:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "3764:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1792,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3783:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3787:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3783:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3805:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3797:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1794,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3797:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3797:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3783:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1799,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "3809:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3809:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3775:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3775:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "3775:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "3845:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1807,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3863:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$1880",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$1880",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3855:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3855:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3855:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3869:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3855:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3845:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1811,
																"name": "InsufficientFunds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "3878:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3878:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3837:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "3837:61:9"
											},
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3919:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "3911:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3911:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1819,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3937:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemCoin_$1880",
																	"typeString": "contract MemCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemCoin_$1880",
																	"typeString": "contract MemCoin"
																}
															],
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3929:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1817,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3929:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3929:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3943:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3929:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3911:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1829,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "3989:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1825,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "3971:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3971:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3963:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1823,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3963:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3963:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3980:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3963:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3963:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "3963:34:9"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1788,
												"name": "onlyOwner",
												"nameLocations": [
													"3754:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "3754:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3754:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "3720:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3737:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "3729:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3728:16:9"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3764:0:9"
									},
									"scope": 1880,
									"src": "3711:294:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "4088:56:9",
										"statements": [
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1842,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "4099:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1844,
														"indexExpression": {
															"id": 1843,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "4117:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4099:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1845,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "4128:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4099:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "4099:37:9"
											}
										]
									},
									"functionSelector": "c6a30647",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1840,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1839,
												"name": "onlyOwner",
												"nameLocations": [
													"4078:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "4078:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4078:9:9"
										}
									],
									"name": "excludeFromTax",
									"nameLocation": "4022:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4045:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4037:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4037:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "4059:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4054:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4054:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4036:32:9"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4088:0:9"
									},
									"scope": 1880,
									"src": "4013:131:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "4224:129:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1859,
																	"name": "_buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "4243:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4254:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "4243:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1862,
																	"name": "_sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "4260:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4272:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "4260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4243:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1866,
																"name": "TaxTooHigh",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4276:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4276:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4235:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4235:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "4235:54:9"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1870,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "4300:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1871,
														"name": "_buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "4309:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4300:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "4300:16:9"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1874,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "4327:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1875,
														"name": "_sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "4337:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4327:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "4327:18:9"
											}
										]
									},
									"functionSelector": "c647b20e",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1855,
												"name": "onlyOwner",
												"nameLocations": [
													"4214:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "4214:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4214:9:9"
										}
									],
									"name": "setTaxes",
									"nameLocation": "4161:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "_buyTax",
												"nameLocation": "4178:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4170:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4170:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "_sellTax",
												"nameLocation": "4195:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4187:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4169:35:9"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4224:0:9"
									},
									"scope": 1880,
									"src": "4152:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1881,
							"src": "348:4008:9",
							"usedErrors": [
								472,
								477,
								618,
								623,
								628,
								637,
								642,
								647,
								1404,
								1406,
								1408,
								1410,
								1412,
								1414
							],
							"usedEvents": [
								483,
								1270,
								1279,
								1445,
								1451,
								1457
							]
						}
					],
					"src": "33:4323:9"
				},
				"id": 9
			}
		}
	}
}