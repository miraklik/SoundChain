{
	"id": "613d96b3461e72e9e42e4191169da1a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart-contract/contracts/mem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"../.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"../.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\n\r\ncontract MemCoin is ERC20, Ownable, ReentrancyGuard, Pausable {\r\n    error TransferFromZero();\r\n    error TransferToZero();\r\n    error ArithmeticError();\r\n    error TokenAmountMustBePositive();\r\n    error TaxTooHigh();\r\n    error InsufficientFunds();\r\n\r\n    uint256 public buyTax = 5;\r\n    uint256 public sellTax = 10;\r\n    uint256 public liquidityShare = 50;\r\n    uint256 public burnShare = 20;\r\n    uint256 public rewardsShare = 30;\r\n\r\n    IUniswapV2Router02 public uniswaprouter;\r\n    address public uniswapPair;\r\n    address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    mapping(address => bool) public isExcludedFromTax;\r\n\r\n    event TaxCollected(uint256 amount);\r\n    event LiquidityAdded(uint256 tokens, uint256 eth);\r\n    event TokensMinted(address indexed to, uint256 amount);\r\n\r\n    constructor(\r\n        string memory _name, \r\n        string memory _symbol, \r\n        address routerAddress,\r\n        address owner\r\n    ) ERC20(_name, _symbol) Ownable(owner) {\r\n        uniswaprouter = IUniswapV2Router02(routerAddress);\r\n        uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH());\r\n\r\n        isExcludedFromTax[owner] = true;\r\n        isExcludedFromTax[address(this)] = true;\r\n    }\r\n\r\n    function transfer(address sender, address recipient, uint256 amount) external{\r\n        require(sender != address(0), TransferFromZero());\r\n        require(recipient != address(0), TransferToZero());\r\n\r\n        if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {\r\n            super._transfer(sender, recipient, amount);\r\n            return;\r\n        }\r\n\r\n        bool isBuy = recipient == uniswapPair;\r\n        bool isSell = sender == uniswapPair;\r\n\r\n        uint256 taxAmount;\r\n        if(isBuy) {\r\n            taxAmount = (amount * buyTax) / 100;\r\n        }else if(isSell) {\r\n            taxAmount = (amount * sellTax) / 100;\r\n        }\r\n\r\n        uint256 netAmount = amount - taxAmount;\r\n        require(amount == netAmount + taxAmount, ArithmeticError());\r\n\r\n        if (taxAmount > 0) {\r\n            super._transfer(sender, address(this), taxAmount);\r\n            emit TaxCollected(taxAmount);\r\n\r\n            uint256 liquidityTokens = (taxAmount * liquidityShare) / 100;\r\n            uint256 burnTokens = (taxAmount * burnShare) / 100;\r\n            uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens;\r\n\r\n            super._transfer(address(this), uniswapPair, liquidityTokens);\r\n            \r\n            super._burn(address(this), burnTokens);\r\n\r\n            super._transfer(address(this), owner(), rewardsTokens);\r\n        }\r\n\r\n        super._transfer(sender, recipient, netAmount);\r\n    }\r\n\r\n    function _update(address sender, address recipient, uint256 amount) internal virtual override {\r\n        super._update(sender, recipient, amount);\r\n    }\r\n\r\n\r\n    function addLiquidity(uint256 tokenAmount) external onlyOwner nonReentrant {\r\n        require(tokenAmount > 0, TokenAmountMustBePositive());\r\n\r\n        _approve(address(this), address(uniswaprouter), tokenAmount);\r\n\r\n        uniswaprouter.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            tokenAmount,\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n\r\n        emit LiquidityAdded(tokenAmount, address(this).balance);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external onlyOwner nonReentrant {\r\n        require(msg.sender != address(0), TransferToZero());\r\n        require(amount <= address(this).balance, InsufficientFunds());\r\n\r\n        uint256 balance = address(this).balance;\r\n\r\n        payable(owner()).transfer(balance);\r\n    }\r\n\r\n    function excludeFromTax(address account, bool excluded) external onlyOwner {\r\n        isExcludedFromTax[account] = excluded;\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {\r\n        require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh());\r\n        buyTax = _buyTax;\r\n        sellTax = _sellTax;\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();   \r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n}"
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 942,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1061,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contract/contracts/mem.sol": {
				"MemCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ArithmeticError",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientFunds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TaxTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAmountMustBePositive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZero",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TaxCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellTax",
									"type": "uint256"
								}
							],
							"name": "setTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswaprouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smart-contract/contracts/mem.sol\":463:4776  contract MemCoin is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"smart-contract/contracts/mem.sol\":745:746  5 */\n  0x05\n    /* \"smart-contract/contracts/mem.sol\":721:746  uint256 public buyTax = 5 */\n  0x08\n  sstore\n    /* \"smart-contract/contracts/mem.sol\":778:780  10 */\n  0x0a\n    /* \"smart-contract/contracts/mem.sol\":753:780  uint256 public sellTax = 10 */\n  0x09\n  sstore\n    /* \"smart-contract/contracts/mem.sol\":819:821  50 */\n  0x32\n    /* \"smart-contract/contracts/mem.sol\":787:821  uint256 public liquidityShare = 50 */\n  0x0a\n  sstore\n    /* \"smart-contract/contracts/mem.sol\":855:857  20 */\n  0x14\n    /* \"smart-contract/contracts/mem.sol\":828:857  uint256 public burnShare = 20 */\n  0x0b\n  sstore\n    /* \"smart-contract/contracts/mem.sol\":894:896  30 */\n  0x1e\n    /* \"smart-contract/contracts/mem.sol\":864:896  uint256 public rewardsShare = 30 */\n  0x0c\n  sstore\n    /* \"smart-contract/contracts/mem.sol\":1292:1745  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"smart-contract/contracts/mem.sol\":1461:1466  owner */\n  dup1\n    /* \"smart-contract/contracts/mem.sol\":1437:1442  _name */\n  dup5\n    /* \"smart-contract/contracts/mem.sol\":1444:1451  _symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contract/contracts/mem.sol\":1514:1527  routerAddress */\n  dup2\n    /* \"smart-contract/contracts/mem.sol\":1479:1492  uniswaprouter */\n  0x0d\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1479:1528  uniswaprouter = IUniswapV2Router02(routerAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contract/contracts/mem.sol\":1571:1584  uniswaprouter */\n  0x0d\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"smart-contract/contracts/mem.sol\":1571:1592  uniswaprouter.factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc45a0155\n    /* \"smart-contract/contracts/mem.sol\":1571:1594  uniswaprouter.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"smart-contract/contracts/mem.sol\":1553:1606  IUniswapV2Factory(uniswaprouter.factory()).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"smart-contract/contracts/mem.sol\":1615:1619  this */\n  address\n    /* \"smart-contract/contracts/mem.sol\":1622:1635  uniswaprouter */\n  0x0d\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"smart-contract/contracts/mem.sol\":1622:1640  uniswaprouter.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"smart-contract/contracts/mem.sol\":1622:1642  uniswaprouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_28:\n    /* \"smart-contract/contracts/mem.sol\":1553:1643  IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap3\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_32\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_32:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_33\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_33:\n    /* \"smart-contract/contracts/mem.sol\":1539:1550  uniswapPair */\n  0x0e\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1539:1643  uniswapPair = IUniswapV2Factory(uniswaprouter.factory()).createPair(address(this), uniswaprouter.WETH()) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contract/contracts/mem.sol\":1683:1687  true */\n  0x01\n    /* \"smart-contract/contracts/mem.sol\":1656:1673  isExcludedFromTax */\n  0x0f\n    /* \"smart-contract/contracts/mem.sol\":1656:1680  isExcludedFromTax[owner] */\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1674:1679  owner */\n  dup4\n    /* \"smart-contract/contracts/mem.sol\":1656:1680  isExcludedFromTax[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1656:1687  isExcludedFromTax[owner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contract/contracts/mem.sol\":1733:1737  true */\n  0x01\n    /* \"smart-contract/contracts/mem.sol\":1698:1715  isExcludedFromTax */\n  0x0f\n    /* \"smart-contract/contracts/mem.sol\":1698:1730  isExcludedFromTax[address(this)] */\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1724:1728  this */\n  address\n    /* \"smart-contract/contracts/mem.sol\":1698:1730  isExcludedFromTax[address(this)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"smart-contract/contracts/mem.sol\":1698:1737  isExcludedFromTax[address(this)] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"smart-contract/contracts/mem.sol\":1292:1745  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"smart-contract/contracts/mem.sol\":463:4776  contract MemCoin is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_36:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_38:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_39:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_40:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_41:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_42:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_43:\n    /* \"#utility.yul\":957:984   */\n  tag_82\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_41\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_84\n  tag_42\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1030:1118   */\ntag_83:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_44:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_86\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_87\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_43\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_45:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_90\n  tag_42\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1434:1490   */\ntag_89:\n    /* \"#utility.yul\":1508:1537   */\n  tag_91\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_46:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_47:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_94\n    /* \"#utility.yul\":1885:1934   */\n  tag_95\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_45\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1869:1935   */\n  tag_44\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_97\n  tag_40\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2010:2122   */\ntag_96:\n    /* \"#utility.yul\":2131:2183   */\n  tag_98\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_46\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_48:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_101\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2292:2414   */\ntag_100:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_102\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_47\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_49:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_50:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_105\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_49\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_51:\n    /* \"#utility.yul\":2877:2901   */\n  tag_107\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_50\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_108:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_52:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_110\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_51\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  0x00\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  0x00\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_113\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3239:3359   */\ntag_112:\n    /* \"#utility.yul\":3419:3420   */\n  0x00\n    /* \"#utility.yul\":3408:3417   */\n  dup6\n    /* \"#utility.yul\":3404:3421   */\n  add\n    /* \"#utility.yul\":3398:3422   */\n  mload\n    /* \"#utility.yul\":3449:3467   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3441:3447   */\n  dup2\n    /* \"#utility.yul\":3438:3468   */\n  gt\n    /* \"#utility.yul\":3435:3552   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3471:3550   */\n  tag_115\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3435:3552   */\ntag_114:\n    /* \"#utility.yul\":3576:3650   */\n  tag_116\n    /* \"#utility.yul\":3642:3649   */\n  dup8\n    /* \"#utility.yul\":3633:3639   */\n  dup3\n    /* \"#utility.yul\":3622:3631   */\n  dup9\n    /* \"#utility.yul\":3618:3640   */\n  add\n    /* \"#utility.yul\":3576:3650   */\n  tag_48\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3566:3650   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3660   */\n  pop\n    /* \"#utility.yul\":3720:3722   */\n  0x20\n    /* \"#utility.yul\":3709:3718   */\n  dup6\n    /* \"#utility.yul\":3705:3723   */\n  add\n    /* \"#utility.yul\":3699:3724   */\n  mload\n    /* \"#utility.yul\":3751:3769   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3743:3749   */\n  dup2\n    /* \"#utility.yul\":3740:3770   */\n  gt\n    /* \"#utility.yul\":3737:3854   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3773:3852   */\n  tag_118\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3737:3854   */\ntag_117:\n    /* \"#utility.yul\":3878:3952   */\n  tag_119\n    /* \"#utility.yul\":3944:3951   */\n  dup8\n    /* \"#utility.yul\":3935:3941   */\n  dup3\n    /* \"#utility.yul\":3924:3933   */\n  dup9\n    /* \"#utility.yul\":3920:3942   */\n  add\n    /* \"#utility.yul\":3878:3952   */\n  tag_48\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3868:3952   */\n  swap4\n  pop\n    /* \"#utility.yul\":3670:3962   */\n  pop\n    /* \"#utility.yul\":4001:4003   */\n  0x40\n    /* \"#utility.yul\":4027:4091   */\n  tag_120\n    /* \"#utility.yul\":4083:4090   */\n  dup8\n    /* \"#utility.yul\":4074:4080   */\n  dup3\n    /* \"#utility.yul\":4063:4072   */\n  dup9\n    /* \"#utility.yul\":4059:4081   */\n  add\n    /* \"#utility.yul\":4027:4091   */\n  tag_52\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4017:4091   */\n  swap3\n  pop\n    /* \"#utility.yul\":3972:4101   */\n  pop\n    /* \"#utility.yul\":4140:4142   */\n  0x60\n    /* \"#utility.yul\":4166:4230   */\n  tag_121\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4166:4230   */\n  tag_52\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4156:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":4111:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_53:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_54:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_55:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_125:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_127\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4774:4858   */\ntag_126:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_56:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_57:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_58:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_59:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_132\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_58\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5489:5528   */\n  tag_133\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_58\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_60:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_61:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_62:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_137\n    /* \"#utility.yul\":5878:5912   */\n  tag_138\n    /* \"#utility.yul\":5887:5911   */\n  tag_139\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_60\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5878:5912   */\n  tag_61\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5860:5913   */\n  tag_60\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_63:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_64:\n    /* \"#utility.yul\":6116:6155   */\n  tag_142\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6177:6268   */\n  tag_143\n    /* \"#utility.yul\":6226:6267   */\n  tag_144\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_59\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_65:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6347:6348   */\n  0x00\n    /* \"#utility.yul\":6340:6348   */\n  swap1\n  pop\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_66:\n    /* \"#utility.yul\":6437:6469   */\n  tag_147\n  tag_65\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6478:6543   */\n  tag_148\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_67:\n    /* \"#utility.yul\":6615:6735   */\ntag_150:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_153\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_150)\ntag_152:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_68:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_156\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_56\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6966:6995   */\n  tag_157\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_57\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_158:\n    /* \"#utility.yul\":7193:7273   */\n  tag_159\n    /* \"#utility.yul\":7249:7271   */\n  tag_160\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_57\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_67\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_155:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_69:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_70:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_163\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_69\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_71:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_165\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_70\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_11:\n    /* \"#utility.yul\":8010:8047   */\n  tag_167\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_53\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_169\n  tag_42\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8098:8154   */\ntag_168:\n    /* \"#utility.yul\":8178:8216   */\n  tag_170\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_55\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8263:8330   */\n  tag_171\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_68\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_173\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_174:\n    /* \"#utility.yul\":9204:9271   */\n  tag_175\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_71\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_172)\n    /* \"#utility.yul\":8425:9043   */\ntag_173:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_176\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_56\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_177:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_177)\ntag_179:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_181\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_70\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_180:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_172:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9294:9412   */\ntag_72:\n    /* \"#utility.yul\":9381:9405   */\n  tag_183\n    /* \"#utility.yul\":9399:9404   */\n  dup2\n    /* \"#utility.yul\":9381:9405   */\n  tag_50\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9376:9379   */\n  dup3\n    /* \"#utility.yul\":9369:9406   */\n  mstore\n    /* \"#utility.yul\":9294:9412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9418:9640   */\ntag_16:\n    /* \"#utility.yul\":9511:9515   */\n  0x00\n    /* \"#utility.yul\":9549:9551   */\n  0x20\n    /* \"#utility.yul\":9538:9547   */\n  dup3\n    /* \"#utility.yul\":9534:9552   */\n  add\n    /* \"#utility.yul\":9526:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9562:9633   */\n  tag_185\n    /* \"#utility.yul\":9630:9631   */\n  0x00\n    /* \"#utility.yul\":9619:9628   */\n  dup4\n    /* \"#utility.yul\":9615:9632   */\n  add\n    /* \"#utility.yul\":9606:9612   */\n  dup5\n    /* \"#utility.yul\":9562:9633   */\n  tag_72\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9418:9640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9646:9997   */\ntag_25:\n    /* \"#utility.yul\":9716:9722   */\n  0x00\n    /* \"#utility.yul\":9765:9767   */\n  0x20\n    /* \"#utility.yul\":9753:9762   */\n  dup3\n    /* \"#utility.yul\":9744:9751   */\n  dup5\n    /* \"#utility.yul\":9740:9763   */\n  sub\n    /* \"#utility.yul\":9736:9768   */\n  slt\n    /* \"#utility.yul\":9733:9852   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9771:9850   */\n  tag_188\n  tag_37\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9733:9852   */\ntag_187:\n    /* \"#utility.yul\":9891:9892   */\n  0x00\n    /* \"#utility.yul\":9916:9980   */\n  tag_189\n    /* \"#utility.yul\":9972:9979   */\n  dup5\n    /* \"#utility.yul\":9963:9969   */\n  dup3\n    /* \"#utility.yul\":9952:9961   */\n  dup6\n    /* \"#utility.yul\":9948:9970   */\n  add\n    /* \"#utility.yul\":9916:9980   */\n  tag_52\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9906:9980   */\n  swap2\n  pop\n    /* \"#utility.yul\":9862:9990   */\n  pop\n    /* \"#utility.yul\":9646:9997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10003:10335   */\ntag_30:\n    /* \"#utility.yul\":10124:10128   */\n  0x00\n    /* \"#utility.yul\":10162:10164   */\n  0x40\n    /* \"#utility.yul\":10151:10160   */\n  dup3\n    /* \"#utility.yul\":10147:10165   */\n  add\n    /* \"#utility.yul\":10139:10165   */\n  swap1\n  pop\n    /* \"#utility.yul\":10175:10246   */\n  tag_191\n    /* \"#utility.yul\":10243:10244   */\n  0x00\n    /* \"#utility.yul\":10232:10241   */\n  dup4\n    /* \"#utility.yul\":10228:10245   */\n  add\n    /* \"#utility.yul\":10219:10225   */\n  dup6\n    /* \"#utility.yul\":10175:10246   */\n  tag_72\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":10256:10328   */\n  tag_192\n    /* \"#utility.yul\":10324:10326   */\n  0x20\n    /* \"#utility.yul\":10313:10322   */\n  dup4\n    /* \"#utility.yul\":10309:10327   */\n  add\n    /* \"#utility.yul\":10300:10306   */\n  dup5\n    /* \"#utility.yul\":10256:10328   */\n  tag_72\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":10003:10335   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"smart-contract/contracts/mem.sol\":463:4776  contract MemCoin is ERC20, Ownable, ReentrancyGuard, Pausable {... */\ntag_34:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contract/contracts/mem.sol\":463:4776  contract MemCoin is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xbeabacc8\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xcb4ca631\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xcb4ca631\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xbeabacc8\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc647b20e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc6a30647\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8456cb59\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e6fd6c4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x33727077\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x15291cd4\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x15291cd4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2431ba73\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x05bf0a54\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"smart-contract/contracts/mem.sol\":828:857  uint256 public burnShare = 20 */\n    tag_3:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":787:821  uint256 public liquidityShare = 50 */\n    tag_6:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":905:944  IUniswapV2Router02 public uniswaprouter */\n    tag_9:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":3864:4171  function withdraw(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_10:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":864:896  uint256 public rewardsShare = 30 */\n    tag_12:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":4706:4773  function unpause() external onlyOwner {... */\n    tag_13:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":4318:4415  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_14:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":984:1065  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":721:746  uint256 public buyTax = 5 */\n    tag_16:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":3347:3856  function addLiquidity(uint256 tokenAmount) external onlyOwner nonReentrant {... */\n    tag_17:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":4632:4698  function pause() external onlyOwner {... */\n    tag_21:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":1753:3176  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_25:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":4423:4624  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_26:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":4179:4310  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_27:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":951:977  address public uniswapPair */\n    tag_28:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":1074:1123  mapping(address => bool) public isExcludedFromTax */\n    tag_29:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/contracts/mem.sol\":753:780  uint256 public sellTax = 10 */\n    tag_30:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      stop\n        /* \"smart-contract/contracts/mem.sol\":828:857  uint256 public burnShare = 20 */\n    tag_41:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_151\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_150)\n    tag_151:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_152:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":787:821  uint256 public liquidityShare = 50 */\n    tag_55:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":905:944  IUniswapV2Router02 public uniswaprouter */\n    tag_66:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":3864:4171  function withdraw(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_169:\n        /* \"smart-contract/contracts/mem.sol\":3971:3972  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":3949:3973  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":3949:3959  msg.sender */\n      caller\n        /* \"smart-contract/contracts/mem.sol\":3949:3973  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"smart-contract/contracts/mem.sol\":3941:3992  require(msg.sender != address(0), TransferToZero()) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"smart-contract/contracts/mem.sol\":4021:4042  address(this).balance */\n      selfbalance\n        /* \"smart-contract/contracts/mem.sol\":4011:4017  amount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":4011:4042  amount <= address(this).balance */\n      gt\n      iszero\n        /* \"smart-contract/contracts/mem.sol\":4003:4064  require(amount <= address(this).balance, InsufficientFunds()) */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x356680b700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"smart-contract/contracts/mem.sol\":4077:4092  uint256 balance */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":4095:4116  address(this).balance */\n      selfbalance\n        /* \"smart-contract/contracts/mem.sol\":4077:4116  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":4137:4144  owner() */\n      tag_174\n        /* \"smart-contract/contracts/mem.sol\":4137:4142  owner */\n      tag_108\n        /* \"smart-contract/contracts/mem.sol\":4137:4144  owner() */\n      jump\t// in\n    tag_174:\n        /* \"smart-contract/contracts/mem.sol\":4129:4154  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":4129:4163  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"smart-contract/contracts/mem.sol\":4155:4162  balance */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":4129:4163  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n        /* \"smart-contract/contracts/mem.sol\":3930:4171  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_177:\n        /* \"smart-contract/contracts/mem.sol\":3864:4171  function withdraw(uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":864:896  uint256 public rewardsShare = 30 */\n    tag_78:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":4706:4773  function unpause() external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"smart-contract/contracts/mem.sol\":4755:4765  _unpause() */\n      tag_183\n        /* \"smart-contract/contracts/mem.sol\":4755:4763  _unpause */\n      tag_184\n        /* \"smart-contract/contracts/mem.sol\":4755:4765  _unpause() */\n      jump\t// in\n    tag_183:\n        /* \"smart-contract/contracts/mem.sol\":4706:4773  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":4318:4415  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"smart-contract/contracts/mem.sol\":4390:4407  _mint(to, amount) */\n      tag_188\n        /* \"smart-contract/contracts/mem.sol\":4396:4398  to */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":4400:4406  amount */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":4390:4395  _mint */\n      tag_189\n        /* \"smart-contract/contracts/mem.sol\":4390:4407  _mint(to, amount) */\n      jump\t// in\n    tag_188:\n        /* \"smart-contract/contracts/mem.sol\":4318:4415  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":984:1065  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_86:\n        /* \"smart-contract/contracts/mem.sol\":1023:1065  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"smart-contract/contracts/mem.sol\":984:1065  address public constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":721:746  uint256 public buyTax = 5 */\n    tag_90:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":3347:3856  function addLiquidity(uint256 tokenAmount) external onlyOwner nonReentrant {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_193:\n        /* \"smart-contract/contracts/mem.sol\":3455:3456  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":3441:3452  tokenAmount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":3441:3456  tokenAmount > 0 */\n      gt\n        /* \"smart-contract/contracts/mem.sol\":3433:3486  require(tokenAmount > 0, TokenAmountMustBePositive()) */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x671d94d800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"smart-contract/contracts/mem.sol\":3499:3559  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      tag_196\n        /* \"smart-contract/contracts/mem.sol\":3516:3520  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":3531:3544  uniswaprouter */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":3547:3558  tokenAmount */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3499:3507  _approve */\n      tag_157\n        /* \"smart-contract/contracts/mem.sol\":3499:3559  _approve(address(this), address(uniswaprouter), tokenAmount) */\n      jump\t// in\n    tag_196:\n        /* \"smart-contract/contracts/mem.sol\":3572:3585  uniswaprouter */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":3572:3601  uniswaprouter.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"smart-contract/contracts/mem.sol\":3609:3630  address(this).balance */\n      selfbalance\n        /* \"smart-contract/contracts/mem.sol\":3654:3658  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":3674:3685  tokenAmount */\n      dup5\n        /* \"smart-contract/contracts/mem.sol\":3700:3701  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":3716:3717  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":3732:3739  owner() */\n      tag_197\n        /* \"smart-contract/contracts/mem.sol\":3732:3737  owner */\n      tag_108\n        /* \"smart-contract/contracts/mem.sol\":3732:3739  owner() */\n      jump\t// in\n    tag_197:\n        /* \"smart-contract/contracts/mem.sol\":3754:3769  block.timestamp */\n      timestamp\n        /* \"smart-contract/contracts/mem.sol\":3572:3780  uniswaprouter.addLiquidityETH{value: address(this).balance}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      pop\n      pop\n      pop\n        /* \"smart-contract/contracts/mem.sol\":3798:3848  LiquidityAdded(tokenAmount, address(this).balance) */\n      0x38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b\n        /* \"smart-contract/contracts/mem.sol\":3813:3824  tokenAmount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":3826:3847  address(this).balance */\n      selfbalance\n        /* \"smart-contract/contracts/mem.sol\":3798:3848  LiquidityAdded(tokenAmount, address(this).balance) */\n      mload(0x40)\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_206:\n        /* \"smart-contract/contracts/mem.sol\":3347:3856  function addLiquidity(uint256 tokenAmount) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":4632:4698  function pause() external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"smart-contract/contracts/mem.sol\":4679:4687  _pause() */\n      tag_217\n        /* \"smart-contract/contracts/mem.sol\":4679:4685  _pause */\n      tag_218\n        /* \"smart-contract/contracts/mem.sol\":4679:4687  _pause() */\n      jump\t// in\n    tag_217:\n        /* \"smart-contract/contracts/mem.sol\":4632:4698  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_148\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_148\n      jump\t// in\n    tag_222:\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_224\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_223)\n    tag_224:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":1753:3176  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_119:\n        /* \"smart-contract/contracts/mem.sol\":1867:1868  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":1849:1869  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":1849:1855  sender */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":1849:1869  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"smart-contract/contracts/mem.sol\":1841:1890  require(sender != address(0), TransferFromZero()) */\n      tag_230\n      jumpi\n      mload(0x40)\n      0xf38f85c300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"smart-contract/contracts/mem.sol\":1930:1931  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":1909:1932  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":1909:1918  recipient */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":1909:1932  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"smart-contract/contracts/mem.sol\":1901:1951  require(recipient != address(0), TransferToZero()) */\n      tag_231\n      jumpi\n      mload(0x40)\n      0xa38ca3d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"smart-contract/contracts/mem.sol\":1968:1985  isExcludedFromTax */\n      0x0f\n        /* \"smart-contract/contracts/mem.sol\":1968:1993  isExcludedFromTax[sender] */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":1986:1992  sender */\n      dup5\n        /* \"smart-contract/contracts/mem.sol\":1968:1993  isExcludedFromTax[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contract/contracts/mem.sol\":1968:2025  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n      dup1\n      tag_232\n      jumpi\n      pop\n        /* \"smart-contract/contracts/mem.sol\":1997:2014  isExcludedFromTax */\n      0x0f\n        /* \"smart-contract/contracts/mem.sol\":1997:2025  isExcludedFromTax[recipient] */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2015:2024  recipient */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":1997:2025  isExcludedFromTax[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contract/contracts/mem.sol\":1968:2025  isExcludedFromTax[sender] || isExcludedFromTax[recipient] */\n    tag_232:\n        /* \"smart-contract/contracts/mem.sol\":1964:2117  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"smart-contract/contracts/mem.sol\":2042:2084  super._transfer(sender, recipient, amount) */\n      tag_234\n        /* \"smart-contract/contracts/mem.sol\":2058:2064  sender */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2066:2075  recipient */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2077:2083  amount */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2042:2057  super._transfer */\n      tag_164\n        /* \"smart-contract/contracts/mem.sol\":2042:2084  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_234:\n        /* \"smart-contract/contracts/mem.sol\":2099:2106  return; */\n      jump(tag_229)\n        /* \"smart-contract/contracts/mem.sol\":1964:2117  if (isExcludedFromTax[sender] || isExcludedFromTax[recipient]) {... */\n    tag_233:\n        /* \"smart-contract/contracts/mem.sol\":2129:2139  bool isBuy */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2155:2166  uniswapPair */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":2142:2166  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":2142:2151  recipient */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2142:2166  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contract/contracts/mem.sol\":2129:2166  bool isBuy = recipient == uniswapPair */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2177:2188  bool isSell */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2201:2212  uniswapPair */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":2191:2212  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":2191:2197  sender */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2191:2212  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contract/contracts/mem.sol\":2177:2212  bool isSell = sender == uniswapPair */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2225:2242  uint256 taxAmount */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2256:2261  isBuy */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":2253:2404  if(isBuy) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"smart-contract/contracts/mem.sol\":2310:2313  100 */\n      0x64\n        /* \"smart-contract/contracts/mem.sol\":2300:2306  buyTax */\n      sload(0x08)\n        /* \"smart-contract/contracts/mem.sol\":2291:2297  amount */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2291:2306  amount * buyTax */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"smart-contract/contracts/mem.sol\":2290:2313  (amount * buyTax) / 100 */\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"smart-contract/contracts/mem.sol\":2278:2313  taxAmount = (amount * buyTax) / 100 */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2253:2404  if(isBuy) {... */\n      jump(tag_240)\n    tag_235:\n        /* \"smart-contract/contracts/mem.sol\":2333:2339  isSell */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":2330:2404  if(isSell) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"smart-contract/contracts/mem.sol\":2389:2392  100 */\n      0x64\n        /* \"smart-contract/contracts/mem.sol\":2378:2385  sellTax */\n      sload(0x09)\n        /* \"smart-contract/contracts/mem.sol\":2369:2375  amount */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2369:2385  amount * sellTax */\n      tag_242\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_242:\n        /* \"smart-contract/contracts/mem.sol\":2368:2392  (amount * sellTax) / 100 */\n      tag_243\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_243:\n        /* \"smart-contract/contracts/mem.sol\":2356:2392  taxAmount = (amount * sellTax) / 100 */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2330:2404  if(isSell) {... */\n    tag_241:\n        /* \"smart-contract/contracts/mem.sol\":2253:2404  if(isBuy) {... */\n    tag_240:\n        /* \"smart-contract/contracts/mem.sol\":2416:2433  uint256 netAmount */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2445:2454  taxAmount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":2436:2442  amount */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2436:2454  amount - taxAmount */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"smart-contract/contracts/mem.sol\":2416:2454  uint256 netAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2495:2504  taxAmount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":2483:2492  netAmount */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":2483:2504  netAmount + taxAmount */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"smart-contract/contracts/mem.sol\":2473:2479  amount */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2473:2504  amount == netAmount + taxAmount */\n      eq\n        /* \"smart-contract/contracts/mem.sol\":2465:2524  require(amount == netAmount + taxAmount, ArithmeticError()) */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x1f825c6a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"smart-contract/contracts/mem.sol\":2553:2554  0 */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2541:2550  taxAmount */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":2541:2554  taxAmount > 0 */\n      gt\n        /* \"smart-contract/contracts/mem.sol\":2537:3111  if (taxAmount > 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"smart-contract/contracts/mem.sol\":2571:2620  super._transfer(sender, address(this), taxAmount) */\n      tag_250\n        /* \"smart-contract/contracts/mem.sol\":2587:2593  sender */\n      dup8\n        /* \"smart-contract/contracts/mem.sol\":2603:2607  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":2610:2619  taxAmount */\n      dup5\n        /* \"smart-contract/contracts/mem.sol\":2571:2586  super._transfer */\n      tag_164\n        /* \"smart-contract/contracts/mem.sol\":2571:2620  super._transfer(sender, address(this), taxAmount) */\n      jump\t// in\n    tag_250:\n        /* \"smart-contract/contracts/mem.sol\":2640:2663  TaxCollected(taxAmount) */\n      0x092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6\n        /* \"smart-contract/contracts/mem.sol\":2653:2662  taxAmount */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":2640:2663  TaxCollected(taxAmount) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contract/contracts/mem.sol\":2680:2703  uint256 liquidityTokens */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2737:2740  100 */\n      0x64\n        /* \"smart-contract/contracts/mem.sol\":2719:2733  liquidityShare */\n      sload(0x0a)\n        /* \"smart-contract/contracts/mem.sol\":2707:2716  taxAmount */\n      dup5\n        /* \"smart-contract/contracts/mem.sol\":2707:2733  taxAmount * liquidityShare */\n      tag_252\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_252:\n        /* \"smart-contract/contracts/mem.sol\":2706:2740  (taxAmount * liquidityShare) / 100 */\n      tag_253\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_253:\n        /* \"smart-contract/contracts/mem.sol\":2680:2740  uint256 liquidityTokens = (taxAmount * liquidityShare) / 100 */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2755:2773  uint256 burnTokens */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2802:2805  100 */\n      0x64\n        /* \"smart-contract/contracts/mem.sol\":2789:2798  burnShare */\n      sload(0x0b)\n        /* \"smart-contract/contracts/mem.sol\":2777:2786  taxAmount */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2777:2798  taxAmount * burnShare */\n      tag_254\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_254:\n        /* \"smart-contract/contracts/mem.sol\":2776:2805  (taxAmount * burnShare) / 100 */\n      tag_255\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_255:\n        /* \"smart-contract/contracts/mem.sol\":2755:2805  uint256 burnTokens = (taxAmount * burnShare) / 100 */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2820:2841  uint256 rewardsTokens */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":2874:2884  burnTokens */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":2856:2871  liquidityTokens */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2844:2853  taxAmount */\n      dup7\n        /* \"smart-contract/contracts/mem.sol\":2844:2871  taxAmount - liquidityTokens */\n      tag_256\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_256:\n        /* \"smart-contract/contracts/mem.sol\":2844:2884  taxAmount - liquidityTokens - burnTokens */\n      tag_257\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_257:\n        /* \"smart-contract/contracts/mem.sol\":2820:2884  uint256 rewardsTokens = taxAmount - liquidityTokens - burnTokens */\n      swap1\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2901:2961  super._transfer(address(this), uniswapPair, liquidityTokens) */\n      tag_258\n        /* \"smart-contract/contracts/mem.sol\":2925:2929  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":2932:2943  uniswapPair */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contract/contracts/mem.sol\":2945:2960  liquidityTokens */\n      dup6\n        /* \"smart-contract/contracts/mem.sol\":2901:2916  super._transfer */\n      tag_164\n        /* \"smart-contract/contracts/mem.sol\":2901:2961  super._transfer(address(this), uniswapPair, liquidityTokens) */\n      jump\t// in\n    tag_258:\n        /* \"smart-contract/contracts/mem.sol\":2990:3028  super._burn(address(this), burnTokens) */\n      tag_259\n        /* \"smart-contract/contracts/mem.sol\":3010:3014  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":3017:3027  burnTokens */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":2990:3001  super._burn */\n      tag_260\n        /* \"smart-contract/contracts/mem.sol\":2990:3028  super._burn(address(this), burnTokens) */\n      jump\t// in\n    tag_259:\n        /* \"smart-contract/contracts/mem.sol\":3045:3099  super._transfer(address(this), owner(), rewardsTokens) */\n      tag_261\n        /* \"smart-contract/contracts/mem.sol\":3069:3073  this */\n      address\n        /* \"smart-contract/contracts/mem.sol\":3076:3083  owner() */\n      tag_262\n        /* \"smart-contract/contracts/mem.sol\":3076:3081  owner */\n      tag_108\n        /* \"smart-contract/contracts/mem.sol\":3076:3083  owner() */\n      jump\t// in\n    tag_262:\n        /* \"smart-contract/contracts/mem.sol\":3085:3098  rewardsTokens */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3045:3060  super._transfer */\n      tag_164\n        /* \"smart-contract/contracts/mem.sol\":3045:3099  super._transfer(address(this), owner(), rewardsTokens) */\n      jump\t// in\n    tag_261:\n        /* \"smart-contract/contracts/mem.sol\":2556:3111  {... */\n      pop\n      pop\n      pop\n        /* \"smart-contract/contracts/mem.sol\":2537:3111  if (taxAmount > 0) {... */\n    tag_249:\n        /* \"smart-contract/contracts/mem.sol\":3123:3168  super._transfer(sender, recipient, netAmount) */\n      tag_263\n        /* \"smart-contract/contracts/mem.sol\":3139:3145  sender */\n      dup8\n        /* \"smart-contract/contracts/mem.sol\":3147:3156  recipient */\n      dup8\n        /* \"smart-contract/contracts/mem.sol\":3158:3167  netAmount */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3123:3138  super._transfer */\n      tag_164\n        /* \"smart-contract/contracts/mem.sol\":3123:3168  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_263:\n        /* \"smart-contract/contracts/mem.sol\":1830:3176  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"smart-contract/contracts/mem.sol\":1753:3176  function transfer(address sender, address recipient, uint256 amount) external{... */\n    tag_229:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":4423:4624  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_265:\n        /* \"smart-contract/contracts/mem.sol\":4525:4527  10 */\n      0x0a\n        /* \"smart-contract/contracts/mem.sol\":4514:4521  _buyTax */\n      dup3\n        /* \"smart-contract/contracts/mem.sol\":4514:4527  _buyTax <= 10 */\n      gt\n      iszero\n        /* \"smart-contract/contracts/mem.sol\":4514:4545  _buyTax <= 10 && _sellTax <= 20 */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"smart-contract/contracts/mem.sol\":4543:4545  20 */\n      0x14\n        /* \"smart-contract/contracts/mem.sol\":4531:4539  _sellTax */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":4531:4545  _sellTax <= 20 */\n      gt\n      iszero\n        /* \"smart-contract/contracts/mem.sol\":4514:4545  _buyTax <= 10 && _sellTax <= 20 */\n    tag_267:\n        /* \"smart-contract/contracts/mem.sol\":4506:4560  require(_buyTax <= 10 && _sellTax <= 20, TaxTooHigh()) */\n      tag_268\n      jumpi\n      mload(0x40)\n      0xaf1ee13400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"smart-contract/contracts/mem.sol\":4580:4587  _buyTax */\n      dup2\n        /* \"smart-contract/contracts/mem.sol\":4571:4577  buyTax */\n      0x08\n        /* \"smart-contract/contracts/mem.sol\":4571:4587  buyTax = _buyTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contract/contracts/mem.sol\":4608:4616  _sellTax */\n      dup1\n        /* \"smart-contract/contracts/mem.sol\":4598:4605  sellTax */\n      0x09\n        /* \"smart-contract/contracts/mem.sol\":4598:4616  sellTax = _sellTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contract/contracts/mem.sol\":4423:4624  function setTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":4179:4310  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_270:\n        /* \"smart-contract/contracts/mem.sol\":4294:4302  excluded */\n      dup1\n        /* \"smart-contract/contracts/mem.sol\":4265:4282  isExcludedFromTax */\n      0x0f\n        /* \"smart-contract/contracts/mem.sol\":4265:4291  isExcludedFromTax[account] */\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":4283:4290  account */\n      dup5\n        /* \"smart-contract/contracts/mem.sol\":4265:4291  isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"smart-contract/contracts/mem.sol\":4265:4302  isExcludedFromTax[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contract/contracts/mem.sol\":4179:4310  function excludeFromTax(address account, bool excluded) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":951:977  address public uniswapPair */\n    tag_129:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":1074:1123  mapping(address => bool) public isExcludedFromTax */\n    tag_133:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":753:780  uint256 public sellTax = 10 */\n    tag_136:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_307\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_310\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_322\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_333\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/contracts/mem.sol\":3184:3337  function _update(address sender, address recipient, uint256 amount) internal virtual override {... */\n    tag_296:\n        /* \"smart-contract/contracts/mem.sol\":3289:3329  super._update(sender, recipient, amount) */\n      tag_335\n        /* \"smart-contract/contracts/mem.sol\":3303:3309  sender */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3311:3320  recipient */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3322:3328  amount */\n      dup4\n        /* \"smart-contract/contracts/mem.sol\":3289:3302  super._update */\n      tag_336\n        /* \"smart-contract/contracts/mem.sol\":3289:3329  super._update(sender, recipient, amount) */\n      jump\t// in\n    tag_335:\n        /* \"smart-contract/contracts/mem.sol\":3184:3337  function _update(address sender, address recipient, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_345\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_345:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_346)\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_350)\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_351\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_352:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_353:\n        /* \"#utility.yul\":177:201   */\n      tag_390\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_352\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_43:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_392\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_353\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_354:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_355:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_356:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_357:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_358:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_398\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_354\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":1146:1217   */\n      tag_399\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_355\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_400\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_356\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1316:1345   */\n      tag_401\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_357\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_47:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_403\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_358\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_360:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_362:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_363:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_409\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_362\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_364:\n        /* \"#utility.yul\":2311:2335   */\n      tag_411\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_363\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_412:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_365:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_414\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_364\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_366:\n        /* \"#utility.yul\":2584:2608   */\n      tag_416\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_352\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_417:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_367:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_419\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_366\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_50:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_422\n      tag_360\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2877:2996   */\n    tag_421:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_423\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_365\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_424\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_367\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_368:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_369:\n        /* \"#utility.yul\":3441:3462   */\n      tag_427\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_368\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_53:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_429\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_369\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_62:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_432\n      tag_360\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3801:3920   */\n    tag_431:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_433\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_365\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_434\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_365\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_435\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_367\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4376   */\n    tag_370:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4370   */\n      dup2\n        /* \"#utility.yul\":4358:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4524   */\n    tag_371:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4518   */\n      tag_438\n        /* \"#utility.yul\":4483:4517   */\n      tag_439\n        /* \"#utility.yul\":4492:4516   */\n      tag_440\n        /* \"#utility.yul\":4510:4515   */\n      dup5\n        /* \"#utility.yul\":4492:4516   */\n      tag_362\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4483:4517   */\n      tag_370\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4465:4518   */\n      tag_362\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4452:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4656   */\n    tag_372:\n        /* \"#utility.yul\":4580:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4650   */\n      tag_442\n        /* \"#utility.yul\":4644:4649   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      tag_371\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4600:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4815   */\n    tag_373:\n        /* \"#utility.yul\":4739:4748   */\n      0x00\n        /* \"#utility.yul\":4772:4809   */\n      tag_444\n        /* \"#utility.yul\":4803:4808   */\n      dup3\n        /* \"#utility.yul\":4772:4809   */\n      tag_372\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4759:4809   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5006   */\n    tag_374:\n        /* \"#utility.yul\":4935:4999   */\n      tag_446\n        /* \"#utility.yul\":4993:4998   */\n      dup2\n        /* \"#utility.yul\":4935:4999   */\n      tag_373\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4930:4933   */\n      dup3\n        /* \"#utility.yul\":4923:5000   */\n      mstore\n        /* \"#utility.yul\":4821:5006   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5012:5288   */\n    tag_68:\n        /* \"#utility.yul\":5132:5136   */\n      0x00\n        /* \"#utility.yul\":5170:5172   */\n      0x20\n        /* \"#utility.yul\":5159:5168   */\n      dup3\n        /* \"#utility.yul\":5155:5173   */\n      add\n        /* \"#utility.yul\":5147:5173   */\n      swap1\n      pop\n        /* \"#utility.yul\":5183:5281   */\n      tag_448\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5267:5276   */\n      dup4\n        /* \"#utility.yul\":5263:5280   */\n      add\n        /* \"#utility.yul\":5254:5260   */\n      dup5\n        /* \"#utility.yul\":5183:5281   */\n      tag_374\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5012:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5623   */\n    tag_71:\n        /* \"#utility.yul\":5353:5359   */\n      0x00\n        /* \"#utility.yul\":5402:5404   */\n      0x20\n        /* \"#utility.yul\":5390:5399   */\n      dup3\n        /* \"#utility.yul\":5381:5388   */\n      dup5\n        /* \"#utility.yul\":5377:5400   */\n      sub\n        /* \"#utility.yul\":5373:5405   */\n      slt\n        /* \"#utility.yul\":5370:5489   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":5408:5487   */\n      tag_451\n      tag_360\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5370:5489   */\n    tag_450:\n        /* \"#utility.yul\":5528:5529   */\n      0x00\n        /* \"#utility.yul\":5553:5606   */\n      tag_452\n        /* \"#utility.yul\":5598:5605   */\n      dup5\n        /* \"#utility.yul\":5589:5595   */\n      dup3\n        /* \"#utility.yul\":5578:5587   */\n      dup6\n        /* \"#utility.yul\":5574:5596   */\n      add\n        /* \"#utility.yul\":5553:5606   */\n      tag_367\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5543:5606   */\n      swap2\n      pop\n        /* \"#utility.yul\":5499:5616   */\n      pop\n        /* \"#utility.yul\":5294:5623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5629:5715   */\n    tag_375:\n        /* \"#utility.yul\":5664:5671   */\n      0x00\n        /* \"#utility.yul\":5704:5708   */\n      0xff\n        /* \"#utility.yul\":5697:5702   */\n      dup3\n        /* \"#utility.yul\":5693:5709   */\n      and\n        /* \"#utility.yul\":5682:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5629:5715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5721:5833   */\n    tag_376:\n        /* \"#utility.yul\":5804:5826   */\n      tag_455\n        /* \"#utility.yul\":5820:5825   */\n      dup2\n        /* \"#utility.yul\":5804:5826   */\n      tag_375\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5799:5802   */\n      dup3\n        /* \"#utility.yul\":5792:5827   */\n      mstore\n        /* \"#utility.yul\":5721:5833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5839:6053   */\n    tag_76:\n        /* \"#utility.yul\":5928:5932   */\n      0x00\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup3\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5943:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6046   */\n      tag_457\n        /* \"#utility.yul\":6043:6044   */\n      0x00\n        /* \"#utility.yul\":6032:6041   */\n      dup4\n        /* \"#utility.yul\":6028:6045   */\n      add\n        /* \"#utility.yul\":6019:6025   */\n      dup5\n        /* \"#utility.yul\":5979:6046   */\n      tag_376\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5839:6053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6059:6177   */\n    tag_377:\n        /* \"#utility.yul\":6146:6170   */\n      tag_459\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6146:6170   */\n      tag_363\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6141:6144   */\n      dup3\n        /* \"#utility.yul\":6134:6171   */\n      mstore\n        /* \"#utility.yul\":6059:6177   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6183:6405   */\n    tag_88:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6327:6398   */\n      tag_461\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6384:6393   */\n      dup4\n        /* \"#utility.yul\":6380:6397   */\n      add\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6327:6398   */\n      tag_377\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6183:6405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6411:6740   */\n    tag_100:\n        /* \"#utility.yul\":6470:6476   */\n      0x00\n        /* \"#utility.yul\":6519:6521   */\n      0x20\n        /* \"#utility.yul\":6507:6516   */\n      dup3\n        /* \"#utility.yul\":6498:6505   */\n      dup5\n        /* \"#utility.yul\":6494:6517   */\n      sub\n        /* \"#utility.yul\":6490:6522   */\n      slt\n        /* \"#utility.yul\":6487:6606   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":6525:6604   */\n      tag_464\n      tag_360\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6487:6606   */\n    tag_463:\n        /* \"#utility.yul\":6645:6646   */\n      0x00\n        /* \"#utility.yul\":6670:6723   */\n      tag_465\n        /* \"#utility.yul\":6715:6722   */\n      dup5\n        /* \"#utility.yul\":6706:6712   */\n      dup3\n        /* \"#utility.yul\":6695:6704   */\n      dup6\n        /* \"#utility.yul\":6691:6713   */\n      add\n        /* \"#utility.yul\":6670:6723   */\n      tag_365\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6660:6723   */\n      swap2\n      pop\n        /* \"#utility.yul\":6616:6733   */\n      pop\n        /* \"#utility.yul\":6411:6740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6746:7220   */\n    tag_122:\n        /* \"#utility.yul\":6814:6820   */\n      0x00\n        /* \"#utility.yul\":6822:6828   */\n      0x00\n        /* \"#utility.yul\":6871:6873   */\n      0x40\n        /* \"#utility.yul\":6859:6868   */\n      dup4\n        /* \"#utility.yul\":6850:6857   */\n      dup6\n        /* \"#utility.yul\":6846:6869   */\n      sub\n        /* \"#utility.yul\":6842:6874   */\n      slt\n        /* \"#utility.yul\":6839:6958   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6877:6956   */\n      tag_468\n      tag_360\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6839:6958   */\n    tag_467:\n        /* \"#utility.yul\":6997:6998   */\n      0x00\n        /* \"#utility.yul\":7022:7075   */\n      tag_469\n        /* \"#utility.yul\":7067:7074   */\n      dup6\n        /* \"#utility.yul\":7058:7064   */\n      dup3\n        /* \"#utility.yul\":7047:7056   */\n      dup7\n        /* \"#utility.yul\":7043:7065   */\n      add\n        /* \"#utility.yul\":7022:7075   */\n      tag_367\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7012:7075   */\n      swap3\n      pop\n        /* \"#utility.yul\":6968:7085   */\n      pop\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"#utility.yul\":7150:7203   */\n      tag_470\n        /* \"#utility.yul\":7195:7202   */\n      dup6\n        /* \"#utility.yul\":7186:7192   */\n      dup3\n        /* \"#utility.yul\":7175:7184   */\n      dup7\n        /* \"#utility.yul\":7171:7193   */\n      add\n        /* \"#utility.yul\":7150:7203   */\n      tag_367\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7140:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7095:7213   */\n      pop\n        /* \"#utility.yul\":6746:7220   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:7342   */\n    tag_378:\n        /* \"#utility.yul\":7296:7317   */\n      tag_472\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7296:7317   */\n      tag_368\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7289:7294   */\n      dup2\n        /* \"#utility.yul\":7286:7318   */\n      eq\n        /* \"#utility.yul\":7276:7336   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":7332:7333   */\n      0x00\n        /* \"#utility.yul\":7329:7330   */\n      0x00\n        /* \"#utility.yul\":7322:7334   */\n      revert\n        /* \"#utility.yul\":7276:7336   */\n    tag_473:\n        /* \"#utility.yul\":7226:7342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7481   */\n    tag_379:\n        /* \"#utility.yul\":7391:7396   */\n      0x00\n        /* \"#utility.yul\":7429:7435   */\n      dup2\n        /* \"#utility.yul\":7416:7436   */\n      calldataload\n        /* \"#utility.yul\":7407:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7445:7475   */\n      tag_475\n        /* \"#utility.yul\":7469:7474   */\n      dup2\n        /* \"#utility.yul\":7445:7475   */\n      tag_378\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7348:7481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7487:7955   */\n    tag_126:\n        /* \"#utility.yul\":7552:7558   */\n      0x00\n        /* \"#utility.yul\":7560:7566   */\n      0x00\n        /* \"#utility.yul\":7609:7611   */\n      0x40\n        /* \"#utility.yul\":7597:7606   */\n      dup4\n        /* \"#utility.yul\":7588:7595   */\n      dup6\n        /* \"#utility.yul\":7584:7607   */\n      sub\n        /* \"#utility.yul\":7580:7612   */\n      slt\n        /* \"#utility.yul\":7577:7696   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7615:7694   */\n      tag_478\n      tag_360\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7577:7696   */\n    tag_477:\n        /* \"#utility.yul\":7735:7736   */\n      0x00\n        /* \"#utility.yul\":7760:7813   */\n      tag_479\n        /* \"#utility.yul\":7805:7812   */\n      dup6\n        /* \"#utility.yul\":7796:7802   */\n      dup3\n        /* \"#utility.yul\":7785:7794   */\n      dup7\n        /* \"#utility.yul\":7781:7803   */\n      add\n        /* \"#utility.yul\":7760:7813   */\n      tag_365\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7750:7813   */\n      swap3\n      pop\n        /* \"#utility.yul\":7706:7823   */\n      pop\n        /* \"#utility.yul\":7862:7864   */\n      0x20\n        /* \"#utility.yul\":7888:7938   */\n      tag_480\n        /* \"#utility.yul\":7930:7937   */\n      dup6\n        /* \"#utility.yul\":7921:7927   */\n      dup3\n        /* \"#utility.yul\":7910:7919   */\n      dup7\n        /* \"#utility.yul\":7906:7928   */\n      add\n        /* \"#utility.yul\":7888:7938   */\n      tag_379\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7878:7938   */\n      swap2\n      pop\n        /* \"#utility.yul\":7833:7948   */\n      pop\n        /* \"#utility.yul\":7487:7955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8435   */\n    tag_140:\n        /* \"#utility.yul\":8029:8035   */\n      0x00\n        /* \"#utility.yul\":8037:8043   */\n      0x00\n        /* \"#utility.yul\":8086:8088   */\n      0x40\n        /* \"#utility.yul\":8074:8083   */\n      dup4\n        /* \"#utility.yul\":8065:8072   */\n      dup6\n        /* \"#utility.yul\":8061:8084   */\n      sub\n        /* \"#utility.yul\":8057:8089   */\n      slt\n        /* \"#utility.yul\":8054:8173   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8092:8171   */\n      tag_483\n      tag_360\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8054:8173   */\n    tag_482:\n        /* \"#utility.yul\":8212:8213   */\n      0x00\n        /* \"#utility.yul\":8237:8290   */\n      tag_484\n        /* \"#utility.yul\":8282:8289   */\n      dup6\n        /* \"#utility.yul\":8273:8279   */\n      dup3\n        /* \"#utility.yul\":8262:8271   */\n      dup7\n        /* \"#utility.yul\":8258:8280   */\n      add\n        /* \"#utility.yul\":8237:8290   */\n      tag_365\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8227:8290   */\n      swap3\n      pop\n        /* \"#utility.yul\":8183:8300   */\n      pop\n        /* \"#utility.yul\":8339:8341   */\n      0x20\n        /* \"#utility.yul\":8365:8418   */\n      tag_485\n        /* \"#utility.yul\":8410:8417   */\n      dup6\n        /* \"#utility.yul\":8401:8407   */\n      dup3\n        /* \"#utility.yul\":8390:8399   */\n      dup7\n        /* \"#utility.yul\":8386:8408   */\n      add\n        /* \"#utility.yul\":8365:8418   */\n      tag_365\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8355:8418   */\n      swap2\n      pop\n        /* \"#utility.yul\":8310:8428   */\n      pop\n        /* \"#utility.yul\":7961:8435   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8621   */\n    tag_380:\n        /* \"#utility.yul\":8489:8566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8486:8487   */\n      0x00\n        /* \"#utility.yul\":8479:8567   */\n      mstore\n        /* \"#utility.yul\":8586:8590   */\n      0x22\n        /* \"#utility.yul\":8583:8584   */\n      0x04\n        /* \"#utility.yul\":8576:8591   */\n      mstore\n        /* \"#utility.yul\":8610:8614   */\n      0x24\n        /* \"#utility.yul\":8607:8608   */\n      0x00\n        /* \"#utility.yul\":8600:8615   */\n      revert\n        /* \"#utility.yul\":8627:8947   */\n    tag_148:\n        /* \"#utility.yul\":8671:8677   */\n      0x00\n        /* \"#utility.yul\":8708:8709   */\n      0x02\n        /* \"#utility.yul\":8702:8706   */\n      dup3\n        /* \"#utility.yul\":8698:8710   */\n      div\n        /* \"#utility.yul\":8688:8710   */\n      swap1\n      pop\n        /* \"#utility.yul\":8755:8756   */\n      0x01\n        /* \"#utility.yul\":8749:8753   */\n      dup3\n        /* \"#utility.yul\":8745:8757   */\n      and\n        /* \"#utility.yul\":8776:8794   */\n      dup1\n        /* \"#utility.yul\":8766:8847   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8832:8836   */\n      0x7f\n        /* \"#utility.yul\":8824:8830   */\n      dup3\n        /* \"#utility.yul\":8820:8837   */\n      and\n        /* \"#utility.yul\":8810:8837   */\n      swap2\n      pop\n        /* \"#utility.yul\":8766:8847   */\n    tag_488:\n        /* \"#utility.yul\":8894:8896   */\n      0x20\n        /* \"#utility.yul\":8886:8892   */\n      dup3\n        /* \"#utility.yul\":8883:8897   */\n      lt\n        /* \"#utility.yul\":8863:8881   */\n      dup2\n        /* \"#utility.yul\":8860:8898   */\n      sub\n        /* \"#utility.yul\":8857:8941   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":8913:8931   */\n      tag_490\n      tag_380\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8857:8941   */\n    tag_489:\n        /* \"#utility.yul\":8678:8947   */\n      pop\n        /* \"#utility.yul\":8627:8947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8953:9038   */\n    tag_381:\n        /* \"#utility.yul\":8998:9005   */\n      0x00\n        /* \"#utility.yul\":9027:9032   */\n      dup2\n        /* \"#utility.yul\":9016:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":8953:9038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9044:9202   */\n    tag_382:\n        /* \"#utility.yul\":9102:9111   */\n      0x00\n        /* \"#utility.yul\":9135:9196   */\n      tag_493\n        /* \"#utility.yul\":9153:9195   */\n      tag_494\n        /* \"#utility.yul\":9162:9194   */\n      tag_495\n        /* \"#utility.yul\":9188:9193   */\n      dup5\n        /* \"#utility.yul\":9162:9194   */\n      tag_381\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9153:9195   */\n      tag_370\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9135:9196   */\n      tag_352\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9122:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9044:9202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9208:9355   */\n    tag_383:\n        /* \"#utility.yul\":9303:9348   */\n      tag_497\n        /* \"#utility.yul\":9342:9347   */\n      dup2\n        /* \"#utility.yul\":9303:9348   */\n      tag_382\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9298:9301   */\n      dup3\n        /* \"#utility.yul\":9291:9349   */\n      mstore\n        /* \"#utility.yul\":9208:9355   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9361:10168   */\n    tag_199:\n        /* \"#utility.yul\":9610:9614   */\n      0x00\n        /* \"#utility.yul\":9648:9651   */\n      0xc0\n        /* \"#utility.yul\":9637:9646   */\n      dup3\n        /* \"#utility.yul\":9633:9652   */\n      add\n        /* \"#utility.yul\":9625:9652   */\n      swap1\n      pop\n        /* \"#utility.yul\":9662:9733   */\n      tag_499\n        /* \"#utility.yul\":9730:9731   */\n      0x00\n        /* \"#utility.yul\":9719:9728   */\n      dup4\n        /* \"#utility.yul\":9715:9732   */\n      add\n        /* \"#utility.yul\":9706:9712   */\n      dup10\n        /* \"#utility.yul\":9662:9733   */\n      tag_377\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9743:9815   */\n      tag_500\n        /* \"#utility.yul\":9811:9813   */\n      0x20\n        /* \"#utility.yul\":9800:9809   */\n      dup4\n        /* \"#utility.yul\":9796:9814   */\n      add\n        /* \"#utility.yul\":9787:9793   */\n      dup9\n        /* \"#utility.yul\":9743:9815   */\n      tag_353\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9825:9905   */\n      tag_501\n        /* \"#utility.yul\":9901:9903   */\n      0x40\n        /* \"#utility.yul\":9890:9899   */\n      dup4\n        /* \"#utility.yul\":9886:9904   */\n      add\n        /* \"#utility.yul\":9877:9883   */\n      dup8\n        /* \"#utility.yul\":9825:9905   */\n      tag_383\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9915:9995   */\n      tag_502\n        /* \"#utility.yul\":9991:9993   */\n      0x60\n        /* \"#utility.yul\":9980:9989   */\n      dup4\n        /* \"#utility.yul\":9976:9994   */\n      add\n        /* \"#utility.yul\":9967:9973   */\n      dup7\n        /* \"#utility.yul\":9915:9995   */\n      tag_383\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10005:10078   */\n      tag_503\n        /* \"#utility.yul\":10073:10076   */\n      0x80\n        /* \"#utility.yul\":10062:10071   */\n      dup4\n        /* \"#utility.yul\":10058:10077   */\n      add\n        /* \"#utility.yul\":10049:10055   */\n      dup6\n        /* \"#utility.yul\":10005:10078   */\n      tag_377\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10088:10161   */\n      tag_504\n        /* \"#utility.yul\":10156:10159   */\n      0xa0\n        /* \"#utility.yul\":10145:10154   */\n      dup4\n        /* \"#utility.yul\":10141:10160   */\n      add\n        /* \"#utility.yul\":10132:10138   */\n      dup5\n        /* \"#utility.yul\":10088:10161   */\n      tag_353\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9361:10168   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10174:10317   */\n    tag_384:\n        /* \"#utility.yul\":10231:10236   */\n      0x00\n        /* \"#utility.yul\":10262:10268   */\n      dup2\n        /* \"#utility.yul\":10256:10269   */\n      mload\n        /* \"#utility.yul\":10247:10269   */\n      swap1\n      pop\n        /* \"#utility.yul\":10278:10311   */\n      tag_506\n        /* \"#utility.yul\":10305:10310   */\n      dup2\n        /* \"#utility.yul\":10278:10311   */\n      tag_366\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10174:10317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10323:10986   */\n    tag_203:\n        /* \"#utility.yul\":10411:10417   */\n      0x00\n        /* \"#utility.yul\":10419:10425   */\n      0x00\n        /* \"#utility.yul\":10427:10433   */\n      0x00\n        /* \"#utility.yul\":10476:10478   */\n      0x60\n        /* \"#utility.yul\":10464:10473   */\n      dup5\n        /* \"#utility.yul\":10455:10462   */\n      dup7\n        /* \"#utility.yul\":10451:10474   */\n      sub\n        /* \"#utility.yul\":10447:10479   */\n      slt\n        /* \"#utility.yul\":10444:10563   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":10482:10561   */\n      tag_509\n      tag_360\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10444:10563   */\n    tag_508:\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10627:10691   */\n      tag_510\n        /* \"#utility.yul\":10683:10690   */\n      dup7\n        /* \"#utility.yul\":10674:10680   */\n      dup3\n        /* \"#utility.yul\":10663:10672   */\n      dup8\n        /* \"#utility.yul\":10659:10681   */\n      add\n        /* \"#utility.yul\":10627:10691   */\n      tag_384\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10617:10691   */\n      swap4\n      pop\n        /* \"#utility.yul\":10573:10701   */\n      pop\n        /* \"#utility.yul\":10740:10742   */\n      0x20\n        /* \"#utility.yul\":10766:10830   */\n      tag_511\n        /* \"#utility.yul\":10822:10829   */\n      dup7\n        /* \"#utility.yul\":10813:10819   */\n      dup3\n        /* \"#utility.yul\":10802:10811   */\n      dup8\n        /* \"#utility.yul\":10798:10820   */\n      add\n        /* \"#utility.yul\":10766:10830   */\n      tag_384\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10756:10830   */\n      swap3\n      pop\n        /* \"#utility.yul\":10711:10840   */\n      pop\n        /* \"#utility.yul\":10879:10881   */\n      0x40\n        /* \"#utility.yul\":10905:10969   */\n      tag_512\n        /* \"#utility.yul\":10961:10968   */\n      dup7\n        /* \"#utility.yul\":10952:10958   */\n      dup3\n        /* \"#utility.yul\":10941:10950   */\n      dup8\n        /* \"#utility.yul\":10937:10959   */\n      add\n        /* \"#utility.yul\":10905:10969   */\n      tag_384\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10895:10969   */\n      swap2\n      pop\n        /* \"#utility.yul\":10850:10979   */\n      pop\n        /* \"#utility.yul\":10323:10986   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10992:11324   */\n    tag_205:\n        /* \"#utility.yul\":11113:11117   */\n      0x00\n        /* \"#utility.yul\":11151:11153   */\n      0x40\n        /* \"#utility.yul\":11140:11149   */\n      dup3\n        /* \"#utility.yul\":11136:11154   */\n      add\n        /* \"#utility.yul\":11128:11154   */\n      swap1\n      pop\n        /* \"#utility.yul\":11164:11235   */\n      tag_514\n        /* \"#utility.yul\":11232:11233   */\n      0x00\n        /* \"#utility.yul\":11221:11230   */\n      dup4\n        /* \"#utility.yul\":11217:11234   */\n      add\n        /* \"#utility.yul\":11208:11214   */\n      dup6\n        /* \"#utility.yul\":11164:11235   */\n      tag_353\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11245:11317   */\n      tag_515\n        /* \"#utility.yul\":11313:11315   */\n      0x20\n        /* \"#utility.yul\":11302:11311   */\n      dup4\n        /* \"#utility.yul\":11298:11316   */\n      add\n        /* \"#utility.yul\":11289:11295   */\n      dup5\n        /* \"#utility.yul\":11245:11317   */\n      tag_353\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10992:11324   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11330:11510   */\n    tag_385:\n        /* \"#utility.yul\":11378:11455   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11375:11376   */\n      0x00\n        /* \"#utility.yul\":11368:11456   */\n      mstore\n        /* \"#utility.yul\":11475:11479   */\n      0x11\n        /* \"#utility.yul\":11472:11473   */\n      0x04\n        /* \"#utility.yul\":11465:11480   */\n      mstore\n        /* \"#utility.yul\":11499:11503   */\n      0x24\n        /* \"#utility.yul\":11496:11497   */\n      0x00\n        /* \"#utility.yul\":11489:11504   */\n      revert\n        /* \"#utility.yul\":11516:11926   */\n    tag_237:\n        /* \"#utility.yul\":11556:11563   */\n      0x00\n        /* \"#utility.yul\":11579:11599   */\n      tag_518\n        /* \"#utility.yul\":11597:11598   */\n      dup3\n        /* \"#utility.yul\":11579:11599   */\n      tag_352\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11574:11599   */\n      swap2\n      pop\n        /* \"#utility.yul\":11613:11633   */\n      tag_519\n        /* \"#utility.yul\":11631:11632   */\n      dup4\n        /* \"#utility.yul\":11613:11633   */\n      tag_352\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11608:11633   */\n      swap3\n      pop\n        /* \"#utility.yul\":11668:11669   */\n      dup3\n        /* \"#utility.yul\":11665:11666   */\n      dup3\n        /* \"#utility.yul\":11661:11670   */\n      mul\n        /* \"#utility.yul\":11690:11720   */\n      tag_520\n        /* \"#utility.yul\":11708:11719   */\n      dup2\n        /* \"#utility.yul\":11690:11720   */\n      tag_352\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11679:11720   */\n      swap2\n      pop\n        /* \"#utility.yul\":11869:11870   */\n      dup3\n        /* \"#utility.yul\":11860:11867   */\n      dup3\n        /* \"#utility.yul\":11856:11871   */\n      div\n        /* \"#utility.yul\":11853:11854   */\n      dup5\n        /* \"#utility.yul\":11850:11872   */\n      eq\n        /* \"#utility.yul\":11830:11831   */\n      dup4\n        /* \"#utility.yul\":11823:11832   */\n      iszero\n        /* \"#utility.yul\":11803:11886   */\n      or\n        /* \"#utility.yul\":11780:11919   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":11899:11917   */\n      tag_522\n      tag_385\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11780:11919   */\n    tag_521:\n        /* \"#utility.yul\":11564:11926   */\n      pop\n        /* \"#utility.yul\":11516:11926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11932:12112   */\n    tag_386:\n        /* \"#utility.yul\":11980:12057   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11977:11978   */\n      0x00\n        /* \"#utility.yul\":11970:12058   */\n      mstore\n        /* \"#utility.yul\":12077:12081   */\n      0x12\n        /* \"#utility.yul\":12074:12075   */\n      0x04\n        /* \"#utility.yul\":12067:12082   */\n      mstore\n        /* \"#utility.yul\":12101:12105   */\n      0x24\n        /* \"#utility.yul\":12098:12099   */\n      0x00\n        /* \"#utility.yul\":12091:12106   */\n      revert\n        /* \"#utility.yul\":12118:12303   */\n    tag_239:\n        /* \"#utility.yul\":12158:12159   */\n      0x00\n        /* \"#utility.yul\":12175:12195   */\n      tag_525\n        /* \"#utility.yul\":12193:12194   */\n      dup3\n        /* \"#utility.yul\":12175:12195   */\n      tag_352\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12170:12195   */\n      swap2\n      pop\n        /* \"#utility.yul\":12209:12229   */\n      tag_526\n        /* \"#utility.yul\":12227:12228   */\n      dup4\n        /* \"#utility.yul\":12209:12229   */\n      tag_352\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12204:12229   */\n      swap3\n      pop\n        /* \"#utility.yul\":12248:12249   */\n      dup3\n        /* \"#utility.yul\":12238:12273   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":12253:12271   */\n      tag_528\n      tag_386\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":12238:12273   */\n    tag_527:\n        /* \"#utility.yul\":12295:12296   */\n      dup3\n        /* \"#utility.yul\":12292:12293   */\n      dup3\n        /* \"#utility.yul\":12288:12297   */\n      div\n        /* \"#utility.yul\":12283:12297   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12309:12503   */\n    tag_245:\n        /* \"#utility.yul\":12349:12353   */\n      0x00\n        /* \"#utility.yul\":12369:12389   */\n      tag_530\n        /* \"#utility.yul\":12387:12388   */\n      dup3\n        /* \"#utility.yul\":12369:12389   */\n      tag_352\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12364:12389   */\n      swap2\n      pop\n        /* \"#utility.yul\":12403:12423   */\n      tag_531\n        /* \"#utility.yul\":12421:12422   */\n      dup4\n        /* \"#utility.yul\":12403:12423   */\n      tag_352\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12398:12423   */\n      swap3\n      pop\n        /* \"#utility.yul\":12447:12448   */\n      dup3\n        /* \"#utility.yul\":12444:12445   */\n      dup3\n        /* \"#utility.yul\":12440:12449   */\n      sub\n        /* \"#utility.yul\":12432:12449   */\n      swap1\n      pop\n        /* \"#utility.yul\":12471:12472   */\n      dup2\n        /* \"#utility.yul\":12465:12469   */\n      dup2\n        /* \"#utility.yul\":12462:12473   */\n      gt\n        /* \"#utility.yul\":12459:12496   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12476:12494   */\n      tag_533\n      tag_385\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12459:12496   */\n    tag_532:\n        /* \"#utility.yul\":12309:12503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12509:12700   */\n    tag_247:\n        /* \"#utility.yul\":12549:12552   */\n      0x00\n        /* \"#utility.yul\":12568:12588   */\n      tag_535\n        /* \"#utility.yul\":12586:12587   */\n      dup3\n        /* \"#utility.yul\":12568:12588   */\n      tag_352\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12563:12588   */\n      swap2\n      pop\n        /* \"#utility.yul\":12602:12622   */\n      tag_536\n        /* \"#utility.yul\":12620:12621   */\n      dup4\n        /* \"#utility.yul\":12602:12622   */\n      tag_352\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12597:12622   */\n      swap3\n      pop\n        /* \"#utility.yul\":12645:12646   */\n      dup3\n        /* \"#utility.yul\":12642:12643   */\n      dup3\n        /* \"#utility.yul\":12638:12647   */\n      add\n        /* \"#utility.yul\":12631:12647   */\n      swap1\n      pop\n        /* \"#utility.yul\":12666:12669   */\n      dup1\n        /* \"#utility.yul\":12663:12664   */\n      dup3\n        /* \"#utility.yul\":12660:12670   */\n      gt\n        /* \"#utility.yul\":12657:12693   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":12673:12691   */\n      tag_538\n      tag_385\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12657:12693   */\n    tag_537:\n        /* \"#utility.yul\":12509:12700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:13148   */\n    tag_288:\n        /* \"#utility.yul\":12855:12859   */\n      0x00\n        /* \"#utility.yul\":12893:12895   */\n      0x60\n        /* \"#utility.yul\":12882:12891   */\n      dup3\n        /* \"#utility.yul\":12878:12896   */\n      add\n        /* \"#utility.yul\":12870:12896   */\n      swap1\n      pop\n        /* \"#utility.yul\":12906:12977   */\n      tag_540\n        /* \"#utility.yul\":12974:12975   */\n      0x00\n        /* \"#utility.yul\":12963:12972   */\n      dup4\n        /* \"#utility.yul\":12959:12976   */\n      add\n        /* \"#utility.yul\":12950:12956   */\n      dup7\n        /* \"#utility.yul\":12906:12977   */\n      tag_377\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12987:13059   */\n      tag_541\n        /* \"#utility.yul\":13055:13057   */\n      0x20\n        /* \"#utility.yul\":13044:13053   */\n      dup4\n        /* \"#utility.yul\":13040:13058   */\n      add\n        /* \"#utility.yul\":13031:13037   */\n      dup6\n        /* \"#utility.yul\":12987:13059   */\n      tag_353\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13069:13141   */\n      tag_542\n        /* \"#utility.yul\":13137:13139   */\n      0x40\n        /* \"#utility.yul\":13126:13135   */\n      dup4\n        /* \"#utility.yul\":13122:13140   */\n      add\n        /* \"#utility.yul\":13113:13119   */\n      dup5\n        /* \"#utility.yul\":13069:13141   */\n      tag_353\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12706:13148   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a144c185d6e246104ffa5a6effc8c3a7b3409669ad038e2c837dff866026213964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1072": {
									"entryPoint": null,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_967": {
									"entryPoint": null,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 983,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10338:12",
										"nodeType": "YulBlock",
										"src": "0:10338:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2615:81:12",
													"nodeType": "YulBlock",
													"src": "2615:81:12",
													"statements": [
														{
															"nativeSrc": "2625:65:12",
															"nodeType": "YulAssignment",
															"src": "2625:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:12"
																},
																"nativeSrc": "2636:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:12",
														"nodeType": "YulTypedName",
														"src": "2597:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:12",
														"nodeType": "YulTypedName",
														"src": "2607:7:12",
														"type": ""
													}
												],
												"src": "2570:126:12"
											},
											{
												"body": {
													"nativeSrc": "2747:51:12",
													"nodeType": "YulBlock",
													"src": "2747:51:12",
													"statements": [
														{
															"nativeSrc": "2757:35:12",
															"nodeType": "YulAssignment",
															"src": "2757:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:12"
																},
																"nativeSrc": "2768:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:12",
														"nodeType": "YulTypedName",
														"src": "2729:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:12",
														"nodeType": "YulTypedName",
														"src": "2739:7:12",
														"type": ""
													}
												],
												"src": "2702:96:12"
											},
											{
												"body": {
													"nativeSrc": "2847:79:12",
													"nodeType": "YulBlock",
													"src": "2847:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:12",
																"nodeType": "YulBlock",
																"src": "2904:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:12"
																			},
																			"nativeSrc": "2906:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:12"
																		},
																		"nativeSrc": "2906:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:12"
																				},
																				"nativeSrc": "2877:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:12"
																		},
																		"nativeSrc": "2867:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:12"
																},
																"nativeSrc": "2860:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:12"
															},
															"nativeSrc": "2857:63:12",
															"nodeType": "YulIf",
															"src": "2857:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:12",
														"nodeType": "YulTypedName",
														"src": "2840:5:12",
														"type": ""
													}
												],
												"src": "2804:122:12"
											},
											{
												"body": {
													"nativeSrc": "2995:80:12",
													"nodeType": "YulBlock",
													"src": "2995:80:12",
													"statements": [
														{
															"nativeSrc": "3005:22:12",
															"nodeType": "YulAssignment",
															"src": "3005:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:12"
																},
																"nativeSrc": "3014:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:12"
																},
																"nativeSrc": "3036:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:12"
															},
															"nativeSrc": "3036:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:12",
														"nodeType": "YulTypedName",
														"src": "2973:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:12",
														"nodeType": "YulTypedName",
														"src": "2981:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:12",
														"nodeType": "YulTypedName",
														"src": "2989:5:12",
														"type": ""
													}
												],
												"src": "2932:143:12"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:12",
													"nodeType": "YulBlock",
													"src": "3229:1018:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:12",
																"nodeType": "YulBlock",
																"src": "3276:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:12"
																			},
																			"nativeSrc": "3278:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:12"
																		},
																		"nativeSrc": "3278:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:12"
																		},
																		"nativeSrc": "3246:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:12"
																},
																"nativeSrc": "3242:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:12"
															},
															"nativeSrc": "3239:120:12",
															"nodeType": "YulIf",
															"src": "3239:120:12"
														},
														{
															"nativeSrc": "3369:291:12",
															"nodeType": "YulBlock",
															"src": "3369:291:12",
															"statements": [
																{
																	"nativeSrc": "3384:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3408:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3408:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3419:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3419:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3404:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3404:3:12"
																				},
																				"nativeSrc": "3404:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3404:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3398:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3398:5:12"
																		},
																		"nativeSrc": "3398:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3469:83:12",
																		"nodeType": "YulBlock",
																		"src": "3469:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3471:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3471:77:12"
																					},
																					"nativeSrc": "3471:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3471:79:12"
																				},
																				"nativeSrc": "3471:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3471:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3441:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3449:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3449:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3438:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:12"
																		},
																		"nativeSrc": "3438:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:30:12"
																	},
																	"nativeSrc": "3435:117:12",
																	"nodeType": "YulIf",
																	"src": "3435:117:12"
																},
																{
																	"nativeSrc": "3566:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3566:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3622:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3622:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3633:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3633:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3618:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3618:3:12"
																				},
																				"nativeSrc": "3618:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3618:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3642:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3642:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3576:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3576:41:12"
																		},
																		"nativeSrc": "3576:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3576:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3566:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3566:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3670:292:12",
															"nodeType": "YulBlock",
															"src": "3670:292:12",
															"statements": [
																{
																	"nativeSrc": "3685:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3685:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3709:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3720:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3720:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3705:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:12"
																				},
																				"nativeSrc": "3705:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3699:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3699:5:12"
																		},
																		"nativeSrc": "3699:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3699:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3689:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3689:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3771:83:12",
																		"nodeType": "YulBlock",
																		"src": "3771:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3773:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3773:77:12"
																					},
																					"nativeSrc": "3773:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3773:79:12"
																				},
																				"nativeSrc": "3773:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3773:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3751:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3751:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3740:2:12"
																		},
																		"nativeSrc": "3740:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:30:12"
																	},
																	"nativeSrc": "3737:117:12",
																	"nodeType": "YulIf",
																	"src": "3737:117:12"
																},
																{
																	"nativeSrc": "3868:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3868:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3924:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3924:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3935:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3935:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3920:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3920:3:12"
																				},
																				"nativeSrc": "3920:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3920:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3944:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3944:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3878:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3878:41:12"
																		},
																		"nativeSrc": "3878:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3868:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3868:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3972:129:12",
															"nodeType": "YulBlock",
															"src": "3972:129:12",
															"statements": [
																{
																	"nativeSrc": "3987:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4001:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3991:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3991:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4017:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4017:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4063:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4063:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4074:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4074:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4059:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:12"
																				},
																				"nativeSrc": "4059:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4083:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4083:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4027:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4027:31:12"
																		},
																		"nativeSrc": "4027:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4017:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4017:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4111:129:12",
															"nodeType": "YulBlock",
															"src": "4111:129:12",
															"statements": [
																{
																	"nativeSrc": "4126:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4126:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4140:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4130:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4130:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4156:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4156:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:12"
																				},
																				"nativeSrc": "4198:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4166:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4166:31:12"
																		},
																		"nativeSrc": "4166:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4166:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4156:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4156:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
												"nativeSrc": "3081:1166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:12",
														"nodeType": "YulTypedName",
														"src": "3175:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:12",
														"nodeType": "YulTypedName",
														"src": "3186:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:12",
														"nodeType": "YulTypedName",
														"src": "3198:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:12",
														"nodeType": "YulTypedName",
														"src": "3206:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:12",
														"nodeType": "YulTypedName",
														"src": "3214:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:12",
														"nodeType": "YulTypedName",
														"src": "3222:6:12",
														"type": ""
													}
												],
												"src": "3081:1166:12"
											},
											{
												"body": {
													"nativeSrc": "4312:40:12",
													"nodeType": "YulBlock",
													"src": "4312:40:12",
													"statements": [
														{
															"nativeSrc": "4323:22:12",
															"nodeType": "YulAssignment",
															"src": "4323:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:12"
																},
																"nativeSrc": "4333:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:12",
														"nodeType": "YulTypedName",
														"src": "4295:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:12",
														"nodeType": "YulTypedName",
														"src": "4305:6:12",
														"type": ""
													}
												],
												"src": "4253:99:12"
											},
											{
												"body": {
													"nativeSrc": "4386:152:12",
													"nodeType": "YulBlock",
													"src": "4386:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:12"
																},
																"nativeSrc": "4396:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:12"
															},
															"nativeSrc": "4396:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:12"
																},
																"nativeSrc": "4493:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:12"
															},
															"nativeSrc": "4493:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:12"
																},
																"nativeSrc": "4517:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:12"
															},
															"nativeSrc": "4517:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:12"
											},
											{
												"body": {
													"nativeSrc": "4595:269:12",
													"nodeType": "YulBlock",
													"src": "4595:269:12",
													"statements": [
														{
															"nativeSrc": "4605:22:12",
															"nodeType": "YulAssignment",
															"src": "4605:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:12"
																},
																"nativeSrc": "4615:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:12"
																}
															]
														},
														{
															"nativeSrc": "4636:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:12"
																},
																"nativeSrc": "4662:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:12",
																"nodeType": "YulBlock",
																"src": "4713:51:12",
																"statements": [
																	{
																		"nativeSrc": "4727:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:12"
																			},
																			"nativeSrc": "4737:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:12"
																},
																"nativeSrc": "4686:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:12"
															},
															"nativeSrc": "4683:81:12",
															"nodeType": "YulIf",
															"src": "4683:81:12"
														},
														{
															"body": {
																"nativeSrc": "4816:42:12",
																"nodeType": "YulBlock",
																"src": "4816:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:12"
																			},
																			"nativeSrc": "4830:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:12"
																		},
																		"nativeSrc": "4830:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:12"
																		},
																		"nativeSrc": "4800:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:12"
																},
																"nativeSrc": "4777:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:12"
															},
															"nativeSrc": "4774:84:12",
															"nodeType": "YulIf",
															"src": "4774:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:12",
														"nodeType": "YulTypedName",
														"src": "4579:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:12",
														"nodeType": "YulTypedName",
														"src": "4588:6:12",
														"type": ""
													}
												],
												"src": "4544:320:12"
											},
											{
												"body": {
													"nativeSrc": "4924:87:12",
													"nodeType": "YulBlock",
													"src": "4924:87:12",
													"statements": [
														{
															"nativeSrc": "4934:11:12",
															"nodeType": "YulAssignment",
															"src": "4934:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:12",
																"nodeType": "YulIdentifier",
																"src": "4942:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:12"
																},
																"nativeSrc": "4955:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:12"
															},
															"nativeSrc": "4955:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:12"
														},
														{
															"nativeSrc": "4978:26:12",
															"nodeType": "YulAssignment",
															"src": "4978:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:12"
																},
																"nativeSrc": "4986:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:12",
														"nodeType": "YulTypedName",
														"src": "4911:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:12",
														"nodeType": "YulTypedName",
														"src": "4919:4:12",
														"type": ""
													}
												],
												"src": "4870:141:12"
											},
											{
												"body": {
													"nativeSrc": "5061:49:12",
													"nodeType": "YulBlock",
													"src": "5061:49:12",
													"statements": [
														{
															"nativeSrc": "5071:33:12",
															"nodeType": "YulAssignment",
															"src": "5071:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:12"
																		},
																		"nativeSrc": "5085:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:12"
																},
																"nativeSrc": "5081:23:12",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:12",
														"nodeType": "YulTypedName",
														"src": "5044:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:12",
														"nodeType": "YulTypedName",
														"src": "5054:6:12",
														"type": ""
													}
												],
												"src": "5017:93:12"
											},
											{
												"body": {
													"nativeSrc": "5169:54:12",
													"nodeType": "YulBlock",
													"src": "5169:54:12",
													"statements": [
														{
															"nativeSrc": "5179:37:12",
															"nodeType": "YulAssignment",
															"src": "5179:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:12"
																},
																"nativeSrc": "5200:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:12",
														"nodeType": "YulTypedName",
														"src": "5144:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:12",
														"nodeType": "YulTypedName",
														"src": "5150:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:12",
														"nodeType": "YulTypedName",
														"src": "5160:8:12",
														"type": ""
													}
												],
												"src": "5116:107:12"
											},
											{
												"body": {
													"nativeSrc": "5305:317:12",
													"nodeType": "YulBlock",
													"src": "5305:317:12",
													"statements": [
														{
															"nativeSrc": "5315:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:12"
																},
																"nativeSrc": "5332:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:12",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:12"
																},
																"nativeSrc": "5371:97:12",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:12",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:12",
															"nodeType": "YulAssignment",
															"src": "5477:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:12"
																},
																"nativeSrc": "5489:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:12"
																}
															]
														},
														{
															"nativeSrc": "5537:30:12",
															"nodeType": "YulAssignment",
															"src": "5537:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:12"
																		},
																		"nativeSrc": "5557:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:12"
																},
																"nativeSrc": "5546:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:12"
																}
															]
														},
														{
															"nativeSrc": "5576:40:12",
															"nodeType": "YulAssignment",
															"src": "5576:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:12"
																		},
																		"nativeSrc": "5596:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:12"
																},
																"nativeSrc": "5586:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:12",
														"nodeType": "YulTypedName",
														"src": "5266:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:12",
														"nodeType": "YulTypedName",
														"src": "5273:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:12",
														"nodeType": "YulTypedName",
														"src": "5285:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:12",
														"nodeType": "YulTypedName",
														"src": "5298:6:12",
														"type": ""
													}
												],
												"src": "5229:393:12"
											},
											{
												"body": {
													"nativeSrc": "5673:32:12",
													"nodeType": "YulBlock",
													"src": "5673:32:12",
													"statements": [
														{
															"nativeSrc": "5683:16:12",
															"nodeType": "YulAssignment",
															"src": "5683:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:12",
																"nodeType": "YulIdentifier",
																"src": "5694:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:12",
														"nodeType": "YulTypedName",
														"src": "5655:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:12",
														"nodeType": "YulTypedName",
														"src": "5665:7:12",
														"type": ""
													}
												],
												"src": "5628:77:12"
											},
											{
												"body": {
													"nativeSrc": "5743:28:12",
													"nodeType": "YulBlock",
													"src": "5743:28:12",
													"statements": [
														{
															"nativeSrc": "5753:12:12",
															"nodeType": "YulAssignment",
															"src": "5753:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:12",
																"nodeType": "YulIdentifier",
																"src": "5760:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:12",
														"nodeType": "YulTypedName",
														"src": "5729:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:12",
														"nodeType": "YulTypedName",
														"src": "5739:3:12",
														"type": ""
													}
												],
												"src": "5711:60:12"
											},
											{
												"body": {
													"nativeSrc": "5837:82:12",
													"nodeType": "YulBlock",
													"src": "5837:82:12",
													"statements": [
														{
															"nativeSrc": "5847:66:12",
															"nodeType": "YulAssignment",
															"src": "5847:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:12"
																				},
																				"nativeSrc": "5887:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:12"
																		},
																		"nativeSrc": "5878:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:12"
																},
																"nativeSrc": "5860:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:12",
														"nodeType": "YulTypedName",
														"src": "5817:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:12",
														"nodeType": "YulTypedName",
														"src": "5827:9:12",
														"type": ""
													}
												],
												"src": "5777:142:12"
											},
											{
												"body": {
													"nativeSrc": "5972:28:12",
													"nodeType": "YulBlock",
													"src": "5972:28:12",
													"statements": [
														{
															"nativeSrc": "5982:12:12",
															"nodeType": "YulAssignment",
															"src": "5982:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:12",
																"nodeType": "YulIdentifier",
																"src": "5989:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:12",
														"nodeType": "YulTypedName",
														"src": "5958:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:12",
														"nodeType": "YulTypedName",
														"src": "5968:3:12",
														"type": ""
													}
												],
												"src": "5925:75:12"
											},
											{
												"body": {
													"nativeSrc": "6082:193:12",
													"nodeType": "YulBlock",
													"src": "6082:193:12",
													"statements": [
														{
															"nativeSrc": "6092:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:12"
																},
																"nativeSrc": "6116:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:12",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:12"
																				},
																				"nativeSrc": "6205:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:12"
																				},
																				"nativeSrc": "6226:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:12"
																		},
																		"nativeSrc": "6177:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:12"
																},
																"nativeSrc": "6164:105:12",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:12"
															},
															"nativeSrc": "6164:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:12",
														"nodeType": "YulTypedName",
														"src": "6059:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:12",
														"nodeType": "YulTypedName",
														"src": "6065:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:12",
														"nodeType": "YulTypedName",
														"src": "6073:7:12",
														"type": ""
													}
												],
												"src": "6006:269:12"
											},
											{
												"body": {
													"nativeSrc": "6330:24:12",
													"nodeType": "YulBlock",
													"src": "6330:24:12",
													"statements": [
														{
															"nativeSrc": "6340:8:12",
															"nodeType": "YulAssignment",
															"src": "6340:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:12",
																"nodeType": "YulLiteral",
																"src": "6347:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:12",
														"nodeType": "YulTypedName",
														"src": "6326:3:12",
														"type": ""
													}
												],
												"src": "6281:73:12"
											},
											{
												"body": {
													"nativeSrc": "6413:136:12",
													"nodeType": "YulBlock",
													"src": "6413:136:12",
													"statements": [
														{
															"nativeSrc": "6423:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:12"
																},
																"nativeSrc": "6437:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:12"
																},
																"nativeSrc": "6478:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:12"
															},
															"nativeSrc": "6478:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:12",
														"nodeType": "YulTypedName",
														"src": "6399:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:12",
														"nodeType": "YulTypedName",
														"src": "6405:6:12",
														"type": ""
													}
												],
												"src": "6360:189:12"
											},
											{
												"body": {
													"nativeSrc": "6605:136:12",
													"nodeType": "YulBlock",
													"src": "6605:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:12",
																"nodeType": "YulBlock",
																"src": "6672:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:12"
																			},
																			"nativeSrc": "6686:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:12"
																		},
																		"nativeSrc": "6686:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:12"
																},
																"nativeSrc": "6622:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:12"
															},
															"nativeSrc": "6615:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:12",
																"nodeType": "YulBlock",
																"src": "6637:26:12",
																"statements": [
																	{
																		"nativeSrc": "6639:22:12",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:12"
																			},
																			"nativeSrc": "6648:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:12",
																"nodeType": "YulBlock",
																"src": "6619:2:12",
																"statements": []
															},
															"src": "6615:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:12",
														"nodeType": "YulTypedName",
														"src": "6593:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:12",
														"nodeType": "YulTypedName",
														"src": "6600:3:12",
														"type": ""
													}
												],
												"src": "6555:186:12"
											},
											{
												"body": {
													"nativeSrc": "6826:464:12",
													"nodeType": "YulBlock",
													"src": "6826:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:12",
																"nodeType": "YulBlock",
																"src": "6852:431:12",
																"statements": [
																	{
																		"nativeSrc": "6866:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:12"
																			},
																			"nativeSrc": "6882:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:12"
																					},
																					"nativeSrc": "6966:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:12"
																			},
																			"nativeSrc": "6952:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:12",
																			"nodeType": "YulBlock",
																			"src": "7153:27:12",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:12",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:12",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:12"
																			},
																			"nativeSrc": "7134:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:12"
																		},
																		"nativeSrc": "7131:49:12",
																		"nodeType": "YulIf",
																		"src": "7131:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:12"
																							},
																							"nativeSrc": "7249:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:12"
																					},
																					"nativeSrc": "7235:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:12"
																			},
																			"nativeSrc": "7193:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:12"
																		},
																		"nativeSrc": "7193:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:12"
																},
																"nativeSrc": "6840:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:12"
															},
															"nativeSrc": "6837:446:12",
															"nodeType": "YulIf",
															"src": "6837:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:12",
														"nodeType": "YulTypedName",
														"src": "6802:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:12",
														"nodeType": "YulTypedName",
														"src": "6809:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:12",
														"nodeType": "YulTypedName",
														"src": "6814:10:12",
														"type": ""
													}
												],
												"src": "6747:543:12"
											},
											{
												"body": {
													"nativeSrc": "7359:54:12",
													"nodeType": "YulBlock",
													"src": "7359:54:12",
													"statements": [
														{
															"nativeSrc": "7369:37:12",
															"nodeType": "YulAssignment",
															"src": "7369:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:12"
																},
																"nativeSrc": "7390:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:12",
														"nodeType": "YulTypedName",
														"src": "7334:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:12",
														"nodeType": "YulTypedName",
														"src": "7340:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:12",
														"nodeType": "YulTypedName",
														"src": "7350:8:12",
														"type": ""
													}
												],
												"src": "7296:117:12"
											},
											{
												"body": {
													"nativeSrc": "7470:118:12",
													"nodeType": "YulBlock",
													"src": "7470:118:12",
													"statements": [
														{
															"nativeSrc": "7480:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:12"
																				},
																				"nativeSrc": "7525:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:12"
																				},
																				"nativeSrc": "7540:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:12"
																		},
																		"nativeSrc": "7496:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:12"
																},
																"nativeSrc": "7492:56:12",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:12",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:12",
															"nodeType": "YulAssignment",
															"src": "7557:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:12"
																},
																"nativeSrc": "7567:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:12",
														"nodeType": "YulTypedName",
														"src": "7447:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:12",
														"nodeType": "YulTypedName",
														"src": "7453:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:12",
														"nodeType": "YulTypedName",
														"src": "7463:6:12",
														"type": ""
													}
												],
												"src": "7419:169:12"
											},
											{
												"body": {
													"nativeSrc": "7674:214:12",
													"nodeType": "YulBlock",
													"src": "7674:214:12",
													"statements": [
														{
															"nativeSrc": "7807:37:12",
															"nodeType": "YulAssignment",
															"src": "7807:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:12"
																},
																"nativeSrc": "7815:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:12"
																}
															]
														},
														{
															"nativeSrc": "7853:29:12",
															"nodeType": "YulAssignment",
															"src": "7853:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:12"
																		},
																		"nativeSrc": "7870:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:12"
																},
																"nativeSrc": "7861:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:12",
														"nodeType": "YulTypedName",
														"src": "7655:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:12",
														"nodeType": "YulTypedName",
														"src": "7661:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:12",
														"nodeType": "YulTypedName",
														"src": "7669:4:12",
														"type": ""
													}
												],
												"src": "7593:295:12"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:12",
													"nodeType": "YulBlock",
													"src": "7985:1303:12",
													"statements": [
														{
															"nativeSrc": "7996:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:12"
																},
																"nativeSrc": "8010:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:12",
																"nodeType": "YulBlock",
																"src": "8132:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:12"
																			},
																			"nativeSrc": "8134:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:12"
																		},
																		"nativeSrc": "8134:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:12"
																},
																"nativeSrc": "8101:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:12"
															},
															"nativeSrc": "8098:56:12",
															"nodeType": "YulIf",
															"src": "8098:56:12"
														},
														{
															"nativeSrc": "8164:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:12"
																		},
																		"nativeSrc": "8204:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:12"
																},
																"nativeSrc": "8178:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:12"
																},
																"nativeSrc": "8263:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:12"
															},
															"nativeSrc": "8263:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:12"
														},
														{
															"nativeSrc": "8340:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:12",
																"nodeType": "YulLiteral",
																"src": "8357:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:12",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:12",
															"nodeType": "YulAssignment",
															"src": "8368:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:12",
																"nodeType": "YulLiteral",
																"src": "8381:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:12",
																		"nodeType": "YulBlock",
																		"src": "8432:611:12",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:12",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:12"
																							},
																							"nativeSrc": "8473:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:12"
																					},
																					"nativeSrc": "8461:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:12",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:12"
																					},
																					"nativeSrc": "8511:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:12",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:12",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:12",
																					"nodeType": "YulBlock",
																					"src": "8629:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:12"
																												},
																												"nativeSrc": "8668:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:12"
																										},
																										"nativeSrc": "8662:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:12"
																								},
																								"nativeSrc": "8647:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:12"
																							},
																							"nativeSrc": "8647:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:12"
																						},
																						{
																							"nativeSrc": "8706:24:12",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:12",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:12"
																								},
																								"nativeSrc": "8716:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:12",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:12",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:12"
																								},
																								"nativeSrc": "8760:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:12"
																					},
																					"nativeSrc": "8592:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:12"
																				},
																				"nativeSrc": "8584:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:12",
																					"nodeType": "YulBlock",
																					"src": "8607:21:12",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:12",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:12",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:12"
																								},
																								"nativeSrc": "8614:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:12",
																					"nodeType": "YulBlock",
																					"src": "8588:3:12",
																					"statements": []
																				},
																				"src": "8584:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:12",
																					"nodeType": "YulBlock",
																					"src": "8828:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:12"
																										},
																										"nativeSrc": "8869:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:12"
																								},
																								"nativeSrc": "8863:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:12"
																												},
																												"nativeSrc": "8951:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:12"
																										},
																										"nativeSrc": "8921:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:12"
																								},
																								"nativeSrc": "8906:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:12"
																							},
																							"nativeSrc": "8906:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:12"
																					},
																					"nativeSrc": "8808:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:12"
																				},
																				"nativeSrc": "8805:179:12",
																				"nodeType": "YulIf",
																				"src": "8805:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:12",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:12"
																									},
																									"nativeSrc": "9014:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:12",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:12"
																							},
																							"nativeSrc": "9010:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:12"
																					},
																					"nativeSrc": "8997:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:12"
																				},
																				"nativeSrc": "8997:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:12"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:12",
																	"nodeType": "YulCase",
																	"src": "8425:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:12",
																		"nodeType": "YulBlock",
																		"src": "9060:222:12",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:12",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:12",
																					"nodeType": "YulBlock",
																					"src": "9111:67:12",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:12",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:12"
																										},
																										"nativeSrc": "9144:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:12"
																								},
																								"nativeSrc": "9138:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:12"
																				},
																				"nativeSrc": "9101:77:12",
																				"nodeType": "YulIf",
																				"src": "9101:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:12"
																							},
																							"nativeSrc": "9204:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:12"
																					},
																					"nativeSrc": "9191:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:12"
																				},
																				"nativeSrc": "9191:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:12"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:12",
																	"nodeType": "YulCase",
																	"src": "9052:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:12"
																},
																"nativeSrc": "8402:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:12"
															},
															"nativeSrc": "8395:887:12",
															"nodeType": "YulSwitch",
															"src": "8395:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:12",
														"nodeType": "YulTypedName",
														"src": "7974:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:12",
														"nodeType": "YulTypedName",
														"src": "7980:3:12",
														"type": ""
													}
												],
												"src": "7893:1395:12"
											},
											{
												"body": {
													"nativeSrc": "9359:53:12",
													"nodeType": "YulBlock",
													"src": "9359:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9376:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9399:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9399:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9381:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9381:17:12"
																		},
																		"nativeSrc": "9381:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:12"
																},
																"nativeSrc": "9369:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9369:37:12"
															},
															"nativeSrc": "9369:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9369:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9294:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9347:5:12",
														"nodeType": "YulTypedName",
														"src": "9347:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9354:3:12",
														"nodeType": "YulTypedName",
														"src": "9354:3:12",
														"type": ""
													}
												],
												"src": "9294:118:12"
											},
											{
												"body": {
													"nativeSrc": "9516:124:12",
													"nodeType": "YulBlock",
													"src": "9516:124:12",
													"statements": [
														{
															"nativeSrc": "9526:26:12",
															"nodeType": "YulAssignment",
															"src": "9526:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9538:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9538:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9549:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9549:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:12"
																},
																"nativeSrc": "9534:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9534:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9526:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9526:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9606:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9606:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9619:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:12"
																		},
																		"nativeSrc": "9615:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9562:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9562:43:12"
																},
																"nativeSrc": "9562:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9562:71:12"
															},
															"nativeSrc": "9562:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9562:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9418:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:12",
														"nodeType": "YulTypedName",
														"src": "9488:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9500:6:12",
														"nodeType": "YulTypedName",
														"src": "9500:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9511:4:12",
														"nodeType": "YulTypedName",
														"src": "9511:4:12",
														"type": ""
													}
												],
												"src": "9418:222:12"
											},
											{
												"body": {
													"nativeSrc": "9723:274:12",
													"nodeType": "YulBlock",
													"src": "9723:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9769:83:12",
																"nodeType": "YulBlock",
																"src": "9769:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9771:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9771:77:12"
																			},
																			"nativeSrc": "9771:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9771:79:12"
																		},
																		"nativeSrc": "9771:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9771:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9744:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9744:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9753:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9740:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:12"
																		},
																		"nativeSrc": "9740:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9740:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9736:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9736:3:12"
																},
																"nativeSrc": "9736:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9736:32:12"
															},
															"nativeSrc": "9733:119:12",
															"nodeType": "YulIf",
															"src": "9733:119:12"
														},
														{
															"nativeSrc": "9862:128:12",
															"nodeType": "YulBlock",
															"src": "9862:128:12",
															"statements": [
																{
																	"nativeSrc": "9877:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9877:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9891:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9891:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9881:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9881:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9906:74:12",
																	"nodeType": "YulAssignment",
																	"src": "9906:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9952:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9952:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9963:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9963:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9948:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9948:3:12"
																				},
																				"nativeSrc": "9948:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9948:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9972:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9972:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "9916:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "9916:31:12"
																		},
																		"nativeSrc": "9916:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9906:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9906:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "9646:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9693:9:12",
														"nodeType": "YulTypedName",
														"src": "9693:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9704:7:12",
														"nodeType": "YulTypedName",
														"src": "9704:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9716:6:12",
														"nodeType": "YulTypedName",
														"src": "9716:6:12",
														"type": ""
													}
												],
												"src": "9646:351:12"
											},
											{
												"body": {
													"nativeSrc": "10129:206:12",
													"nodeType": "YulBlock",
													"src": "10129:206:12",
													"statements": [
														{
															"nativeSrc": "10139:26:12",
															"nodeType": "YulAssignment",
															"src": "10139:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10151:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10151:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10162:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:12"
																},
																"nativeSrc": "10147:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10147:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10139:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10139:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10219:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10219:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10232:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10232:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10243:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10243:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10228:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:12"
																		},
																		"nativeSrc": "10228:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10228:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10175:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10175:43:12"
																},
																"nativeSrc": "10175:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10175:71:12"
															},
															"nativeSrc": "10175:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10175:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10300:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10300:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10313:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10313:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10324:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10324:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10309:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10309:3:12"
																		},
																		"nativeSrc": "10309:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10309:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10256:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10256:43:12"
																},
																"nativeSrc": "10256:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10256:72:12"
															},
															"nativeSrc": "10256:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10256:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "10003:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10093:9:12",
														"nodeType": "YulTypedName",
														"src": "10093:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10105:6:12",
														"nodeType": "YulTypedName",
														"src": "10105:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10113:6:12",
														"nodeType": "YulTypedName",
														"src": "10113:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10124:4:12",
														"nodeType": "YulTypedName",
														"src": "10124:4:12",
														"type": ""
													}
												],
												"src": "10003:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526005600855600a6009556032600a556014600b55601e600c55348015610028575f5ffd5b50604051612b5b380380612b5b833981810160405281019061004a9190610641565b808484816003908161005c91906108ed565b50806004908161006c91906108ed565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d691906109cb565b60405180910390fd5b6100ee816103d760201b60201c565b5060016006819055505f60075f6101000a81548160ff02191690831515021790555081600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ba573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101de91906109e4565b73ffffffffffffffffffffffffffffffffffffffff1663c9c6539630600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610264573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028891906109e4565b6040518363ffffffff1660e01b81526004016102a5929190610a0f565b6020604051808303815f875af11580156102c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e591906109e4565b600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506001600f5f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050505050610a36565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104f9826104b3565b810181811067ffffffffffffffff82111715610518576105176104c3565b5b80604052505050565b5f61052a61049a565b905061053682826104f0565b919050565b5f67ffffffffffffffff821115610555576105546104c3565b5b61055e826104b3565b9050602081019050919050565b8281835e5f83830152505050565b5f61058b6105868461053b565b610521565b9050828152602081018484840111156105a7576105a66104af565b5b6105b284828561056b565b509392505050565b5f82601f8301126105ce576105cd6104ab565b5b81516105de848260208601610579565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610610826105e7565b9050919050565b61062081610606565b811461062a575f5ffd5b50565b5f8151905061063b81610617565b92915050565b5f5f5f5f60808587031215610659576106586104a3565b5b5f85015167ffffffffffffffff811115610676576106756104a7565b5b610682878288016105ba565b945050602085015167ffffffffffffffff8111156106a3576106a26104a7565b5b6106af878288016105ba565b93505060406106c08782880161062d565b92505060606106d18782880161062d565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072b57607f821691505b60208210810361073e5761073d6106e7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610765565b6107aa8683610765565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6107ee6107e96107e4846107c2565b6107cb565b6107c2565b9050919050565b5f819050919050565b610807836107d4565b61081b610813826107f5565b848454610771565b825550505050565b5f5f905090565b610832610823565b61083d8184846107fe565b505050565b5b81811015610860576108555f8261082a565b600181019050610843565b5050565b601f8211156108a55761087681610744565b61087f84610756565b8101602085101561088e578190505b6108a261089a85610756565b830182610842565b50505b505050565b5f82821c905092915050565b5f6108c55f19846008026108aa565b1980831691505092915050565b5f6108dd83836108b6565b9150826002028217905092915050565b6108f6826106dd565b67ffffffffffffffff81111561090f5761090e6104c3565b5b6109198254610714565b610924828285610864565b5f60209050601f831160018114610955575f8415610943578287015190505b61094d85826108d2565b8655506109b4565b601f19841661096386610744565b5f5b8281101561098a57848901518255600182019150602085019450602081019050610965565b868310156109a757848901516109a3601f8916826108b6565b8355505b6001600288020188555050505b505050505050565b6109c581610606565b82525050565b5f6020820190506109de5f8301846109bc565b92915050565b5f602082840312156109f9576109f86104a3565b5b5f610a068482850161062d565b91505092915050565b5f604082019050610a225f8301856109bc565b610a2f60208301846109bc565b9392505050565b61211880610a435f395ff3fe608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c80635c975abb11610102578063beabacc8116100a0578063cb4ca6311161006f578063cb4ca631146104e8578063cc1776d314610518578063dd62ed3e14610536578063f2fde38b14610566576101d8565b8063beabacc814610476578063c647b20e14610492578063c6a30647146104ae578063c816841b146104ca576101d8565b80638456cb59116100dc5780638456cb59146104005780638da5cb5b1461040a57806395d89b4114610428578063a9059cbb14610446576101d8565b80635c975abb146103a857806370a08231146103c6578063715018a6146103f6576101d8565b80632e1a7d4d1161017a57806340c10f191161014957806340c10f19146103345780634e6fd6c4146103505780634f7041a51461036e57806351c6590a1461038c576101d8565b80632e1a7d4d146102d2578063313ce567146102ee578063337270771461030c5780633f4ba83a1461032a576101d8565b806315291cd4116101b657806315291cd41461024857806318160ddd1461026657806323b872dd146102845780632431ba73146102b4576101d8565b806305bf0a54146101dc57806306fdde03146101fa578063095ea7b314610218575b5f5ffd5b6101e4610582565b6040516101f19190611a00565b60405180910390f35b610202610588565b60405161020f9190611a89565b60405180910390f35b610232600480360381019061022d9190611b31565b610618565b60405161023f9190611b89565b60405180910390f35b61025061063a565b60405161025d9190611a00565b60405180910390f35b61026e610640565b60405161027b9190611a00565b60405180910390f35b61029e60048036038101906102999190611ba2565b610649565b6040516102ab9190611b89565b60405180910390f35b6102bc610677565b6040516102c99190611c4d565b60405180910390f35b6102ec60048036038101906102e79190611c66565b61069c565b005b6102f66107a6565b6040516103039190611cac565b60405180910390f35b6103146107ae565b6040516103219190611a00565b60405180910390f35b6103326107b4565b005b61034e60048036038101906103499190611b31565b6107c6565b005b6103586107dc565b6040516103659190611cd4565b60405180910390f35b6103766107e2565b6040516103839190611a00565b60405180910390f35b6103a660048036038101906103a19190611c66565b6107e8565b005b6103b0610951565b6040516103bd9190611b89565b60405180910390f35b6103e060048036038101906103db9190611ced565b610966565b6040516103ed9190611a00565b60405180910390f35b6103fe6109ab565b005b6104086109be565b005b6104126109d0565b60405161041f9190611cd4565b60405180910390f35b6104306109f8565b60405161043d9190611a89565b60405180910390f35b610460600480360381019061045b9190611b31565b610a88565b60405161046d9190611b89565b60405180910390f35b610490600480360381019061048b9190611ba2565b610aaa565b005b6104ac60048036038101906104a79190611d18565b610e68565b005b6104c860048036038101906104c39190611d80565b610eca565b005b6104d2610f2a565b6040516104df9190611cd4565b60405180910390f35b61050260048036038101906104fd9190611ced565b610f4f565b60405161050f9190611b89565b60405180910390f35b610520610f6c565b60405161052d9190611a00565b60405180910390f35b610550600480360381019061054b9190611dbe565b610f72565b60405161055d9190611a00565b60405180910390f35b610580600480360381019061057b9190611ced565b610ff4565b005b600b5481565b60606003805461059790611e29565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611e29565b801561060e5780601f106105e55761010080835404028352916020019161060e565b820191905f5260205f20905b8154815290600101906020018083116105f157829003601f168201915b5050505050905090565b5f5f610622611078565b905061062f81858561107f565b600191505092915050565b600a5481565b5f600254905090565b5f5f610653611078565b9050610660858285611091565b61066b858585611124565b60019150509392505050565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a4611214565b6106ac61129b565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610711576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561074b576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506107576109d0565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610799573d5f5f3e3d5ffd5b50506107a36112e1565b50565b5f6012905090565b600c5481565b6107bc611214565b6107c46112eb565b565b6107ce611214565b6107d8828261134c565b5050565b61dead81565b60085481565b6107f0611214565b6107f861129b565b5f8111610831576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085d30600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361107f565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6108a76109d0565b426040518863ffffffff1660e01b81526004016108c996959493929190611e92565b60606040518083038185885af11580156108e5573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061090a9190611f05565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b814760405161093e929190611f55565b60405180910390a161094e6112e1565b50565b5f60075f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109b3611214565b6109bc5f6113cb565b565b6109c6611214565b6109ce61148e565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a0790611e29565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3390611e29565b8015610a7e5780601f10610a5557610100808354040283529160200191610a7e565b820191905f5260205f20905b815481529060010190602001808311610a6157829003601f168201915b5050505050905090565b5f5f610a92611078565b9050610a9f818585611124565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0f576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b74576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610c0f5750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610c2457610c1f838383611124565b610e63565b5f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610cf257606460085485610ce19190611fa9565b610ceb9190612017565b9050610d16565b8115610d1557606460095485610d089190611fa9565b610d129190612017565b90505b5b5f8185610d239190612047565b90508181610d31919061207a565b8514610d69576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610e5357610d7c873084611124565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610dab9190611a00565b60405180910390a15f6064600a5484610dc49190611fa9565b610dce9190612017565b90505f6064600b5485610de19190611fa9565b610deb9190612017565b90505f818386610dfb9190612047565b610e059190612047565b9050610e3330600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611124565b610e3d30836114f0565b610e4f30610e496109d0565b83611124565b5050505b610e5e878783611124565b505050505b505050565b610e70611214565b600a8211158015610e82575060148111155b610eb8576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600881905550806009819055505050565b610ed2611214565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f602052805f5260405f205f915054906101000a900460ff1681565b60095481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ffc611214565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361106c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110639190611cd4565b60405180910390fd5b611075816113cb565b50565b5f33905090565b61108c838383600161156f565b505050565b5f61109c8484610f72565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561111e578181101561110f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611106939291906120ad565b60405180910390fd5b61111d84848484035f61156f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611194575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161118b9190611cd4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611204575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111fb9190611cd4565b60405180910390fd5b61120f83838361173e565b505050565b61121c611078565b73ffffffffffffffffffffffffffffffffffffffff1661123a6109d0565b73ffffffffffffffffffffffffffffffffffffffff16146112995761125d611078565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112909190611cd4565b60405180910390fd5b565b6002600654036112d7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b6001600681905550565b6112f361174e565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611335611078565b6040516113429190611cd4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113bc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113b39190611cd4565b60405180910390fd5b6113c75f838361173e565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61149661178e565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114d9611078565b6040516114e69190611cd4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611560575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115579190611cd4565b60405180910390fd5b61156b825f8361173e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115df575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115d69190611cd4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164f575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116469190611cd4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611738578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161172f9190611a00565b60405180910390a35b50505050565b6117498383836117cf565b505050565b611756610951565b61178c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611796610951565b156117cd576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361181f578060025f828254611813919061207a565b925050819055506118ed565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156118a8578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161189f939291906120ad565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611934578060025f828254039250508190555061197e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119db9190611a00565b60405180910390a3505050565b5f819050919050565b6119fa816119e8565b82525050565b5f602082019050611a135f8301846119f1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a5b82611a19565b611a658185611a23565b9350611a75818560208601611a33565b611a7e81611a41565b840191505092915050565b5f6020820190508181035f830152611aa18184611a51565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ad682611aad565b9050919050565b611ae681611acc565b8114611af0575f5ffd5b50565b5f81359050611b0181611add565b92915050565b611b10816119e8565b8114611b1a575f5ffd5b50565b5f81359050611b2b81611b07565b92915050565b5f5f60408385031215611b4757611b46611aa9565b5b5f611b5485828601611af3565b9250506020611b6585828601611b1d565b9150509250929050565b5f8115159050919050565b611b8381611b6f565b82525050565b5f602082019050611b9c5f830184611b7a565b92915050565b5f5f5f60608486031215611bb957611bb8611aa9565b5b5f611bc686828701611af3565b9350506020611bd786828701611af3565b9250506040611be886828701611b1d565b9150509250925092565b5f819050919050565b5f611c15611c10611c0b84611aad565b611bf2565b611aad565b9050919050565b5f611c2682611bfb565b9050919050565b5f611c3782611c1c565b9050919050565b611c4781611c2d565b82525050565b5f602082019050611c605f830184611c3e565b92915050565b5f60208284031215611c7b57611c7a611aa9565b5b5f611c8884828501611b1d565b91505092915050565b5f60ff82169050919050565b611ca681611c91565b82525050565b5f602082019050611cbf5f830184611c9d565b92915050565b611cce81611acc565b82525050565b5f602082019050611ce75f830184611cc5565b92915050565b5f60208284031215611d0257611d01611aa9565b5b5f611d0f84828501611af3565b91505092915050565b5f5f60408385031215611d2e57611d2d611aa9565b5b5f611d3b85828601611b1d565b9250506020611d4c85828601611b1d565b9150509250929050565b611d5f81611b6f565b8114611d69575f5ffd5b50565b5f81359050611d7a81611d56565b92915050565b5f5f60408385031215611d9657611d95611aa9565b5b5f611da385828601611af3565b9250506020611db485828601611d6c565b9150509250929050565b5f5f60408385031215611dd457611dd3611aa9565b5b5f611de185828601611af3565b9250506020611df285828601611af3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e4057607f821691505b602082108103611e5357611e52611dfc565b5b50919050565b5f819050919050565b5f611e7c611e77611e7284611e59565b611bf2565b6119e8565b9050919050565b611e8c81611e62565b82525050565b5f60c082019050611ea55f830189611cc5565b611eb260208301886119f1565b611ebf6040830187611e83565b611ecc6060830186611e83565b611ed96080830185611cc5565b611ee660a08301846119f1565b979650505050505050565b5f81519050611eff81611b07565b92915050565b5f5f5f60608486031215611f1c57611f1b611aa9565b5b5f611f2986828701611ef1565b9350506020611f3a86828701611ef1565b9250506040611f4b86828701611ef1565b9150509250925092565b5f604082019050611f685f8301856119f1565b611f7560208301846119f1565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fb3826119e8565b9150611fbe836119e8565b9250828202611fcc816119e8565b91508282048414831517611fe357611fe2611f7c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612021826119e8565b915061202c836119e8565b92508261203c5761203b611fea565b5b828204905092915050565b5f612051826119e8565b915061205c836119e8565b925082820390508181111561207457612073611f7c565b5b92915050565b5f612084826119e8565b915061208f836119e8565b92508282019050808211156120a7576120a6611f7c565b5b92915050565b5f6060820190506120c05f830186611cc5565b6120cd60208301856119f1565b6120da60408301846119f1565b94935050505056fea2646970667358221220a144c185d6e246104ffa5a6effc8c3a7b3409669ad038e2c837dff866026213964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x9 SSTORE PUSH1 0x32 PUSH1 0xA SSTORE PUSH1 0x14 PUSH1 0xB SSTORE PUSH1 0x1E PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B5B CODESIZE SUB DUP1 PUSH2 0x2B5B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP3 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0xA36 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4F9 DUP3 PUSH2 0x4B3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0x4C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x52A PUSH2 0x49A JUMP JUMPDEST SWAP1 POP PUSH2 0x536 DUP3 DUP3 PUSH2 0x4F0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x4C3 JUMP JUMPDEST JUMPDEST PUSH2 0x55E DUP3 PUSH2 0x4B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x58B PUSH2 0x586 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x4AF JUMP JUMPDEST JUMPDEST PUSH2 0x5B2 DUP5 DUP3 DUP6 PUSH2 0x56B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x4AB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x579 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x610 DUP3 PUSH2 0x5E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x620 DUP2 PUSH2 0x606 JUMP JUMPDEST DUP2 EQ PUSH2 0x62A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x63B DUP2 PUSH2 0x617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x659 JUMPI PUSH2 0x658 PUSH2 0x4A3 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x676 JUMPI PUSH2 0x675 PUSH2 0x4A7 JUMP JUMPDEST JUMPDEST PUSH2 0x682 DUP8 DUP3 DUP9 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x4A7 JUMP JUMPDEST JUMPDEST PUSH2 0x6AF DUP8 DUP3 DUP9 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x6C0 DUP8 DUP3 DUP9 ADD PUSH2 0x62D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x6D1 DUP8 DUP3 DUP9 ADD PUSH2 0x62D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x72B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x6E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x7AA DUP7 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7EE PUSH2 0x7E9 PUSH2 0x7E4 DUP5 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x807 DUP4 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x81B PUSH2 0x813 DUP3 PUSH2 0x7F5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x771 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x832 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x83D DUP2 DUP5 DUP5 PUSH2 0x7FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x860 JUMPI PUSH2 0x855 PUSH0 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x843 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A5 JUMPI PUSH2 0x876 DUP2 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x87F DUP5 PUSH2 0x756 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x88E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8A2 PUSH2 0x89A DUP6 PUSH2 0x756 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x842 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8C5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8AA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8DD DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F6 DUP3 PUSH2 0x6DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90F JUMPI PUSH2 0x90E PUSH2 0x4C3 JUMP JUMPDEST JUMPDEST PUSH2 0x919 DUP3 SLOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x924 DUP3 DUP3 DUP6 PUSH2 0x864 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x955 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x943 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x94D DUP6 DUP3 PUSH2 0x8D2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x963 DUP7 PUSH2 0x744 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x98A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x965 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9A7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9A3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8B6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C5 DUP2 PUSH2 0x606 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DE PUSH0 DUP4 ADD DUP5 PUSH2 0x9BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x4A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA06 DUP5 DUP3 DUP6 ADD PUSH2 0x62D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA22 PUSH0 DUP4 ADD DUP6 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0xA2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2118 DUP1 PUSH2 0xA43 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xBEABACC8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC647B20E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x4CA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x446 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x38C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x32A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x15291CD4 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x2B4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x218 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x7B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0x9AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH2 0x9BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x597 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C3 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x622 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x62F DUP2 DUP6 DUP6 PUSH2 0x107F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x653 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x660 DUP6 DUP3 DUP6 PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x66B DUP6 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x6AC PUSH2 0x129B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x757 PUSH2 0x9D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x7A3 PUSH2 0x12E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7BC PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0x12EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7D8 DUP3 DUP3 PUSH2 0x134C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x129B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D ADDRESS PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x107F JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x8A7 PUSH2 0x9D0 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x93E SWAP3 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x94E PUSH2 0x12E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x9BC PUSH0 PUSH2 0x13CB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x148E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA07 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA33 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA92 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9F DUP2 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xC0F JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH2 0xC1F DUP4 DUP4 DUP4 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x64 PUSH1 0x8 SLOAD DUP6 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH2 0xD16 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD15 JUMPI PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST DUP6 EQ PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xD7C DUP8 ADDRESS DUP5 PUSH2 0x1124 JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP5 PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xB SLOAD DUP6 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP PUSH2 0xE33 ADDRESS PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0xE3D ADDRESS DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xE4F ADDRESS PUSH2 0xE49 PUSH2 0x9D0 JUMP JUMPDEST DUP4 PUSH2 0x1124 JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0xE5E DUP8 DUP8 DUP4 PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE70 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xE82 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xEB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFC PUSH2 0x1214 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x13CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x108C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x156F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x109C DUP5 DUP5 PUSH2 0xF72 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x110F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x156F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1194 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1204 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120F DUP4 DUP4 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x121C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x123A PUSH2 0x9D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1299 JUMPI PUSH2 0x125D PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12F3 PUSH2 0x174E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1335 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C7 PUSH0 DUP4 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14D9 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E6 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1560 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1557 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B DUP3 PUSH0 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1738 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x172F SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1749 DUP4 DUP4 DUP4 PUSH2 0x17CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1756 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1796 PUSH2 0x951 JUMP JUMPDEST ISZERO PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18ED JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x18A8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1934 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FA DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A13 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5B DUP3 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x1A65 DUP2 DUP6 PUSH2 0x1A23 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x1A7E DUP2 PUSH2 0x1A41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA1 DUP2 DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD6 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x1ACC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B47 JUMPI PUSH2 0x1B46 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B54 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B65 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B83 DUP2 PUSH2 0x1B6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC6 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C15 PUSH2 0x1C10 PUSH2 0x1C0B DUP5 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C26 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C37 DUP3 PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C88 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA6 DUP2 PUSH2 0x1C91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH0 DUP4 ADD DUP5 PUSH2 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CCE DUP2 PUSH2 0x1ACC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0F DUP5 DUP3 DUP6 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2E JUMPI PUSH2 0x1D2D PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D3B DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4C DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5F DUP2 PUSH2 0x1B6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1D69 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D7A DUP2 PUSH2 0x1D56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E40 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7C PUSH2 0x1E77 PUSH2 0x1E72 DUP5 PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E8C DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EA5 PUSH0 DUP4 ADD DUP10 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x1EB2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1EBF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1ECC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EFF DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F29 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F3A DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F4B DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F68 PUSH0 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1F75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FB3 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FCC DUP2 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2021 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x20A6 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x20DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PREVRANDAO 0xC1 DUP6 0xD6 0xE2 CHAINID LT 0x4F STATICCALL GAS PUSH15 0xFFC8C3A7B3409669AD038E2C837DFF DUP7 PUSH1 0x26 0x21 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "463:4313:11:-:0;;;745:1;721:25;;778:2;753:27;;819:2;787:34;;855:2;828:29;;894:2;864:32;;1292:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1461:5;1437;1444:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:7;2061:7;:21;;;;1241:5:6;1231:7;;:15;;;;;;;;;;;;;;;;;;1514:13:11::2;1479;;:49;;;;;;;;;;;;;;;;;;1571:13;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:53;;;1615:4;1622:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1539:11;;:104;;;;;;;;;;;;;;;;;;1683:4;1656:17;:24;1674:5;1656:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1733:4;1698:17;:32;1724:4;1698:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1292:453:::0;;;;463:4313;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3419:1;3408:9;3404:17;3398:24;3449:18;3441:6;3438:30;3435:117;;;3471:79;;:::i;:::-;3435:117;3576:74;3642:7;3633:6;3622:9;3618:22;3576:74;:::i;:::-;3566:84;;3369:291;3720:2;3709:9;3705:18;3699:25;3751:18;3743:6;3740:30;3737:117;;;3773:79;;:::i;:::-;3737:117;3878:74;3944:7;3935:6;3924:9;3920:22;3878:74;:::i;:::-;3868:84;;3670:292;4001:2;4027:64;4083:7;4074:6;4063:9;4059:22;4027:64;:::i;:::-;4017:74;;3972:129;4140:2;4166:64;4222:7;4213:6;4202:9;4198:22;4166:64;:::i;:::-;4156:74;;4111:129;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6347:1;6340:8;;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;9294:118::-;9381:24;9399:5;9381:24;:::i;:::-;9376:3;9369:37;9294:118;;:::o;9418:222::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9562:71;9630:1;9619:9;9615:17;9606:6;9562:71;:::i;:::-;9418:222;;;;:::o;9646:351::-;9716:6;9765:2;9753:9;9744:7;9740:23;9736:32;9733:119;;;9771:79;;:::i;:::-;9733:119;9891:1;9916:64;9972:7;9963:6;9952:9;9948:22;9916:64;:::i;:::-;9906:74;;9862:128;9646:351;;;;:::o;10003:332::-;10124:4;10162:2;10151:9;10147:18;10139:26;;10175:71;10243:1;10232:9;10228:17;10219:6;10175:71;:::i;:::-;10256:72;10324:2;10313:9;10309:18;10300:6;10256:72;:::i;:::-;10003:332;;;;;:::o;463:4313:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEAD_ADDRESS_1629": {
									"entryPoint": 2012,
									"id": 1629,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 4223,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5487,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 5360,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4628,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4940,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4216,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1107": {
									"entryPoint": 4833,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1099": {
									"entryPoint": 4763,
									"id": 1099,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_1033": {
									"entryPoint": 5262,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1004": {
									"entryPoint": 6030,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1017": {
									"entryPoint": 5966,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 4241,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5067,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4388,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1049": {
									"entryPoint": 4843,
									"id": 1049,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1917": {
									"entryPoint": 5950,
									"id": 1917,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6095,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1978": {
									"entryPoint": 2024,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3954,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1560,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2406,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnShare_1618": {
									"entryPoint": 1410,
									"id": 1618,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTax_1609": {
									"entryPoint": 2018,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1958,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromTax_2045": {
									"entryPoint": 3786,
									"id": 2045,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isExcludedFromTax_1633": {
									"entryPoint": 3919,
									"id": 1633,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityShare_1615": {
									"entryPoint": 1594,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2060": {
									"entryPoint": 1990,
									"id": 2060,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1416,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2512,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2099": {
									"entryPoint": 2494,
									"id": 2099,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_992": {
									"entryPoint": 2385,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2475,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsShare_1621": {
									"entryPoint": 1966,
									"id": 1621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1612": {
									"entryPoint": 3948,
									"id": 1612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTaxes_2090": {
									"entryPoint": 3688,
									"id": 2090,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2552,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1600,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1609,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4084,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1898": {
									"entryPoint": 2730,
									"id": 1898,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2696,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1626": {
									"entryPoint": 3882,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswaprouter_1624": {
									"entryPoint": 1655,
									"id": 1624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_2108": {
									"entryPoint": 1972,
									"id": 2108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2029": {
									"entryPoint": 1692,
									"id": 2029,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$1578_to_t_address_fromStack": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7826,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1578__to_t_address__fromStack_reversed": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$1578_to_t_address": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13151:12",
										"nodeType": "YulBlock",
										"src": "0:13151:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:12",
													"nodeType": "YulBlock",
													"src": "52:32:12",
													"statements": [
														{
															"nativeSrc": "62:16:12",
															"nodeType": "YulAssignment",
															"src": "62:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:12",
																"nodeType": "YulIdentifier",
																"src": "73:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:12",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:12",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:77:12"
											},
											{
												"body": {
													"nativeSrc": "155:53:12",
													"nodeType": "YulBlock",
													"src": "155:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:12"
																		},
																		"nativeSrc": "177:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:12"
																},
																"nativeSrc": "165:37:12",
																"nodeType": "YulFunctionCall",
																"src": "165:37:12"
															},
															"nativeSrc": "165:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:12",
														"nodeType": "YulTypedName",
														"src": "143:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:12",
														"nodeType": "YulTypedName",
														"src": "150:3:12",
														"type": ""
													}
												],
												"src": "90:118:12"
											},
											{
												"body": {
													"nativeSrc": "312:124:12",
													"nodeType": "YulBlock",
													"src": "312:124:12",
													"statements": [
														{
															"nativeSrc": "322:26:12",
															"nodeType": "YulAssignment",
															"src": "322:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:12",
																		"nodeType": "YulLiteral",
																		"src": "345:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:12"
																},
																"nativeSrc": "330:18:12",
																"nodeType": "YulFunctionCall",
																"src": "330:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:12",
																				"nodeType": "YulLiteral",
																				"src": "426:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:12"
																		},
																		"nativeSrc": "411:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:12"
																},
																"nativeSrc": "358:71:12",
																"nodeType": "YulFunctionCall",
																"src": "358:71:12"
															},
															"nativeSrc": "358:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:12",
														"nodeType": "YulTypedName",
														"src": "284:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:12",
														"nodeType": "YulTypedName",
														"src": "296:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:12",
														"nodeType": "YulTypedName",
														"src": "307:4:12",
														"type": ""
													}
												],
												"src": "214:222:12"
											},
											{
												"body": {
													"nativeSrc": "501:40:12",
													"nodeType": "YulBlock",
													"src": "501:40:12",
													"statements": [
														{
															"nativeSrc": "512:22:12",
															"nodeType": "YulAssignment",
															"src": "512:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:12"
																},
																"nativeSrc": "522:12:12",
																"nodeType": "YulFunctionCall",
																"src": "522:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:12",
														"nodeType": "YulTypedName",
														"src": "484:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:12",
														"nodeType": "YulTypedName",
														"src": "494:6:12",
														"type": ""
													}
												],
												"src": "442:99:12"
											},
											{
												"body": {
													"nativeSrc": "643:73:12",
													"nodeType": "YulBlock",
													"src": "643:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:12"
																},
																"nativeSrc": "653:19:12",
																"nodeType": "YulFunctionCall",
																"src": "653:19:12"
															},
															"nativeSrc": "653:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:12"
														},
														{
															"nativeSrc": "681:29:12",
															"nodeType": "YulAssignment",
															"src": "681:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:12",
																		"nodeType": "YulLiteral",
																		"src": "705:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:12"
																},
																"nativeSrc": "696:14:12",
																"nodeType": "YulFunctionCall",
																"src": "696:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:12",
														"nodeType": "YulTypedName",
														"src": "615:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:12",
														"nodeType": "YulTypedName",
														"src": "620:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:12",
														"nodeType": "YulTypedName",
														"src": "631:11:12",
														"type": ""
													}
												],
												"src": "547:169:12"
											},
											{
												"body": {
													"nativeSrc": "784:77:12",
													"nodeType": "YulBlock",
													"src": "784:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:12"
																},
																"nativeSrc": "795:23:12",
																"nodeType": "YulFunctionCall",
																"src": "795:23:12"
															},
															"nativeSrc": "795:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:12"
																		},
																		"nativeSrc": "834:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:12",
																		"nodeType": "YulLiteral",
																		"src": "852:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:12"
																},
																"nativeSrc": "827:27:12",
																"nodeType": "YulFunctionCall",
																"src": "827:27:12"
															},
															"nativeSrc": "827:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:12",
														"nodeType": "YulTypedName",
														"src": "766:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:12",
														"nodeType": "YulTypedName",
														"src": "771:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:12",
														"nodeType": "YulTypedName",
														"src": "776:6:12",
														"type": ""
													}
												],
												"src": "722:139:12"
											},
											{
												"body": {
													"nativeSrc": "915:54:12",
													"nodeType": "YulBlock",
													"src": "915:54:12",
													"statements": [
														{
															"nativeSrc": "925:38:12",
															"nodeType": "YulAssignment",
															"src": "925:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:12",
																				"nodeType": "YulLiteral",
																				"src": "950:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:12",
																				"nodeType": "YulLiteral",
																				"src": "959:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:28:12",
																"nodeType": "YulFunctionCall",
																"src": "935:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:12",
														"nodeType": "YulTypedName",
														"src": "898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:12",
														"nodeType": "YulTypedName",
														"src": "908:6:12",
														"type": ""
													}
												],
												"src": "867:102:12"
											},
											{
												"body": {
													"nativeSrc": "1067:285:12",
													"nodeType": "YulBlock",
													"src": "1067:285:12",
													"statements": [
														{
															"nativeSrc": "1077:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:12"
																},
																"nativeSrc": "1091:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:12",
															"nodeType": "YulAssignment",
															"src": "1139:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:12"
																},
																"nativeSrc": "1146:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:12"
																		},
																		"nativeSrc": "1261:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:12"
																},
																"nativeSrc": "1226:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:12"
															},
															"nativeSrc": "1226:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:12"
														},
														{
															"nativeSrc": "1300:46:12",
															"nodeType": "YulAssignment",
															"src": "1300:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:12"
																		},
																		"nativeSrc": "1316:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:12"
																},
																"nativeSrc": "1307:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:12",
														"nodeType": "YulTypedName",
														"src": "1048:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:12",
														"nodeType": "YulTypedName",
														"src": "1055:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:12",
														"nodeType": "YulTypedName",
														"src": "1063:3:12",
														"type": ""
													}
												],
												"src": "975:377:12"
											},
											{
												"body": {
													"nativeSrc": "1476:195:12",
													"nodeType": "YulBlock",
													"src": "1476:195:12",
													"statements": [
														{
															"nativeSrc": "1486:26:12",
															"nodeType": "YulAssignment",
															"src": "1486:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:12"
																},
																"nativeSrc": "1494:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:12"
																		},
																		"nativeSrc": "1529:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:12"
																		},
																		"nativeSrc": "1548:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:12"
																},
																"nativeSrc": "1522:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:12"
															},
															"nativeSrc": "1522:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:12"
														},
														{
															"nativeSrc": "1578:86:12",
															"nodeType": "YulAssignment",
															"src": "1578:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:12"
																},
																"nativeSrc": "1586:78:12",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:12",
														"nodeType": "YulTypedName",
														"src": "1448:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:12",
														"nodeType": "YulTypedName",
														"src": "1460:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:12",
														"nodeType": "YulTypedName",
														"src": "1471:4:12",
														"type": ""
													}
												],
												"src": "1358:313:12"
											},
											{
												"body": {
													"nativeSrc": "1717:35:12",
													"nodeType": "YulBlock",
													"src": "1717:35:12",
													"statements": [
														{
															"nativeSrc": "1727:19:12",
															"nodeType": "YulAssignment",
															"src": "1727:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:12"
																},
																"nativeSrc": "1737:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:12",
														"nodeType": "YulTypedName",
														"src": "1710:6:12",
														"type": ""
													}
												],
												"src": "1677:75:12"
											},
											{
												"body": {
													"nativeSrc": "1847:28:12",
													"nodeType": "YulBlock",
													"src": "1847:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:12"
																},
																"nativeSrc": "1857:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:12"
															},
															"nativeSrc": "1857:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:12"
											},
											{
												"body": {
													"nativeSrc": "1970:28:12",
													"nodeType": "YulBlock",
													"src": "1970:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:12"
																},
																"nativeSrc": "1980:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:12"
															},
															"nativeSrc": "1980:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:12"
											},
											{
												"body": {
													"nativeSrc": "2049:81:12",
													"nodeType": "YulBlock",
													"src": "2049:81:12",
													"statements": [
														{
															"nativeSrc": "2059:65:12",
															"nodeType": "YulAssignment",
															"src": "2059:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:12"
																},
																"nativeSrc": "2070:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:12",
														"nodeType": "YulTypedName",
														"src": "2031:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:12",
														"nodeType": "YulTypedName",
														"src": "2041:7:12",
														"type": ""
													}
												],
												"src": "2004:126:12"
											},
											{
												"body": {
													"nativeSrc": "2181:51:12",
													"nodeType": "YulBlock",
													"src": "2181:51:12",
													"statements": [
														{
															"nativeSrc": "2191:35:12",
															"nodeType": "YulAssignment",
															"src": "2191:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:12"
																},
																"nativeSrc": "2202:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:12",
														"nodeType": "YulTypedName",
														"src": "2163:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:12",
														"nodeType": "YulTypedName",
														"src": "2173:7:12",
														"type": ""
													}
												],
												"src": "2136:96:12"
											},
											{
												"body": {
													"nativeSrc": "2281:79:12",
													"nodeType": "YulBlock",
													"src": "2281:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:12",
																"nodeType": "YulBlock",
																"src": "2338:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:12"
																			},
																			"nativeSrc": "2340:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:12"
																		},
																		"nativeSrc": "2340:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:12"
																				},
																				"nativeSrc": "2311:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:12"
																		},
																		"nativeSrc": "2301:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:12"
																},
																"nativeSrc": "2294:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:12"
															},
															"nativeSrc": "2291:63:12",
															"nodeType": "YulIf",
															"src": "2291:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:12",
														"nodeType": "YulTypedName",
														"src": "2274:5:12",
														"type": ""
													}
												],
												"src": "2238:122:12"
											},
											{
												"body": {
													"nativeSrc": "2418:87:12",
													"nodeType": "YulBlock",
													"src": "2418:87:12",
													"statements": [
														{
															"nativeSrc": "2428:29:12",
															"nodeType": "YulAssignment",
															"src": "2428:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:12"
																},
																"nativeSrc": "2437:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:12"
																},
																"nativeSrc": "2466:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:12"
															},
															"nativeSrc": "2466:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:12",
														"nodeType": "YulTypedName",
														"src": "2396:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:12",
														"nodeType": "YulTypedName",
														"src": "2404:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:12",
														"nodeType": "YulTypedName",
														"src": "2412:5:12",
														"type": ""
													}
												],
												"src": "2366:139:12"
											},
											{
												"body": {
													"nativeSrc": "2554:79:12",
													"nodeType": "YulBlock",
													"src": "2554:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:12",
																"nodeType": "YulBlock",
																"src": "2611:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:12"
																			},
																			"nativeSrc": "2613:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:12"
																		},
																		"nativeSrc": "2613:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:12"
																				},
																				"nativeSrc": "2584:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:12"
																		},
																		"nativeSrc": "2574:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:12"
																},
																"nativeSrc": "2567:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:12"
															},
															"nativeSrc": "2564:63:12",
															"nodeType": "YulIf",
															"src": "2564:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:12",
														"nodeType": "YulTypedName",
														"src": "2547:5:12",
														"type": ""
													}
												],
												"src": "2511:122:12"
											},
											{
												"body": {
													"nativeSrc": "2691:87:12",
													"nodeType": "YulBlock",
													"src": "2691:87:12",
													"statements": [
														{
															"nativeSrc": "2701:29:12",
															"nodeType": "YulAssignment",
															"src": "2701:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:12"
																},
																"nativeSrc": "2710:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:12"
																},
																"nativeSrc": "2739:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:12"
															},
															"nativeSrc": "2739:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:12",
														"nodeType": "YulTypedName",
														"src": "2669:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:12",
														"nodeType": "YulTypedName",
														"src": "2677:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:12",
														"nodeType": "YulTypedName",
														"src": "2685:5:12",
														"type": ""
													}
												],
												"src": "2639:139:12"
											},
											{
												"body": {
													"nativeSrc": "2867:391:12",
													"nodeType": "YulBlock",
													"src": "2867:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:12",
																"nodeType": "YulBlock",
																"src": "2913:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:12"
																			},
																			"nativeSrc": "2915:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:12"
																		},
																		"nativeSrc": "2915:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:12"
																		},
																		"nativeSrc": "2884:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:12"
																},
																"nativeSrc": "2880:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:12"
															},
															"nativeSrc": "2877:119:12",
															"nodeType": "YulIf",
															"src": "2877:119:12"
														},
														{
															"nativeSrc": "3006:117:12",
															"nodeType": "YulBlock",
															"src": "3006:117:12",
															"statements": [
																{
																	"nativeSrc": "3021:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:12"
																				},
																				"nativeSrc": "3081:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:12"
																		},
																		"nativeSrc": "3060:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:12",
															"nodeType": "YulBlock",
															"src": "3133:118:12",
															"statements": [
																{
																	"nativeSrc": "3148:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:12"
																				},
																				"nativeSrc": "3209:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:12"
																		},
																		"nativeSrc": "3188:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:12",
														"nodeType": "YulTypedName",
														"src": "2829:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:12",
														"nodeType": "YulTypedName",
														"src": "2840:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:12",
														"nodeType": "YulTypedName",
														"src": "2852:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:12",
														"nodeType": "YulTypedName",
														"src": "2860:6:12",
														"type": ""
													}
												],
												"src": "2784:474:12"
											},
											{
												"body": {
													"nativeSrc": "3306:48:12",
													"nodeType": "YulBlock",
													"src": "3306:48:12",
													"statements": [
														{
															"nativeSrc": "3316:32:12",
															"nodeType": "YulAssignment",
															"src": "3316:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:12"
																		},
																		"nativeSrc": "3334:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:12"
																},
																"nativeSrc": "3327:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:12",
														"nodeType": "YulTypedName",
														"src": "3288:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:12",
														"nodeType": "YulTypedName",
														"src": "3298:7:12",
														"type": ""
													}
												],
												"src": "3264:90:12"
											},
											{
												"body": {
													"nativeSrc": "3419:50:12",
													"nodeType": "YulBlock",
													"src": "3419:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:12"
																		},
																		"nativeSrc": "3441:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:12"
																},
																"nativeSrc": "3429:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:12"
															},
															"nativeSrc": "3429:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:12",
														"nodeType": "YulTypedName",
														"src": "3407:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:12",
														"nodeType": "YulTypedName",
														"src": "3414:3:12",
														"type": ""
													}
												],
												"src": "3360:109:12"
											},
											{
												"body": {
													"nativeSrc": "3567:118:12",
													"nodeType": "YulBlock",
													"src": "3567:118:12",
													"statements": [
														{
															"nativeSrc": "3577:26:12",
															"nodeType": "YulAssignment",
															"src": "3577:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:12"
																},
																"nativeSrc": "3585:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:12"
																		},
																		"nativeSrc": "3660:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:12"
																},
																"nativeSrc": "3613:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:12"
															},
															"nativeSrc": "3613:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:12",
														"nodeType": "YulTypedName",
														"src": "3539:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:12",
														"nodeType": "YulTypedName",
														"src": "3551:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:12",
														"nodeType": "YulTypedName",
														"src": "3562:4:12",
														"type": ""
													}
												],
												"src": "3475:210:12"
											},
											{
												"body": {
													"nativeSrc": "3791:519:12",
													"nodeType": "YulBlock",
													"src": "3791:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:12",
																"nodeType": "YulBlock",
																"src": "3837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:12"
																			},
																			"nativeSrc": "3839:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:12"
																		},
																		"nativeSrc": "3839:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:12"
																		},
																		"nativeSrc": "3808:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:12"
																},
																"nativeSrc": "3804:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:12"
															},
															"nativeSrc": "3801:119:12",
															"nodeType": "YulIf",
															"src": "3801:119:12"
														},
														{
															"nativeSrc": "3930:117:12",
															"nodeType": "YulBlock",
															"src": "3930:117:12",
															"statements": [
																{
																	"nativeSrc": "3945:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:12"
																				},
																				"nativeSrc": "4005:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:12"
																		},
																		"nativeSrc": "3984:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:12",
															"nodeType": "YulBlock",
															"src": "4057:118:12",
															"statements": [
																{
																	"nativeSrc": "4072:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:12"
																				},
																				"nativeSrc": "4133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:12"
																		},
																		"nativeSrc": "4112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:12",
															"nodeType": "YulBlock",
															"src": "4185:118:12",
															"statements": [
																{
																	"nativeSrc": "4200:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:12"
																				},
																				"nativeSrc": "4261:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:12"
																		},
																		"nativeSrc": "4240:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:12",
														"nodeType": "YulTypedName",
														"src": "3745:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:12",
														"nodeType": "YulTypedName",
														"src": "3756:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:12",
														"nodeType": "YulTypedName",
														"src": "3768:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:12",
														"nodeType": "YulTypedName",
														"src": "3776:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:12",
														"nodeType": "YulTypedName",
														"src": "3784:6:12",
														"type": ""
													}
												],
												"src": "3691:619:12"
											},
											{
												"body": {
													"nativeSrc": "4348:28:12",
													"nodeType": "YulBlock",
													"src": "4348:28:12",
													"statements": [
														{
															"nativeSrc": "4358:12:12",
															"nodeType": "YulAssignment",
															"src": "4358:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4365:5:12",
																"nodeType": "YulIdentifier",
																"src": "4365:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4358:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4316:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:12",
														"nodeType": "YulTypedName",
														"src": "4334:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4344:3:12",
														"nodeType": "YulTypedName",
														"src": "4344:3:12",
														"type": ""
													}
												],
												"src": "4316:60:12"
											},
											{
												"body": {
													"nativeSrc": "4442:82:12",
													"nodeType": "YulBlock",
													"src": "4442:82:12",
													"statements": [
														{
															"nativeSrc": "4452:66:12",
															"nodeType": "YulAssignment",
															"src": "4452:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4510:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4510:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4492:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4492:17:12"
																				},
																				"nativeSrc": "4492:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4492:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4483:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "4483:8:12"
																		},
																		"nativeSrc": "4483:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4465:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "4465:17:12"
																},
																"nativeSrc": "4465:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4465:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4382:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:12",
														"nodeType": "YulTypedName",
														"src": "4422:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:12",
														"nodeType": "YulTypedName",
														"src": "4432:9:12",
														"type": ""
													}
												],
												"src": "4382:142:12"
											},
											{
												"body": {
													"nativeSrc": "4590:66:12",
													"nodeType": "YulBlock",
													"src": "4590:66:12",
													"statements": [
														{
															"nativeSrc": "4600:50:12",
															"nodeType": "YulAssignment",
															"src": "4600:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4644:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4644:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4613:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "4613:30:12"
																},
																"nativeSrc": "4613:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4600:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4600:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4530:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:12",
														"nodeType": "YulTypedName",
														"src": "4570:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4580:9:12",
														"nodeType": "YulTypedName",
														"src": "4580:9:12",
														"type": ""
													}
												],
												"src": "4530:126:12"
											},
											{
												"body": {
													"nativeSrc": "4749:66:12",
													"nodeType": "YulBlock",
													"src": "4749:66:12",
													"statements": [
														{
															"nativeSrc": "4759:50:12",
															"nodeType": "YulAssignment",
															"src": "4759:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4803:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4803:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4772:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "4772:30:12"
																},
																"nativeSrc": "4772:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4772:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4759:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4759:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1578_to_t_address",
												"nativeSrc": "4662:153:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4729:5:12",
														"nodeType": "YulTypedName",
														"src": "4729:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4739:9:12",
														"nodeType": "YulTypedName",
														"src": "4739:9:12",
														"type": ""
													}
												],
												"src": "4662:153:12"
											},
											{
												"body": {
													"nativeSrc": "4913:93:12",
													"nodeType": "YulBlock",
													"src": "4913:93:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4930:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4930:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4993:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4993:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1578_to_t_address",
																			"nativeSrc": "4935:57:12",
																			"nodeType": "YulIdentifier",
																			"src": "4935:57:12"
																		},
																		"nativeSrc": "4935:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4935:64:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:12"
																},
																"nativeSrc": "4923:77:12",
																"nodeType": "YulFunctionCall",
																"src": "4923:77:12"
															},
															"nativeSrc": "4923:77:12",
															"nodeType": "YulExpressionStatement",
															"src": "4923:77:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1578_to_t_address_fromStack",
												"nativeSrc": "4821:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4901:5:12",
														"nodeType": "YulTypedName",
														"src": "4901:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4908:3:12",
														"nodeType": "YulTypedName",
														"src": "4908:3:12",
														"type": ""
													}
												],
												"src": "4821:185:12"
											},
											{
												"body": {
													"nativeSrc": "5137:151:12",
													"nodeType": "YulBlock",
													"src": "5137:151:12",
													"statements": [
														{
															"nativeSrc": "5147:26:12",
															"nodeType": "YulAssignment",
															"src": "5147:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5159:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5170:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:12"
																},
																"nativeSrc": "5155:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5155:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5147:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5254:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5254:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5267:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5267:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5278:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5278:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5263:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:12"
																		},
																		"nativeSrc": "5263:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5263:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1578_to_t_address_fromStack",
																	"nativeSrc": "5183:70:12",
																	"nodeType": "YulIdentifier",
																	"src": "5183:70:12"
																},
																"nativeSrc": "5183:98:12",
																"nodeType": "YulFunctionCall",
																"src": "5183:98:12"
															},
															"nativeSrc": "5183:98:12",
															"nodeType": "YulExpressionStatement",
															"src": "5183:98:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1578__to_t_address__fromStack_reversed",
												"nativeSrc": "5012:276:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5109:9:12",
														"nodeType": "YulTypedName",
														"src": "5109:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5121:6:12",
														"nodeType": "YulTypedName",
														"src": "5121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5132:4:12",
														"nodeType": "YulTypedName",
														"src": "5132:4:12",
														"type": ""
													}
												],
												"src": "5012:276:12"
											},
											{
												"body": {
													"nativeSrc": "5360:263:12",
													"nodeType": "YulBlock",
													"src": "5360:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5406:83:12",
																"nodeType": "YulBlock",
																"src": "5406:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5408:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5408:77:12"
																			},
																			"nativeSrc": "5408:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5408:79:12"
																		},
																		"nativeSrc": "5408:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5408:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5381:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5381:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5377:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:12"
																		},
																		"nativeSrc": "5377:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5373:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:12"
																},
																"nativeSrc": "5373:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5373:32:12"
															},
															"nativeSrc": "5370:119:12",
															"nodeType": "YulIf",
															"src": "5370:119:12"
														},
														{
															"nativeSrc": "5499:117:12",
															"nodeType": "YulBlock",
															"src": "5499:117:12",
															"statements": [
																{
																	"nativeSrc": "5514:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5514:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5528:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5528:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5518:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5518:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5543:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5543:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5578:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5578:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5589:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5589:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5574:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5574:3:12"
																				},
																				"nativeSrc": "5574:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5574:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5598:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5598:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5553:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5553:20:12"
																		},
																		"nativeSrc": "5553:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5553:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5543:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5543:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5294:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5330:9:12",
														"nodeType": "YulTypedName",
														"src": "5330:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5341:7:12",
														"nodeType": "YulTypedName",
														"src": "5341:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5353:6:12",
														"nodeType": "YulTypedName",
														"src": "5353:6:12",
														"type": ""
													}
												],
												"src": "5294:329:12"
											},
											{
												"body": {
													"nativeSrc": "5672:43:12",
													"nodeType": "YulBlock",
													"src": "5672:43:12",
													"statements": [
														{
															"nativeSrc": "5682:27:12",
															"nodeType": "YulAssignment",
															"src": "5682:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5697:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5697:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5704:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:12"
																},
																"nativeSrc": "5693:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5693:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5682:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5682:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5629:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5654:5:12",
														"nodeType": "YulTypedName",
														"src": "5654:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5664:7:12",
														"nodeType": "YulTypedName",
														"src": "5664:7:12",
														"type": ""
													}
												],
												"src": "5629:86:12"
											},
											{
												"body": {
													"nativeSrc": "5782:51:12",
													"nodeType": "YulBlock",
													"src": "5782:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5799:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5799:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5820:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5820:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5804:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "5804:15:12"
																		},
																		"nativeSrc": "5804:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:12"
																},
																"nativeSrc": "5792:35:12",
																"nodeType": "YulFunctionCall",
																"src": "5792:35:12"
															},
															"nativeSrc": "5792:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "5792:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5721:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5770:5:12",
														"nodeType": "YulTypedName",
														"src": "5770:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5777:3:12",
														"nodeType": "YulTypedName",
														"src": "5777:3:12",
														"type": ""
													}
												],
												"src": "5721:112:12"
											},
											{
												"body": {
													"nativeSrc": "5933:120:12",
													"nodeType": "YulBlock",
													"src": "5933:120:12",
													"statements": [
														{
															"nativeSrc": "5943:26:12",
															"nodeType": "YulAssignment",
															"src": "5943:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5955:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5951:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:12"
																},
																"nativeSrc": "5951:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5951:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5943:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5943:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6019:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6032:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6043:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6043:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6028:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:12"
																		},
																		"nativeSrc": "6028:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6028:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5979:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "5979:39:12"
																},
																"nativeSrc": "5979:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5979:67:12"
															},
															"nativeSrc": "5979:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5979:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5839:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5905:9:12",
														"nodeType": "YulTypedName",
														"src": "5905:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5917:6:12",
														"nodeType": "YulTypedName",
														"src": "5917:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5928:4:12",
														"nodeType": "YulTypedName",
														"src": "5928:4:12",
														"type": ""
													}
												],
												"src": "5839:214:12"
											},
											{
												"body": {
													"nativeSrc": "6124:53:12",
													"nodeType": "YulBlock",
													"src": "6124:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6141:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6164:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6164:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6146:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6146:17:12"
																		},
																		"nativeSrc": "6146:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6134:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:12"
																},
																"nativeSrc": "6134:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6134:37:12"
															},
															"nativeSrc": "6134:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6134:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6059:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6112:5:12",
														"nodeType": "YulTypedName",
														"src": "6112:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6119:3:12",
														"nodeType": "YulTypedName",
														"src": "6119:3:12",
														"type": ""
													}
												],
												"src": "6059:118:12"
											},
											{
												"body": {
													"nativeSrc": "6281:124:12",
													"nodeType": "YulBlock",
													"src": "6281:124:12",
													"statements": [
														{
															"nativeSrc": "6291:26:12",
															"nodeType": "YulAssignment",
															"src": "6291:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6303:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6314:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6299:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:12"
																},
																"nativeSrc": "6299:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6299:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6291:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6384:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6395:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6395:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6380:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:12"
																		},
																		"nativeSrc": "6380:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6380:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6327:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6327:43:12"
																},
																"nativeSrc": "6327:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6327:71:12"
															},
															"nativeSrc": "6327:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6327:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6183:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6253:9:12",
														"nodeType": "YulTypedName",
														"src": "6253:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6265:6:12",
														"nodeType": "YulTypedName",
														"src": "6265:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6276:4:12",
														"nodeType": "YulTypedName",
														"src": "6276:4:12",
														"type": ""
													}
												],
												"src": "6183:222:12"
											},
											{
												"body": {
													"nativeSrc": "6477:263:12",
													"nodeType": "YulBlock",
													"src": "6477:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6523:83:12",
																"nodeType": "YulBlock",
																"src": "6523:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6525:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6525:77:12"
																			},
																			"nativeSrc": "6525:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6525:79:12"
																		},
																		"nativeSrc": "6525:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6525:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6498:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6498:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6507:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6494:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6494:3:12"
																		},
																		"nativeSrc": "6494:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6494:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6519:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6519:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:12"
																},
																"nativeSrc": "6490:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6490:32:12"
															},
															"nativeSrc": "6487:119:12",
															"nodeType": "YulIf",
															"src": "6487:119:12"
														},
														{
															"nativeSrc": "6616:117:12",
															"nodeType": "YulBlock",
															"src": "6616:117:12",
															"statements": [
																{
																	"nativeSrc": "6631:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6631:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6645:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6645:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6635:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6635:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6660:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6660:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6695:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6695:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6706:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6706:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6691:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6691:3:12"
																				},
																				"nativeSrc": "6691:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6691:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6715:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6715:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6670:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6670:20:12"
																		},
																		"nativeSrc": "6670:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6660:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6660:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6411:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6447:9:12",
														"nodeType": "YulTypedName",
														"src": "6447:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6458:7:12",
														"nodeType": "YulTypedName",
														"src": "6458:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6470:6:12",
														"nodeType": "YulTypedName",
														"src": "6470:6:12",
														"type": ""
													}
												],
												"src": "6411:329:12"
											},
											{
												"body": {
													"nativeSrc": "6829:391:12",
													"nodeType": "YulBlock",
													"src": "6829:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6875:83:12",
																"nodeType": "YulBlock",
																"src": "6875:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6877:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6877:77:12"
																			},
																			"nativeSrc": "6877:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6877:79:12"
																		},
																		"nativeSrc": "6877:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6877:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6850:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6859:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6846:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:12"
																		},
																		"nativeSrc": "6846:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6871:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6871:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6842:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:12"
																},
																"nativeSrc": "6842:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6842:32:12"
															},
															"nativeSrc": "6839:119:12",
															"nodeType": "YulIf",
															"src": "6839:119:12"
														},
														{
															"nativeSrc": "6968:117:12",
															"nodeType": "YulBlock",
															"src": "6968:117:12",
															"statements": [
																{
																	"nativeSrc": "6983:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6983:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6997:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6997:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6987:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6987:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7012:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7012:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7047:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7047:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7058:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7058:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7043:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7043:3:12"
																				},
																				"nativeSrc": "7043:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7043:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7067:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7067:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7022:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7022:20:12"
																		},
																		"nativeSrc": "7022:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7022:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7012:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7012:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7095:118:12",
															"nodeType": "YulBlock",
															"src": "7095:118:12",
															"statements": [
																{
																	"nativeSrc": "7110:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7140:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7140:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7175:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7175:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7186:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7186:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7171:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7171:3:12"
																				},
																				"nativeSrc": "7171:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7171:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7195:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7195:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7150:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7150:20:12"
																		},
																		"nativeSrc": "7150:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7140:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7140:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6746:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6791:9:12",
														"nodeType": "YulTypedName",
														"src": "6791:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6802:7:12",
														"nodeType": "YulTypedName",
														"src": "6802:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6814:6:12",
														"nodeType": "YulTypedName",
														"src": "6814:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6822:6:12",
														"nodeType": "YulTypedName",
														"src": "6822:6:12",
														"type": ""
													}
												],
												"src": "6746:474:12"
											},
											{
												"body": {
													"nativeSrc": "7266:76:12",
													"nodeType": "YulBlock",
													"src": "7266:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7320:16:12",
																"nodeType": "YulBlock",
																"src": "7320:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7329:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7329:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7332:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7332:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7322:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7322:6:12"
																			},
																			"nativeSrc": "7322:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7322:12:12"
																		},
																		"nativeSrc": "7322:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7322:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7289:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7289:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7311:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7311:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7296:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "7296:14:12"
																				},
																				"nativeSrc": "7296:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7296:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7286:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7286:2:12"
																		},
																		"nativeSrc": "7286:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:12"
																},
																"nativeSrc": "7279:40:12",
																"nodeType": "YulFunctionCall",
																"src": "7279:40:12"
															},
															"nativeSrc": "7276:60:12",
															"nodeType": "YulIf",
															"src": "7276:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7226:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7259:5:12",
														"nodeType": "YulTypedName",
														"src": "7259:5:12",
														"type": ""
													}
												],
												"src": "7226:116:12"
											},
											{
												"body": {
													"nativeSrc": "7397:84:12",
													"nodeType": "YulBlock",
													"src": "7397:84:12",
													"statements": [
														{
															"nativeSrc": "7407:29:12",
															"nodeType": "YulAssignment",
															"src": "7407:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7429:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7429:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7416:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7416:12:12"
																},
																"nativeSrc": "7416:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7416:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7407:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7407:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7469:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7469:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7445:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "7445:23:12"
																},
																"nativeSrc": "7445:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7445:30:12"
															},
															"nativeSrc": "7445:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7348:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7375:6:12",
														"nodeType": "YulTypedName",
														"src": "7375:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7383:3:12",
														"nodeType": "YulTypedName",
														"src": "7383:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7391:5:12",
														"nodeType": "YulTypedName",
														"src": "7391:5:12",
														"type": ""
													}
												],
												"src": "7348:133:12"
											},
											{
												"body": {
													"nativeSrc": "7567:388:12",
													"nodeType": "YulBlock",
													"src": "7567:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7613:83:12",
																"nodeType": "YulBlock",
																"src": "7613:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7615:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7615:77:12"
																			},
																			"nativeSrc": "7615:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7615:79:12"
																		},
																		"nativeSrc": "7615:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7615:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7588:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7588:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7597:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:12"
																		},
																		"nativeSrc": "7584:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7584:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7580:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7580:3:12"
																},
																"nativeSrc": "7580:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7580:32:12"
															},
															"nativeSrc": "7577:119:12",
															"nodeType": "YulIf",
															"src": "7577:119:12"
														},
														{
															"nativeSrc": "7706:117:12",
															"nodeType": "YulBlock",
															"src": "7706:117:12",
															"statements": [
																{
																	"nativeSrc": "7721:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7721:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7735:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7725:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7725:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7750:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7750:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7785:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7785:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7796:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7796:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7781:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7781:3:12"
																				},
																				"nativeSrc": "7781:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7781:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7805:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7805:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7760:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7760:20:12"
																		},
																		"nativeSrc": "7760:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7760:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7750:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7750:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7833:115:12",
															"nodeType": "YulBlock",
															"src": "7833:115:12",
															"statements": [
																{
																	"nativeSrc": "7848:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7848:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7862:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7852:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7852:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7878:60:12",
																	"nodeType": "YulAssignment",
																	"src": "7878:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7910:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7910:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7921:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7921:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7906:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7906:3:12"
																				},
																				"nativeSrc": "7906:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7906:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7930:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7930:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7888:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7888:17:12"
																		},
																		"nativeSrc": "7888:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7888:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7878:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7878:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7487:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7529:9:12",
														"nodeType": "YulTypedName",
														"src": "7529:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7540:7:12",
														"nodeType": "YulTypedName",
														"src": "7540:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7552:6:12",
														"nodeType": "YulTypedName",
														"src": "7552:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7560:6:12",
														"nodeType": "YulTypedName",
														"src": "7560:6:12",
														"type": ""
													}
												],
												"src": "7487:468:12"
											},
											{
												"body": {
													"nativeSrc": "8044:391:12",
													"nodeType": "YulBlock",
													"src": "8044:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8090:83:12",
																"nodeType": "YulBlock",
																"src": "8090:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8092:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8092:77:12"
																			},
																			"nativeSrc": "8092:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8092:79:12"
																		},
																		"nativeSrc": "8092:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8092:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8065:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8074:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8061:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:12"
																		},
																		"nativeSrc": "8061:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8061:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8086:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8057:3:12"
																},
																"nativeSrc": "8057:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8057:32:12"
															},
															"nativeSrc": "8054:119:12",
															"nodeType": "YulIf",
															"src": "8054:119:12"
														},
														{
															"nativeSrc": "8183:117:12",
															"nodeType": "YulBlock",
															"src": "8183:117:12",
															"statements": [
																{
																	"nativeSrc": "8198:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8198:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8212:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8212:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8202:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8202:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8227:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8227:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8262:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8262:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8273:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8273:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8258:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8258:3:12"
																				},
																				"nativeSrc": "8258:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8258:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8282:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8282:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8237:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8237:20:12"
																		},
																		"nativeSrc": "8237:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8237:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8227:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8227:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8310:118:12",
															"nodeType": "YulBlock",
															"src": "8310:118:12",
															"statements": [
																{
																	"nativeSrc": "8325:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8325:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8339:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8339:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8329:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8329:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8355:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8355:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8390:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8390:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8401:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8401:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8386:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8386:3:12"
																				},
																				"nativeSrc": "8386:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8386:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8410:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8410:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8365:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8365:20:12"
																		},
																		"nativeSrc": "8365:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8365:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8355:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8355:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7961:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8006:9:12",
														"nodeType": "YulTypedName",
														"src": "8006:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8017:7:12",
														"nodeType": "YulTypedName",
														"src": "8017:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8029:6:12",
														"nodeType": "YulTypedName",
														"src": "8029:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8037:6:12",
														"nodeType": "YulTypedName",
														"src": "8037:6:12",
														"type": ""
													}
												],
												"src": "7961:474:12"
											},
											{
												"body": {
													"nativeSrc": "8469:152:12",
													"nodeType": "YulBlock",
													"src": "8469:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8486:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8486:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8489:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8489:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8479:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:12"
																},
																"nativeSrc": "8479:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8479:88:12"
															},
															"nativeSrc": "8479:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8479:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8583:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8583:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8586:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8586:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8576:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:12"
																},
																"nativeSrc": "8576:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8576:15:12"
															},
															"nativeSrc": "8576:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8576:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8607:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8607:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8610:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8610:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8600:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:12"
																},
																"nativeSrc": "8600:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8600:15:12"
															},
															"nativeSrc": "8600:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8600:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8441:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8441:180:12"
											},
											{
												"body": {
													"nativeSrc": "8678:269:12",
													"nodeType": "YulBlock",
													"src": "8678:269:12",
													"statements": [
														{
															"nativeSrc": "8688:22:12",
															"nodeType": "YulAssignment",
															"src": "8688:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8702:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8702:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8708:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8708:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8698:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:12"
																},
																"nativeSrc": "8698:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8698:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8688:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:12"
																}
															]
														},
														{
															"nativeSrc": "8719:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8719:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8749:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8749:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8755:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8745:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8745:3:12"
																},
																"nativeSrc": "8745:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8745:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8723:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8723:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8796:51:12",
																"nodeType": "YulBlock",
																"src": "8796:51:12",
																"statements": [
																	{
																		"nativeSrc": "8810:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8810:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8824:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8824:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8832:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8832:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8820:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8820:3:12"
																			},
																			"nativeSrc": "8820:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8820:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8810:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8810:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8776:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8776:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8769:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:12"
																},
																"nativeSrc": "8769:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8769:26:12"
															},
															"nativeSrc": "8766:81:12",
															"nodeType": "YulIf",
															"src": "8766:81:12"
														},
														{
															"body": {
																"nativeSrc": "8899:42:12",
																"nodeType": "YulBlock",
																"src": "8899:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8913:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8913:16:12"
																			},
																			"nativeSrc": "8913:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8913:18:12"
																		},
																		"nativeSrc": "8913:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8913:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8863:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8863:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8886:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8886:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8894:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8894:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8883:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8883:2:12"
																		},
																		"nativeSrc": "8883:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8883:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8860:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8860:2:12"
																},
																"nativeSrc": "8860:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8860:38:12"
															},
															"nativeSrc": "8857:84:12",
															"nodeType": "YulIf",
															"src": "8857:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8627:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8662:4:12",
														"nodeType": "YulTypedName",
														"src": "8662:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8671:6:12",
														"nodeType": "YulTypedName",
														"src": "8671:6:12",
														"type": ""
													}
												],
												"src": "8627:320:12"
											},
											{
												"body": {
													"nativeSrc": "9006:32:12",
													"nodeType": "YulBlock",
													"src": "9006:32:12",
													"statements": [
														{
															"nativeSrc": "9016:16:12",
															"nodeType": "YulAssignment",
															"src": "9016:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "9027:5:12",
																"nodeType": "YulIdentifier",
																"src": "9027:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9016:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9016:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "8953:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8988:5:12",
														"nodeType": "YulTypedName",
														"src": "8988:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8998:7:12",
														"nodeType": "YulTypedName",
														"src": "8998:7:12",
														"type": ""
													}
												],
												"src": "8953:85:12"
											},
											{
												"body": {
													"nativeSrc": "9112:90:12",
													"nodeType": "YulBlock",
													"src": "9112:90:12",
													"statements": [
														{
															"nativeSrc": "9122:74:12",
															"nodeType": "YulAssignment",
															"src": "9122:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9188:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9188:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9162:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "9162:25:12"
																				},
																				"nativeSrc": "9162:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9162:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9153:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "9153:8:12"
																		},
																		"nativeSrc": "9153:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9153:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9135:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9135:17:12"
																},
																"nativeSrc": "9135:61:12",
																"nodeType": "YulFunctionCall",
																"src": "9135:61:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9122:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "9122:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9044:158:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:12",
														"nodeType": "YulTypedName",
														"src": "9092:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9102:9:12",
														"nodeType": "YulTypedName",
														"src": "9102:9:12",
														"type": ""
													}
												],
												"src": "9044:158:12"
											},
											{
												"body": {
													"nativeSrc": "9281:74:12",
													"nodeType": "YulBlock",
													"src": "9281:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9298:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9298:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9342:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9342:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9303:38:12",
																			"nodeType": "YulIdentifier",
																			"src": "9303:38:12"
																		},
																		"nativeSrc": "9303:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9303:45:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:12"
																},
																"nativeSrc": "9291:58:12",
																"nodeType": "YulFunctionCall",
																"src": "9291:58:12"
															},
															"nativeSrc": "9291:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "9291:58:12"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9208:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9269:5:12",
														"nodeType": "YulTypedName",
														"src": "9269:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9276:3:12",
														"nodeType": "YulTypedName",
														"src": "9276:3:12",
														"type": ""
													}
												],
												"src": "9208:147:12"
											},
											{
												"body": {
													"nativeSrc": "9615:553:12",
													"nodeType": "YulBlock",
													"src": "9615:553:12",
													"statements": [
														{
															"nativeSrc": "9625:27:12",
															"nodeType": "YulAssignment",
															"src": "9625:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9637:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9637:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9648:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9648:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:12"
																},
																"nativeSrc": "9633:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9633:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9625:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9625:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9706:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9719:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9719:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9730:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9715:3:12"
																		},
																		"nativeSrc": "9715:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9662:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9662:43:12"
																},
																"nativeSrc": "9662:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9662:71:12"
															},
															"nativeSrc": "9662:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9662:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9787:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9787:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9800:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9800:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9811:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9811:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:12"
																		},
																		"nativeSrc": "9796:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9743:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9743:43:12"
																},
																"nativeSrc": "9743:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9743:72:12"
															},
															"nativeSrc": "9743:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9743:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9877:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9877:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9890:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9890:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9901:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9901:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9886:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9886:3:12"
																		},
																		"nativeSrc": "9886:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9886:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9825:51:12",
																	"nodeType": "YulIdentifier",
																	"src": "9825:51:12"
																},
																"nativeSrc": "9825:80:12",
																"nodeType": "YulFunctionCall",
																"src": "9825:80:12"
															},
															"nativeSrc": "9825:80:12",
															"nodeType": "YulExpressionStatement",
															"src": "9825:80:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9967:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9967:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9980:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9991:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9991:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9976:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:12"
																		},
																		"nativeSrc": "9976:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9976:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9915:51:12",
																	"nodeType": "YulIdentifier",
																	"src": "9915:51:12"
																},
																"nativeSrc": "9915:80:12",
																"nodeType": "YulFunctionCall",
																"src": "9915:80:12"
															},
															"nativeSrc": "9915:80:12",
															"nodeType": "YulExpressionStatement",
															"src": "9915:80:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10049:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10049:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10062:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10062:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10073:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10073:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10058:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10058:3:12"
																		},
																		"nativeSrc": "10058:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10058:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10005:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10005:43:12"
																},
																"nativeSrc": "10005:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10005:73:12"
															},
															"nativeSrc": "10005:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10005:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10132:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10132:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10145:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10156:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10156:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10141:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:12"
																		},
																		"nativeSrc": "10141:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10141:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10088:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10088:43:12"
																},
																"nativeSrc": "10088:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10088:73:12"
															},
															"nativeSrc": "10088:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10088:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9361:807:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9547:9:12",
														"nodeType": "YulTypedName",
														"src": "9547:9:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9559:6:12",
														"nodeType": "YulTypedName",
														"src": "9559:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9567:6:12",
														"nodeType": "YulTypedName",
														"src": "9567:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9575:6:12",
														"nodeType": "YulTypedName",
														"src": "9575:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9583:6:12",
														"nodeType": "YulTypedName",
														"src": "9583:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9591:6:12",
														"nodeType": "YulTypedName",
														"src": "9591:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9599:6:12",
														"nodeType": "YulTypedName",
														"src": "9599:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9610:4:12",
														"nodeType": "YulTypedName",
														"src": "9610:4:12",
														"type": ""
													}
												],
												"src": "9361:807:12"
											},
											{
												"body": {
													"nativeSrc": "10237:80:12",
													"nodeType": "YulBlock",
													"src": "10237:80:12",
													"statements": [
														{
															"nativeSrc": "10247:22:12",
															"nodeType": "YulAssignment",
															"src": "10247:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10262:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10262:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10256:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10256:5:12"
																},
																"nativeSrc": "10256:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10256:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10247:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10247:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10305:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10305:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10278:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "10278:26:12"
																},
																"nativeSrc": "10278:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10278:33:12"
															},
															"nativeSrc": "10278:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "10278:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10174:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10215:6:12",
														"nodeType": "YulTypedName",
														"src": "10215:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10223:3:12",
														"nodeType": "YulTypedName",
														"src": "10223:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10231:5:12",
														"nodeType": "YulTypedName",
														"src": "10231:5:12",
														"type": ""
													}
												],
												"src": "10174:143:12"
											},
											{
												"body": {
													"nativeSrc": "10434:552:12",
													"nodeType": "YulBlock",
													"src": "10434:552:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10480:83:12",
																"nodeType": "YulBlock",
																"src": "10480:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10482:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10482:77:12"
																			},
																			"nativeSrc": "10482:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10482:79:12"
																		},
																		"nativeSrc": "10482:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10455:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10455:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10464:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10464:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10451:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10451:3:12"
																		},
																		"nativeSrc": "10451:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10451:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10476:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10447:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10447:3:12"
																},
																"nativeSrc": "10447:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10447:32:12"
															},
															"nativeSrc": "10444:119:12",
															"nodeType": "YulIf",
															"src": "10444:119:12"
														},
														{
															"nativeSrc": "10573:128:12",
															"nodeType": "YulBlock",
															"src": "10573:128:12",
															"statements": [
																{
																	"nativeSrc": "10588:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10588:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10602:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10602:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10592:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10592:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10617:74:12",
																	"nodeType": "YulAssignment",
																	"src": "10617:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10663:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10663:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10674:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10674:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10659:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10659:3:12"
																				},
																				"nativeSrc": "10659:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10659:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10683:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10683:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10627:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "10627:31:12"
																		},
																		"nativeSrc": "10627:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10627:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10617:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10617:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10711:129:12",
															"nodeType": "YulBlock",
															"src": "10711:129:12",
															"statements": [
																{
																	"nativeSrc": "10726:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10726:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10740:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10730:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10730:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10756:74:12",
																	"nodeType": "YulAssignment",
																	"src": "10756:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10802:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10802:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10813:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10813:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10798:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10798:3:12"
																				},
																				"nativeSrc": "10798:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10798:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10822:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10822:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10766:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "10766:31:12"
																		},
																		"nativeSrc": "10766:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10766:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10756:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10756:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10850:129:12",
															"nodeType": "YulBlock",
															"src": "10850:129:12",
															"statements": [
																{
																	"nativeSrc": "10865:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10865:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10879:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10879:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10869:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10869:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10895:74:12",
																	"nodeType": "YulAssignment",
																	"src": "10895:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10941:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10941:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10952:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10952:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10937:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10937:3:12"
																				},
																				"nativeSrc": "10937:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10937:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10961:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10961:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10905:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "10905:31:12"
																		},
																		"nativeSrc": "10905:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10895:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10895:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "10323:663:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10388:9:12",
														"nodeType": "YulTypedName",
														"src": "10388:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10399:7:12",
														"nodeType": "YulTypedName",
														"src": "10399:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10411:6:12",
														"nodeType": "YulTypedName",
														"src": "10411:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10419:6:12",
														"nodeType": "YulTypedName",
														"src": "10419:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10427:6:12",
														"nodeType": "YulTypedName",
														"src": "10427:6:12",
														"type": ""
													}
												],
												"src": "10323:663:12"
											},
											{
												"body": {
													"nativeSrc": "11118:206:12",
													"nodeType": "YulBlock",
													"src": "11118:206:12",
													"statements": [
														{
															"nativeSrc": "11128:26:12",
															"nodeType": "YulAssignment",
															"src": "11128:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11140:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11140:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11151:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11151:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11136:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:12"
																},
																"nativeSrc": "11136:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11136:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11128:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11128:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11208:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11208:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11221:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11221:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11232:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11232:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11217:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:12"
																		},
																		"nativeSrc": "11217:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11217:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11164:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11164:43:12"
																},
																"nativeSrc": "11164:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11164:71:12"
															},
															"nativeSrc": "11164:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11164:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11289:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11289:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11302:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11302:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11313:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11313:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:12"
																		},
																		"nativeSrc": "11298:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11298:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11245:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11245:43:12"
																},
																"nativeSrc": "11245:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11245:72:12"
															},
															"nativeSrc": "11245:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11245:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10992:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11082:9:12",
														"nodeType": "YulTypedName",
														"src": "11082:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11094:6:12",
														"nodeType": "YulTypedName",
														"src": "11094:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11102:6:12",
														"nodeType": "YulTypedName",
														"src": "11102:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11113:4:12",
														"nodeType": "YulTypedName",
														"src": "11113:4:12",
														"type": ""
													}
												],
												"src": "10992:332:12"
											},
											{
												"body": {
													"nativeSrc": "11358:152:12",
													"nodeType": "YulBlock",
													"src": "11358:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11375:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11375:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11378:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11378:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11368:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11368:6:12"
																},
																"nativeSrc": "11368:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11368:88:12"
															},
															"nativeSrc": "11368:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11368:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11472:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11472:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11475:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11475:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11465:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11465:6:12"
																},
																"nativeSrc": "11465:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11465:15:12"
															},
															"nativeSrc": "11465:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11465:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11496:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11496:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11499:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11499:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:12"
																},
																"nativeSrc": "11489:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11489:15:12"
															},
															"nativeSrc": "11489:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11489:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11330:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11330:180:12"
											},
											{
												"body": {
													"nativeSrc": "11564:362:12",
													"nodeType": "YulBlock",
													"src": "11564:362:12",
													"statements": [
														{
															"nativeSrc": "11574:25:12",
															"nodeType": "YulAssignment",
															"src": "11574:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11597:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11597:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11579:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11579:17:12"
																},
																"nativeSrc": "11579:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11579:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11574:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11574:1:12"
																}
															]
														},
														{
															"nativeSrc": "11608:25:12",
															"nodeType": "YulAssignment",
															"src": "11608:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11631:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11631:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11613:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11613:17:12"
																},
																"nativeSrc": "11613:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11613:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11608:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11608:1:12"
																}
															]
														},
														{
															"nativeSrc": "11642:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11642:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11665:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11665:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11668:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11668:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11661:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11661:3:12"
																},
																"nativeSrc": "11661:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11661:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11646:11:12",
																	"nodeType": "YulTypedName",
																	"src": "11646:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11679:41:12",
															"nodeType": "YulAssignment",
															"src": "11679:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11708:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "11708:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11690:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11690:17:12"
																},
																"nativeSrc": "11690:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11690:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11679:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11679:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11897:22:12",
																"nodeType": "YulBlock",
																"src": "11897:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11899:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11899:16:12"
																			},
																			"nativeSrc": "11899:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11899:18:12"
																		},
																		"nativeSrc": "11899:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11899:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11830:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11830:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11823:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "11823:6:12"
																				},
																				"nativeSrc": "11823:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11823:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11853:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11853:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11860:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "11860:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11869:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "11869:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11856:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11856:3:12"
																						},
																						"nativeSrc": "11856:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "11856:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11850:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "11850:2:12"
																				},
																				"nativeSrc": "11850:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11850:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11803:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11803:2:12"
																		},
																		"nativeSrc": "11803:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11803:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11783:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11783:6:12"
																},
																"nativeSrc": "11783:113:12",
																"nodeType": "YulFunctionCall",
																"src": "11783:113:12"
															},
															"nativeSrc": "11780:139:12",
															"nodeType": "YulIf",
															"src": "11780:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11516:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11547:1:12",
														"nodeType": "YulTypedName",
														"src": "11547:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11550:1:12",
														"nodeType": "YulTypedName",
														"src": "11550:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11556:7:12",
														"nodeType": "YulTypedName",
														"src": "11556:7:12",
														"type": ""
													}
												],
												"src": "11516:410:12"
											},
											{
												"body": {
													"nativeSrc": "11960:152:12",
													"nodeType": "YulBlock",
													"src": "11960:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11977:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11977:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11980:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11980:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11970:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11970:6:12"
																},
																"nativeSrc": "11970:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11970:88:12"
															},
															"nativeSrc": "11970:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11970:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12074:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12074:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12077:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12077:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12067:6:12"
																},
																"nativeSrc": "12067:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12067:15:12"
															},
															"nativeSrc": "12067:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12067:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12098:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12098:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12101:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12101:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12091:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12091:6:12"
																},
																"nativeSrc": "12091:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12091:15:12"
															},
															"nativeSrc": "12091:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12091:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11932:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11932:180:12"
											},
											{
												"body": {
													"nativeSrc": "12160:143:12",
													"nodeType": "YulBlock",
													"src": "12160:143:12",
													"statements": [
														{
															"nativeSrc": "12170:25:12",
															"nodeType": "YulAssignment",
															"src": "12170:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12193:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12193:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12175:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12175:17:12"
																},
																"nativeSrc": "12175:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12175:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12170:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12170:1:12"
																}
															]
														},
														{
															"nativeSrc": "12204:25:12",
															"nodeType": "YulAssignment",
															"src": "12204:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12227:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12227:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12209:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12209:17:12"
																},
																"nativeSrc": "12209:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12209:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12204:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12204:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12251:22:12",
																"nodeType": "YulBlock",
																"src": "12251:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12253:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12253:16:12"
																			},
																			"nativeSrc": "12253:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12253:18:12"
																		},
																		"nativeSrc": "12253:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12253:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12248:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12248:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12241:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12241:6:12"
																},
																"nativeSrc": "12241:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12241:9:12"
															},
															"nativeSrc": "12238:35:12",
															"nodeType": "YulIf",
															"src": "12238:35:12"
														},
														{
															"nativeSrc": "12283:14:12",
															"nodeType": "YulAssignment",
															"src": "12283:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12292:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12292:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12295:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12295:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12288:3:12"
																},
																"nativeSrc": "12288:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12288:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12283:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12283:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12118:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12149:1:12",
														"nodeType": "YulTypedName",
														"src": "12149:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12152:1:12",
														"nodeType": "YulTypedName",
														"src": "12152:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12158:1:12",
														"nodeType": "YulTypedName",
														"src": "12158:1:12",
														"type": ""
													}
												],
												"src": "12118:185:12"
											},
											{
												"body": {
													"nativeSrc": "12354:149:12",
													"nodeType": "YulBlock",
													"src": "12354:149:12",
													"statements": [
														{
															"nativeSrc": "12364:25:12",
															"nodeType": "YulAssignment",
															"src": "12364:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12387:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12387:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12369:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12369:17:12"
																},
																"nativeSrc": "12369:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12369:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12364:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12364:1:12"
																}
															]
														},
														{
															"nativeSrc": "12398:25:12",
															"nodeType": "YulAssignment",
															"src": "12398:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12421:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12421:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12403:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12403:17:12"
																},
																"nativeSrc": "12403:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12403:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12398:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12398:1:12"
																}
															]
														},
														{
															"nativeSrc": "12432:17:12",
															"nodeType": "YulAssignment",
															"src": "12432:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12444:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12444:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12447:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12447:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12440:3:12"
																},
																"nativeSrc": "12440:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12440:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12432:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12432:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12474:22:12",
																"nodeType": "YulBlock",
																"src": "12474:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12476:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12476:16:12"
																			},
																			"nativeSrc": "12476:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12476:18:12"
																		},
																		"nativeSrc": "12476:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12476:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12465:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12465:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12471:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12471:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12462:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12462:2:12"
																},
																"nativeSrc": "12462:11:12",
																"nodeType": "YulFunctionCall",
																"src": "12462:11:12"
															},
															"nativeSrc": "12459:37:12",
															"nodeType": "YulIf",
															"src": "12459:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12309:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12340:1:12",
														"nodeType": "YulTypedName",
														"src": "12340:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12343:1:12",
														"nodeType": "YulTypedName",
														"src": "12343:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12349:4:12",
														"nodeType": "YulTypedName",
														"src": "12349:4:12",
														"type": ""
													}
												],
												"src": "12309:194:12"
											},
											{
												"body": {
													"nativeSrc": "12553:147:12",
													"nodeType": "YulBlock",
													"src": "12553:147:12",
													"statements": [
														{
															"nativeSrc": "12563:25:12",
															"nodeType": "YulAssignment",
															"src": "12563:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12586:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12586:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12568:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12568:17:12"
																},
																"nativeSrc": "12568:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12568:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12563:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12563:1:12"
																}
															]
														},
														{
															"nativeSrc": "12597:25:12",
															"nodeType": "YulAssignment",
															"src": "12597:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12620:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12620:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12602:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12602:17:12"
																},
																"nativeSrc": "12602:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12602:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12597:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12597:1:12"
																}
															]
														},
														{
															"nativeSrc": "12631:16:12",
															"nodeType": "YulAssignment",
															"src": "12631:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12642:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12642:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12645:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12645:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12638:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12638:3:12"
																},
																"nativeSrc": "12638:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12638:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12631:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12631:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12671:22:12",
																"nodeType": "YulBlock",
																"src": "12671:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12673:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12673:16:12"
																			},
																			"nativeSrc": "12673:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12673:18:12"
																		},
																		"nativeSrc": "12673:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12673:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12663:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12663:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12666:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12666:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12660:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12660:2:12"
																},
																"nativeSrc": "12660:10:12",
																"nodeType": "YulFunctionCall",
																"src": "12660:10:12"
															},
															"nativeSrc": "12657:36:12",
															"nodeType": "YulIf",
															"src": "12657:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12509:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12540:1:12",
														"nodeType": "YulTypedName",
														"src": "12540:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12543:1:12",
														"nodeType": "YulTypedName",
														"src": "12543:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12549:3:12",
														"nodeType": "YulTypedName",
														"src": "12549:3:12",
														"type": ""
													}
												],
												"src": "12509:191:12"
											},
											{
												"body": {
													"nativeSrc": "12860:288:12",
													"nodeType": "YulBlock",
													"src": "12860:288:12",
													"statements": [
														{
															"nativeSrc": "12870:26:12",
															"nodeType": "YulAssignment",
															"src": "12870:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12882:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12882:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12893:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12878:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12878:3:12"
																},
																"nativeSrc": "12878:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12878:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12870:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12870:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12950:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12950:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12963:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12963:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12974:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12974:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12959:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12959:3:12"
																		},
																		"nativeSrc": "12959:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12959:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12906:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12906:43:12"
																},
																"nativeSrc": "12906:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12906:71:12"
															},
															"nativeSrc": "12906:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12906:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13031:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13031:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13044:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13044:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13055:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13055:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13040:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:12"
																		},
																		"nativeSrc": "13040:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13040:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12987:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12987:43:12"
																},
																"nativeSrc": "12987:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12987:72:12"
															},
															"nativeSrc": "12987:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12987:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13113:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13113:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13126:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13126:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13137:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13137:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:12"
																		},
																		"nativeSrc": "13122:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13122:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13069:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13069:43:12"
																},
																"nativeSrc": "13069:72:12",
																"nodeType": "YulFunctionCall",
																"src": "13069:72:12"
															},
															"nativeSrc": "13069:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "13069:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12706:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12816:9:12",
														"nodeType": "YulTypedName",
														"src": "12816:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12828:6:12",
														"nodeType": "YulTypedName",
														"src": "12828:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12836:6:12",
														"nodeType": "YulTypedName",
														"src": "12836:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12844:6:12",
														"nodeType": "YulTypedName",
														"src": "12844:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12855:4:12",
														"nodeType": "YulTypedName",
														"src": "12855:4:12",
														"type": ""
													}
												],
												"src": "12706:442:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1578_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1578_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1578_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1578__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1578_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c80635c975abb11610102578063beabacc8116100a0578063cb4ca6311161006f578063cb4ca631146104e8578063cc1776d314610518578063dd62ed3e14610536578063f2fde38b14610566576101d8565b8063beabacc814610476578063c647b20e14610492578063c6a30647146104ae578063c816841b146104ca576101d8565b80638456cb59116100dc5780638456cb59146104005780638da5cb5b1461040a57806395d89b4114610428578063a9059cbb14610446576101d8565b80635c975abb146103a857806370a08231146103c6578063715018a6146103f6576101d8565b80632e1a7d4d1161017a57806340c10f191161014957806340c10f19146103345780634e6fd6c4146103505780634f7041a51461036e57806351c6590a1461038c576101d8565b80632e1a7d4d146102d2578063313ce567146102ee578063337270771461030c5780633f4ba83a1461032a576101d8565b806315291cd4116101b657806315291cd41461024857806318160ddd1461026657806323b872dd146102845780632431ba73146102b4576101d8565b806305bf0a54146101dc57806306fdde03146101fa578063095ea7b314610218575b5f5ffd5b6101e4610582565b6040516101f19190611a00565b60405180910390f35b610202610588565b60405161020f9190611a89565b60405180910390f35b610232600480360381019061022d9190611b31565b610618565b60405161023f9190611b89565b60405180910390f35b61025061063a565b60405161025d9190611a00565b60405180910390f35b61026e610640565b60405161027b9190611a00565b60405180910390f35b61029e60048036038101906102999190611ba2565b610649565b6040516102ab9190611b89565b60405180910390f35b6102bc610677565b6040516102c99190611c4d565b60405180910390f35b6102ec60048036038101906102e79190611c66565b61069c565b005b6102f66107a6565b6040516103039190611cac565b60405180910390f35b6103146107ae565b6040516103219190611a00565b60405180910390f35b6103326107b4565b005b61034e60048036038101906103499190611b31565b6107c6565b005b6103586107dc565b6040516103659190611cd4565b60405180910390f35b6103766107e2565b6040516103839190611a00565b60405180910390f35b6103a660048036038101906103a19190611c66565b6107e8565b005b6103b0610951565b6040516103bd9190611b89565b60405180910390f35b6103e060048036038101906103db9190611ced565b610966565b6040516103ed9190611a00565b60405180910390f35b6103fe6109ab565b005b6104086109be565b005b6104126109d0565b60405161041f9190611cd4565b60405180910390f35b6104306109f8565b60405161043d9190611a89565b60405180910390f35b610460600480360381019061045b9190611b31565b610a88565b60405161046d9190611b89565b60405180910390f35b610490600480360381019061048b9190611ba2565b610aaa565b005b6104ac60048036038101906104a79190611d18565b610e68565b005b6104c860048036038101906104c39190611d80565b610eca565b005b6104d2610f2a565b6040516104df9190611cd4565b60405180910390f35b61050260048036038101906104fd9190611ced565b610f4f565b60405161050f9190611b89565b60405180910390f35b610520610f6c565b60405161052d9190611a00565b60405180910390f35b610550600480360381019061054b9190611dbe565b610f72565b60405161055d9190611a00565b60405180910390f35b610580600480360381019061057b9190611ced565b610ff4565b005b600b5481565b60606003805461059790611e29565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611e29565b801561060e5780601f106105e55761010080835404028352916020019161060e565b820191905f5260205f20905b8154815290600101906020018083116105f157829003601f168201915b5050505050905090565b5f5f610622611078565b905061062f81858561107f565b600191505092915050565b600a5481565b5f600254905090565b5f5f610653611078565b9050610660858285611091565b61066b858585611124565b60019150509392505050565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a4611214565b6106ac61129b565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610711576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561074b576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790506107576109d0565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610799573d5f5f3e3d5ffd5b50506107a36112e1565b50565b5f6012905090565b600c5481565b6107bc611214565b6107c46112eb565b565b6107ce611214565b6107d8828261134c565b5050565b61dead81565b60085481565b6107f0611214565b6107f861129b565b5f8111610831576040517f671d94d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085d30600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361107f565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730845f5f6108a76109d0565b426040518863ffffffff1660e01b81526004016108c996959493929190611e92565b60606040518083038185885af11580156108e5573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061090a9190611f05565b5050507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b814760405161093e929190611f55565b60405180910390a161094e6112e1565b50565b5f60075f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109b3611214565b6109bc5f6113cb565b565b6109c6611214565b6109ce61148e565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a0790611e29565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3390611e29565b8015610a7e5780601f10610a5557610100808354040283529160200191610a7e565b820191905f5260205f20905b815481529060010190602001808311610a6157829003601f168201915b5050505050905090565b5f5f610a92611078565b9050610a9f818585611124565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0f576040517ff38f85c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b74576040517fa38ca3d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610c0f5750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610c2457610c1f838383611124565b610e63565b5f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f8215610cf257606460085485610ce19190611fa9565b610ceb9190612017565b9050610d16565b8115610d1557606460095485610d089190611fa9565b610d129190612017565b90505b5b5f8185610d239190612047565b90508181610d31919061207a565b8514610d69576040517f1f825c6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f821115610e5357610d7c873084611124565b7f092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b682604051610dab9190611a00565b60405180910390a15f6064600a5484610dc49190611fa9565b610dce9190612017565b90505f6064600b5485610de19190611fa9565b610deb9190612017565b90505f818386610dfb9190612047565b610e059190612047565b9050610e3330600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611124565b610e3d30836114f0565b610e4f30610e496109d0565b83611124565b5050505b610e5e878783611124565b505050505b505050565b610e70611214565b600a8211158015610e82575060148111155b610eb8576040517faf1ee13400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600881905550806009819055505050565b610ed2611214565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f602052805f5260405f205f915054906101000a900460ff1681565b60095481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ffc611214565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361106c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110639190611cd4565b60405180910390fd5b611075816113cb565b50565b5f33905090565b61108c838383600161156f565b505050565b5f61109c8484610f72565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561111e578181101561110f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611106939291906120ad565b60405180910390fd5b61111d84848484035f61156f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611194575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161118b9190611cd4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611204575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111fb9190611cd4565b60405180910390fd5b61120f83838361173e565b505050565b61121c611078565b73ffffffffffffffffffffffffffffffffffffffff1661123a6109d0565b73ffffffffffffffffffffffffffffffffffffffff16146112995761125d611078565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112909190611cd4565b60405180910390fd5b565b6002600654036112d7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b6001600681905550565b6112f361174e565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611335611078565b6040516113429190611cd4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113bc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113b39190611cd4565b60405180910390fd5b6113c75f838361173e565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61149661178e565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114d9611078565b6040516114e69190611cd4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611560575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115579190611cd4565b60405180910390fd5b61156b825f8361173e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115df575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115d69190611cd4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164f575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116469190611cd4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611738578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161172f9190611a00565b60405180910390a35b50505050565b6117498383836117cf565b505050565b611756610951565b61178c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611796610951565b156117cd576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361181f578060025f828254611813919061207a565b925050819055506118ed565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156118a8578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161189f939291906120ad565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611934578060025f828254039250508190555061197e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119db9190611a00565b60405180910390a3505050565b5f819050919050565b6119fa816119e8565b82525050565b5f602082019050611a135f8301846119f1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a5b82611a19565b611a658185611a23565b9350611a75818560208601611a33565b611a7e81611a41565b840191505092915050565b5f6020820190508181035f830152611aa18184611a51565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ad682611aad565b9050919050565b611ae681611acc565b8114611af0575f5ffd5b50565b5f81359050611b0181611add565b92915050565b611b10816119e8565b8114611b1a575f5ffd5b50565b5f81359050611b2b81611b07565b92915050565b5f5f60408385031215611b4757611b46611aa9565b5b5f611b5485828601611af3565b9250506020611b6585828601611b1d565b9150509250929050565b5f8115159050919050565b611b8381611b6f565b82525050565b5f602082019050611b9c5f830184611b7a565b92915050565b5f5f5f60608486031215611bb957611bb8611aa9565b5b5f611bc686828701611af3565b9350506020611bd786828701611af3565b9250506040611be886828701611b1d565b9150509250925092565b5f819050919050565b5f611c15611c10611c0b84611aad565b611bf2565b611aad565b9050919050565b5f611c2682611bfb565b9050919050565b5f611c3782611c1c565b9050919050565b611c4781611c2d565b82525050565b5f602082019050611c605f830184611c3e565b92915050565b5f60208284031215611c7b57611c7a611aa9565b5b5f611c8884828501611b1d565b91505092915050565b5f60ff82169050919050565b611ca681611c91565b82525050565b5f602082019050611cbf5f830184611c9d565b92915050565b611cce81611acc565b82525050565b5f602082019050611ce75f830184611cc5565b92915050565b5f60208284031215611d0257611d01611aa9565b5b5f611d0f84828501611af3565b91505092915050565b5f5f60408385031215611d2e57611d2d611aa9565b5b5f611d3b85828601611b1d565b9250506020611d4c85828601611b1d565b9150509250929050565b611d5f81611b6f565b8114611d69575f5ffd5b50565b5f81359050611d7a81611d56565b92915050565b5f5f60408385031215611d9657611d95611aa9565b5b5f611da385828601611af3565b9250506020611db485828601611d6c565b9150509250929050565b5f5f60408385031215611dd457611dd3611aa9565b5b5f611de185828601611af3565b9250506020611df285828601611af3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e4057607f821691505b602082108103611e5357611e52611dfc565b5b50919050565b5f819050919050565b5f611e7c611e77611e7284611e59565b611bf2565b6119e8565b9050919050565b611e8c81611e62565b82525050565b5f60c082019050611ea55f830189611cc5565b611eb260208301886119f1565b611ebf6040830187611e83565b611ecc6060830186611e83565b611ed96080830185611cc5565b611ee660a08301846119f1565b979650505050505050565b5f81519050611eff81611b07565b92915050565b5f5f5f60608486031215611f1c57611f1b611aa9565b5b5f611f2986828701611ef1565b9350506020611f3a86828701611ef1565b9250506040611f4b86828701611ef1565b9150509250925092565b5f604082019050611f685f8301856119f1565b611f7560208301846119f1565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fb3826119e8565b9150611fbe836119e8565b9250828202611fcc816119e8565b91508282048414831517611fe357611fe2611f7c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612021826119e8565b915061202c836119e8565b92508261203c5761203b611fea565b5b828204905092915050565b5f612051826119e8565b915061205c836119e8565b925082820390508181111561207457612073611f7c565b5b92915050565b5f612084826119e8565b915061208f836119e8565b92508282019050808211156120a7576120a6611f7c565b5b92915050565b5f6060820190506120c05f830186611cc5565b6120cd60208301856119f1565b6120da60408301846119f1565b94935050505056fea2646970667358221220a144c185d6e246104ffa5a6effc8c3a7b3409669ad038e2c837dff866026213964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xBEABACC8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCB4CA631 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC647B20E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xC6A30647 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x4CA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x446 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4E6FD6C4 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x38C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x33727077 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x32A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x15291CD4 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x15291CD4 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x2431BA73 EQ PUSH2 0x2B4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5BF0A54 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x218 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x7B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0x9AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH2 0x9BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x597 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C3 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x622 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x62F DUP2 DUP6 DUP6 PUSH2 0x107F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x653 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x660 DUP6 DUP3 DUP6 PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x66B DUP6 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x6AC PUSH2 0x129B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x757 PUSH2 0x9D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x7A3 PUSH2 0x12E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7BC PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0x12EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7D8 DUP3 DUP3 PUSH2 0x134C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x129B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x671D94D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D ADDRESS PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x107F JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 SELFBALANCE ADDRESS DUP5 PUSH0 PUSH0 PUSH2 0x8A7 PUSH2 0x9D0 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST POP POP POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP2 SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x93E SWAP3 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x94E PUSH2 0x12E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x9BC PUSH0 PUSH2 0x13CB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x148E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA07 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA33 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA92 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9F DUP2 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF38F85C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA38CA3D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xC0F JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH2 0xC1F DUP4 DUP4 DUP4 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP3 ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x64 PUSH1 0x8 SLOAD DUP6 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH2 0xD16 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD15 JUMPI PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 DUP6 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST DUP6 EQ PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F825C6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xD7C DUP8 ADDRESS DUP5 PUSH2 0x1124 JUMP JUMPDEST PUSH32 0x92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP5 PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xB SLOAD DUP6 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP7 PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP PUSH2 0xE33 ADDRESS PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0xE3D ADDRESS DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xE4F ADDRESS PUSH2 0xE49 PUSH2 0x9D0 JUMP JUMPDEST DUP4 PUSH2 0x1124 JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0xE5E DUP8 DUP8 DUP4 PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE70 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO DUP1 ISZERO PUSH2 0xE82 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0xEB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF1EE13400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFC PUSH2 0x1214 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x13CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x108C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x156F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x109C DUP5 DUP5 PUSH2 0xF72 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x110F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x156F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1194 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1204 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120F DUP4 DUP4 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x121C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x123A PUSH2 0x9D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1299 JUMPI PUSH2 0x125D PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12F3 PUSH2 0x174E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1335 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C7 PUSH0 DUP4 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14D9 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E6 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1560 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1557 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156B DUP3 PUSH0 DUP4 PUSH2 0x173E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1738 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x172F SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1749 DUP4 DUP4 DUP4 PUSH2 0x17CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1756 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1796 PUSH2 0x951 JUMP JUMPDEST ISZERO PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18ED JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x18A8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1934 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FA DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A13 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5B DUP3 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0x1A65 DUP2 DUP6 PUSH2 0x1A23 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x1A7E DUP2 PUSH2 0x1A41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA1 DUP2 DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD6 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x1ACC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B47 JUMPI PUSH2 0x1B46 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B54 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B65 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B83 DUP2 PUSH2 0x1B6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC6 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C15 PUSH2 0x1C10 PUSH2 0x1C0B DUP5 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C26 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C37 DUP3 PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C88 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA6 DUP2 PUSH2 0x1C91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH0 DUP4 ADD DUP5 PUSH2 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CCE DUP2 PUSH2 0x1ACC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0F DUP5 DUP3 DUP6 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2E JUMPI PUSH2 0x1D2D PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D3B DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4C DUP6 DUP3 DUP7 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5F DUP2 PUSH2 0x1B6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1D69 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D7A DUP2 PUSH2 0x1D56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E40 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7C PUSH2 0x1E77 PUSH2 0x1E72 DUP5 PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E8C DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EA5 PUSH0 DUP4 ADD DUP10 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x1EB2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1EBF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1ECC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EFF DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F29 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F3A DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F4B DUP7 DUP3 DUP8 ADD PUSH2 0x1EF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F68 PUSH0 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1F75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FB3 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FCC DUP2 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2021 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 DUP3 PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP4 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x20A6 PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x20DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PREVRANDAO 0xC1 DUP6 0xD6 0xE2 CHAINID LT 0x4F STATICCALL GAS PUSH15 0xFFC8C3A7B3409669AD038E2C837DFF DUP7 PUSH1 0x26 0x21 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "463:4313:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;787:34:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;905:39:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3864:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;864:32:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4706:67;;;:::i;:::-;;4318:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;984:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3347:509;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;4632:66:11;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:1423:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4423:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4179:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;951:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1074:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;753:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;828:29:11;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;787:34:11:-;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;905:39:11:-;;;;;;;;;;;;;:::o;3864:307::-;1531:13:0;:11;:13::i;:::-;2500:21:7::1;:19;:21::i;:::-;3971:1:11::2;3949:24;;:10;:24;;::::0;3941:51:::2;;;;;;;;;;;;;;;;;4021:21;4011:6;:31;;4003:61;;;;;;;;;;;;;;;;;4077:15;4095:21;4077:39;;4137:7;:5;:7::i;:::-;4129:25;;:34;4155:7;4129:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3930:241;2542:20:7::1;:18;:20::i;:::-;3864:307:11::0;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;864:32:11:-;;;;:::o;4706:67::-;1531:13:0;:11;:13::i;:::-;4755:10:11::1;:8;:10::i;:::-;4706:67::o:0;4318:97::-;1531:13:0;:11;:13::i;:::-;4390:17:11::1;4396:2;4400:6;4390:5;:17::i;:::-;4318:97:::0;;:::o;984:81::-;1023:42;984:81;:::o;721:25::-;;;;:::o;3347:509::-;1531:13:0;:11;:13::i;:::-;2500:21:7::1;:19;:21::i;:::-;3455:1:11::2;3441:11;:15;3433:53;;;;;;;;;;;;;;;;;3499:60;3516:4;3531:13;;;;;;;;;;;3547:11;3499:8;:60::i;:::-;3572:13;;;;;;;;;;;:29;;;3609:21;3654:4;3674:11;3700:1;3716;3732:7;:5;:7::i;:::-;3754:15;3572:208;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3798:50;3813:11;3826:21;3798:50;;;;;;;:::i;:::-;;;;;;;;2542:20:7::1;:18;:20::i;:::-;3347:509:11::0;:::o;1850:84:6:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4632:66:11:-;1531:13:0;:11;:13::i;:::-;4679:8:11::1;:6;:8::i;:::-;4632:66::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1753:1423:11:-;1867:1;1849:20;;:6;:20;;;1841:49;;;;;;;;;;;;;;;;;1930:1;1909:23;;:9;:23;;;1901:50;;;;;;;;;;;;;;;;;1968:17;:25;1986:6;1968:25;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;1997:17;:28;2015:9;1997:28;;;;;;;;;;;;;;;;;;;;;;;;;1968:57;1964:153;;;2042:42;2058:6;2066:9;2077:6;2042:15;:42::i;:::-;2099:7;;1964:153;2129:10;2155:11;;;;;;;;;;;2142:24;;:9;:24;;;2129:37;;2177:11;2201;;;;;;;;;;;2191:21;;:6;:21;;;2177:35;;2225:17;2256:5;2253:151;;;2310:3;2300:6;;2291;:15;;;;:::i;:::-;2290:23;;;;:::i;:::-;2278:35;;2253:151;;;2333:6;2330:74;;;2389:3;2378:7;;2369:6;:16;;;;:::i;:::-;2368:24;;;;:::i;:::-;2356:36;;2330:74;2253:151;2416:17;2445:9;2436:6;:18;;;;:::i;:::-;2416:38;;2495:9;2483;:21;;;;:::i;:::-;2473:6;:31;2465:59;;;;;;;;;;;;;;;;;2553:1;2541:9;:13;2537:574;;;2571:49;2587:6;2603:4;2610:9;2571:15;:49::i;:::-;2640:23;2653:9;2640:23;;;;;;:::i;:::-;;;;;;;;2680;2737:3;2719:14;;2707:9;:26;;;;:::i;:::-;2706:34;;;;:::i;:::-;2680:60;;2755:18;2802:3;2789:9;;2777;:21;;;;:::i;:::-;2776:29;;;;:::i;:::-;2755:50;;2820:21;2874:10;2856:15;2844:9;:27;;;;:::i;:::-;:40;;;;:::i;:::-;2820:64;;2901:60;2925:4;2932:11;;;;;;;;;;;2945:15;2901;:60::i;:::-;2990:38;3010:4;3017:10;2990:11;:38::i;:::-;3045:54;3069:4;3076:7;:5;:7::i;:::-;3085:13;3045:15;:54::i;:::-;2556:555;;;2537:574;3123:45;3139:6;3147:9;3158;3123:15;:45::i;:::-;1830:1346;;;;1753:1423;;;;:::o;4423:201::-;1531:13:0;:11;:13::i;:::-;4525:2:11::1;4514:7;:13;;:31;;;;;4543:2;4531:8;:14;;4514:31;4506:54;;;;;;;;;;;;;;;;;4580:7;4571:6;:16;;;;4608:8;4598:7;:18;;;;4423:201:::0;;:::o;4179:131::-;1531:13:0;:11;:13::i;:::-;4294:8:11::1;4265:17;:26;4283:7;4265:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4179:131:::0;;:::o;951:26::-;;;;;;;;;;;;;:::o;1074:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;753:27::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;2888:208::-;1857:1;3068:7;:21;;;;2888:208::o;2710:117:6:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:6:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;7984:206:2:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3184:153:11:-;3289:40;3303:6;3311:9;3322:6;3289:13;:40::i;:::-;3184:153;;;:::o;2202:126:6:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:12:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:60::-;4344:3;4365:5;4358:12;;4316:60;;;:::o;4382:142::-;4432:9;4465:53;4483:34;4492:24;4510:5;4492:24;:::i;:::-;4483:34;:::i;:::-;4465:53;:::i;:::-;4452:66;;4382:142;;;:::o;4530:126::-;4580:9;4613:37;4644:5;4613:37;:::i;:::-;4600:50;;4530:126;;;:::o;4662:153::-;4739:9;4772:37;4803:5;4772:37;:::i;:::-;4759:50;;4662:153;;;:::o;4821:185::-;4935:64;4993:5;4935:64;:::i;:::-;4930:3;4923:77;4821:185;;:::o;5012:276::-;5132:4;5170:2;5159:9;5155:18;5147:26;;5183:98;5278:1;5267:9;5263:17;5254:6;5183:98;:::i;:::-;5012:276;;;;:::o;5294:329::-;5353:6;5402:2;5390:9;5381:7;5377:23;5373:32;5370:119;;;5408:79;;:::i;:::-;5370:119;5528:1;5553:53;5598:7;5589:6;5578:9;5574:22;5553:53;:::i;:::-;5543:63;;5499:117;5294:329;;;;:::o;5629:86::-;5664:7;5704:4;5697:5;5693:16;5682:27;;5629:86;;;:::o;5721:112::-;5804:22;5820:5;5804:22;:::i;:::-;5799:3;5792:35;5721:112;;:::o;5839:214::-;5928:4;5966:2;5955:9;5951:18;5943:26;;5979:67;6043:1;6032:9;6028:17;6019:6;5979:67;:::i;:::-;5839:214;;;;:::o;6059:118::-;6146:24;6164:5;6146:24;:::i;:::-;6141:3;6134:37;6059:118;;:::o;6183:222::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6327:71;6395:1;6384:9;6380:17;6371:6;6327:71;:::i;:::-;6183:222;;;;:::o;6411:329::-;6470:6;6519:2;6507:9;6498:7;6494:23;6490:32;6487:119;;;6525:79;;:::i;:::-;6487:119;6645:1;6670:53;6715:7;6706:6;6695:9;6691:22;6670:53;:::i;:::-;6660:63;;6616:117;6411:329;;;;:::o;6746:474::-;6814:6;6822;6871:2;6859:9;6850:7;6846:23;6842:32;6839:119;;;6877:79;;:::i;:::-;6839:119;6997:1;7022:53;7067:7;7058:6;7047:9;7043:22;7022:53;:::i;:::-;7012:63;;6968:117;7124:2;7150:53;7195:7;7186:6;7175:9;7171:22;7150:53;:::i;:::-;7140:63;;7095:118;6746:474;;;;;:::o;7226:116::-;7296:21;7311:5;7296:21;:::i;:::-;7289:5;7286:32;7276:60;;7332:1;7329;7322:12;7276:60;7226:116;:::o;7348:133::-;7391:5;7429:6;7416:20;7407:29;;7445:30;7469:5;7445:30;:::i;:::-;7348:133;;;;:::o;7487:468::-;7552:6;7560;7609:2;7597:9;7588:7;7584:23;7580:32;7577:119;;;7615:79;;:::i;:::-;7577:119;7735:1;7760:53;7805:7;7796:6;7785:9;7781:22;7760:53;:::i;:::-;7750:63;;7706:117;7862:2;7888:50;7930:7;7921:6;7910:9;7906:22;7888:50;:::i;:::-;7878:60;;7833:115;7487:468;;;;;:::o;7961:474::-;8029:6;8037;8086:2;8074:9;8065:7;8061:23;8057:32;8054:119;;;8092:79;;:::i;:::-;8054:119;8212:1;8237:53;8282:7;8273:6;8262:9;8258:22;8237:53;:::i;:::-;8227:63;;8183:117;8339:2;8365:53;8410:7;8401:6;8390:9;8386:22;8365:53;:::i;:::-;8355:63;;8310:118;7961:474;;;;;:::o;8441:180::-;8489:77;8486:1;8479:88;8586:4;8583:1;8576:15;8610:4;8607:1;8600:15;8627:320;8671:6;8708:1;8702:4;8698:12;8688:22;;8755:1;8749:4;8745:12;8776:18;8766:81;;8832:4;8824:6;8820:17;8810:27;;8766:81;8894:2;8886:6;8883:14;8863:18;8860:38;8857:84;;8913:18;;:::i;:::-;8857:84;8678:269;8627:320;;;:::o;8953:85::-;8998:7;9027:5;9016:16;;8953:85;;;:::o;9044:158::-;9102:9;9135:61;9153:42;9162:32;9188:5;9162:32;:::i;:::-;9153:42;:::i;:::-;9135:61;:::i;:::-;9122:74;;9044:158;;;:::o;9208:147::-;9303:45;9342:5;9303:45;:::i;:::-;9298:3;9291:58;9208:147;;:::o;9361:807::-;9610:4;9648:3;9637:9;9633:19;9625:27;;9662:71;9730:1;9719:9;9715:17;9706:6;9662:71;:::i;:::-;9743:72;9811:2;9800:9;9796:18;9787:6;9743:72;:::i;:::-;9825:80;9901:2;9890:9;9886:18;9877:6;9825:80;:::i;:::-;9915;9991:2;9980:9;9976:18;9967:6;9915:80;:::i;:::-;10005:73;10073:3;10062:9;10058:19;10049:6;10005:73;:::i;:::-;10088;10156:3;10145:9;10141:19;10132:6;10088:73;:::i;:::-;9361:807;;;;;;;;;:::o;10174:143::-;10231:5;10262:6;10256:13;10247:22;;10278:33;10305:5;10278:33;:::i;:::-;10174:143;;;;:::o;10323:663::-;10411:6;10419;10427;10476:2;10464:9;10455:7;10451:23;10447:32;10444:119;;;10482:79;;:::i;:::-;10444:119;10602:1;10627:64;10683:7;10674:6;10663:9;10659:22;10627:64;:::i;:::-;10617:74;;10573:128;10740:2;10766:64;10822:7;10813:6;10802:9;10798:22;10766:64;:::i;:::-;10756:74;;10711:129;10879:2;10905:64;10961:7;10952:6;10941:9;10937:22;10905:64;:::i;:::-;10895:74;;10850:129;10323:663;;;;;:::o;10992:332::-;11113:4;11151:2;11140:9;11136:18;11128:26;;11164:71;11232:1;11221:9;11217:17;11208:6;11164:71;:::i;:::-;11245:72;11313:2;11302:9;11298:18;11289:6;11245:72;:::i;:::-;10992:332;;;;;:::o;11330:180::-;11378:77;11375:1;11368:88;11475:4;11472:1;11465:15;11499:4;11496:1;11489:15;11516:410;11556:7;11579:20;11597:1;11579:20;:::i;:::-;11574:25;;11613:20;11631:1;11613:20;:::i;:::-;11608:25;;11668:1;11665;11661:9;11690:30;11708:11;11690:30;:::i;:::-;11679:41;;11869:1;11860:7;11856:15;11853:1;11850:22;11830:1;11823:9;11803:83;11780:139;;11899:18;;:::i;:::-;11780:139;11564:362;11516:410;;;;:::o;11932:180::-;11980:77;11977:1;11970:88;12077:4;12074:1;12067:15;12101:4;12098:1;12091:15;12118:185;12158:1;12175:20;12193:1;12175:20;:::i;:::-;12170:25;;12209:20;12227:1;12209:20;:::i;:::-;12204:25;;12248:1;12238:35;;12253:18;;:::i;:::-;12238:35;12295:1;12292;12288:9;12283:14;;12118:185;;;;:::o;12309:194::-;12349:4;12369:20;12387:1;12369:20;:::i;:::-;12364:25;;12403:20;12421:1;12403:20;:::i;:::-;12398:25;;12447:1;12444;12440:9;12432:17;;12471:1;12465:4;12462:11;12459:37;;;12476:18;;:::i;:::-;12459:37;12309:194;;;;:::o;12509:191::-;12549:3;12568:20;12586:1;12568:20;:::i;:::-;12563:25;;12602:20;12620:1;12602:20;:::i;:::-;12597:25;;12645:1;12642;12638:9;12631:16;;12666:3;12663:1;12660:10;12657:36;;;12673:18;;:::i;:::-;12657:36;12509:191;;;;:::o;12706:442::-;12855:4;12893:2;12882:9;12878:18;12870:26;;12906:71;12974:1;12963:9;12959:17;12950:6;12906:71;:::i;:::-;12987:72;13055:2;13044:9;13040:18;13031:6;12987:72;:::i;:::-;13069;13137:2;13126:9;13122:18;13113:6;13069:72;:::i;:::-;12706:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1694400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD_ADDRESS()": "440",
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burnShare()": "2472",
								"buyTax()": "2514",
								"decimals()": "406",
								"excludeFromTax(address,bool)": "infinite",
								"isExcludedFromTax(address)": "2877",
								"liquidityShare()": "2471",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"pause()": "infinite",
								"paused()": "2519",
								"renounceOwnership()": "infinite",
								"rewardsShare()": "2515",
								"sellTax()": "2491",
								"setTaxes(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,address,uint256)": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapPair()": "2619",
								"uniswaprouter()": "infinite",
								"unpause()": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 745,
									"end": 746,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 721,
									"end": 746,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 721,
									"end": 746,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 778,
									"end": 780,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 753,
									"end": 780,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 753,
									"end": 780,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 819,
									"end": 821,
									"name": "PUSH",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 855,
									"end": 857,
									"name": "PUSH",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 828,
									"end": 857,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 828,
									"end": 857,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 894,
									"end": 896,
									"name": "PUSH",
									"source": 11,
									"value": "1E"
								},
								{
									"begin": 864,
									"end": 896,
									"name": "PUSH",
									"source": 11,
									"value": "C"
								},
								{
									"begin": 864,
									"end": 896,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1292,
									"end": 1745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1461,
									"end": 1466,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1442,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1444,
									"end": 1451,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1514,
									"end": 1527,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 1479,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1528,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1571,
									"end": 1584,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1571,
									"end": 1592,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "C45A0155"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1571,
									"end": 1594,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1571,
									"end": 1594,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1606,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "C9C65396"
								},
								{
									"begin": 1615,
									"end": 1619,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1640,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1622,
									"end": 1640,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1640,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "AD5C4648"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1622,
									"end": 1642,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1622,
									"end": 1642,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1643,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1553,
									"end": 1643,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1553,
									"end": 1643,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "E"
								},
								{
									"begin": 1539,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1539,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1687,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1656,
									"end": 1673,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1674,
									"end": 1679,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1687,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1733,
									"end": 1737,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1698,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1728,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1737,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3417,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3404,
									"end": 3421,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3398,
									"end": 3422,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3449,
									"end": 3467,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3438,
									"end": 3468,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3471,
									"end": 3550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3642,
									"end": 3649,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3622,
									"end": 3631,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3618,
									"end": 3640,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3576,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3369,
									"end": 3660,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 3722,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3709,
									"end": 3718,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3705,
									"end": 3723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3699,
									"end": 3724,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3749,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3770,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3773,
									"end": 3852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3944,
									"end": 3951,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3924,
									"end": 3933,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3920,
									"end": 3942,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3878,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3670,
									"end": 3962,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4001,
									"end": 4003,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4080,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4063,
									"end": 4072,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4059,
									"end": 4081,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 4027,
									"end": 4091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 4101,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4140,
									"end": 4142,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 4166,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4111,
									"end": 4240,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6340,
									"end": 6348,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6340,
									"end": 6348,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 9399,
									"end": 9404,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 9381,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9406,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9294,
									"end": 9412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9549,
									"end": 9551,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9538,
									"end": 9547,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9534,
									"end": 9552,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9615,
									"end": 9632,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9606,
									"end": 9612,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 9562,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "tag",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9418,
									"end": 9640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9716,
									"end": 9722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9765,
									"end": 9767,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9753,
									"end": 9762,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9744,
									"end": 9751,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9740,
									"end": 9763,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 9736,
									"end": 9768,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 9771,
									"end": 9850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "tag",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 9771,
									"end": 9850,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 9733,
									"end": 9852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9891,
									"end": 9892,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 9972,
									"end": 9979,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9963,
									"end": 9969,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9952,
									"end": 9961,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9948,
									"end": 9970,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 9916,
									"end": 9980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 9916,
									"end": 9980,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9906,
									"end": 9980,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9906,
									"end": 9980,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9862,
									"end": 9990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9646,
									"end": 9997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10162,
									"end": 10164,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 10151,
									"end": 10160,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10147,
									"end": 10165,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10139,
									"end": 10165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10139,
									"end": 10165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 10243,
									"end": 10244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10232,
									"end": 10241,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10228,
									"end": 10245,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10219,
									"end": 10225,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 10175,
									"end": 10246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 10324,
									"end": 10326,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10313,
									"end": 10322,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10309,
									"end": 10327,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10300,
									"end": 10306,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 10256,
									"end": 10328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 10256,
									"end": 10328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10003,
									"end": 10335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 4776,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a144c185d6e246104ffa5a6effc8c3a7b3409669ad038e2c837dff866026213964736f6c634300081d0033",
									".code": [
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "BEABACC8"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "CB4CA631"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "CB4CA631"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "CC1776D3"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "BEABACC8"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "C647B20E"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "C6A30647"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "C816841B"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "4E6FD6C4"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "4F7041A5"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "51C6590A"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "33727077"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "15291CD4"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "15291CD4"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "2431BA73"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "5BF0A54"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 4776,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 828,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 828,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 787,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 787,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 905,
											"end": 944,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 905,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 905,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3864,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3864,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 864,
											"end": 896,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 864,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4706,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4318,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4318,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 984,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 984,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 721,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 721,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3347,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3347,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4632,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1753,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1753,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4423,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4423,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 4179,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4179,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 951,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 951,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1074,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1074,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 753,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 753,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 857,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 828,
											"end": 857,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 828,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 787,
											"end": 821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 905,
											"end": 944,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 944,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3973,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3959,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3973,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3941,
											"end": 3992,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4021,
											"end": 4042,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4017,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4042,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4042,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "356680B700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4003,
											"end": 4064,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4116,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4137,
											"end": 4142,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4137,
											"end": 4144,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4144,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4137,
											"end": 4144,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4154,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 4155,
											"end": 4162,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4129,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4171,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2542,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 4171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 896,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 864,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4755,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 4755,
											"end": 4765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4755,
											"end": 4765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4755,
											"end": 4765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4390,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 4396,
											"end": 4398,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4390,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4390,
											"end": 4407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4390,
											"end": 4407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 4390,
											"end": 4407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1065,
											"name": "PUSH",
											"source": 11,
											"value": "DEAD"
										},
										{
											"begin": 984,
											"end": 1065,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 746,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 721,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3452,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3456,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "671D94D800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3433,
											"end": 3486,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 3516,
											"end": 3520,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3544,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3558,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3507,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3499,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3559,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 3499,
											"end": 3559,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3585,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3601,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "F305D719"
										},
										{
											"begin": 3609,
											"end": 3630,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 3654,
											"end": 3658,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3685,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3701,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3739,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3732,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3732,
											"end": 3739,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3739,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3732,
											"end": 3739,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3754,
											"end": 3769,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3572,
											"end": 3780,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 3572,
											"end": 3780,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3780,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B"
										},
										{
											"begin": 3813,
											"end": 3824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3847,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 3798,
											"end": 3848,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3848,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2542,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4632,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4679,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4679,
											"end": 4685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4679,
											"end": 4687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4679,
											"end": 4687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4679,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "F38F85C300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1841,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1932,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1932,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1932,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1932,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1932,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "A38CA3D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1901,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1997,
											"end": 2025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1968,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 2117,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1964,
											"end": 2117,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2077,
											"end": 2083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2042,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2084,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2042,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 2117,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1964,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2166,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2166,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2212,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2212,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2212,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2261,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2291,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2291,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2290,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2404,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2330,
											"end": 2404,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2392,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2369,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2368,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2404,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2330,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2253,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2436,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2495,
											"end": 2504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2483,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2479,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2504,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "PUSH",
											"source": 11,
											"value": "1F825C6A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2465,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2554,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 3111,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2537,
											"end": 3111,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2610,
											"end": 2619,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2571,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2620,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 2571,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH",
											"source": 11,
											"value": "92C6768BA45DFDC937F94A27A0C5BE8334952F1558BC7DD41B3E8707502E1B6"
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2640,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2707,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2707,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2706,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2805,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2786,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2777,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2776,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2776,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2871,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2844,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 2844,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2844,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 2844,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2943,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2901,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 2961,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 2901,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2990,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3010,
											"end": 3014,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3017,
											"end": 3027,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2990,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 2990,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2990,
											"end": 3028,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 2990,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3069,
											"end": 3073,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3076,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3045,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3099,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3045,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 3111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 3111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 3111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 3111,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2537,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3139,
											"end": 3145,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3123,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3168,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3123,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4525,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 4514,
											"end": 4521,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4527,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4543,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4531,
											"end": 4539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4531,
											"end": 4545,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4531,
											"end": 4545,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4514,
											"end": 4545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "AF1EE13400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4506,
											"end": 4560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4580,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4571,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4598,
											"end": 4616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4616,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4423,
											"end": 4624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 951,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 753,
											"end": 780,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 753,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3184,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3289,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3289,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3184,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3184,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3184,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3184,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4370,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4492,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4483,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4465,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4613,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4803,
											"end": 4808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4772,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4772,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4809,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 4993,
											"end": 4998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4935,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4923,
											"end": 5000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 5006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 5006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5276,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5183,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5183,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5390,
											"end": 5399,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5400,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5405,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5408,
											"end": 5487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5370,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5553,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5553,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5697,
											"end": 5702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5693,
											"end": 5709,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5804,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5792,
											"end": 5827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5979,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 6053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 6146,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6134,
											"end": 6171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 6327,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6327,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6521,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6517,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6525,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6525,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6487,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 6713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6670,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6846,
											"end": 6869,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6874,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6877,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6839,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6997,
											"end": 6998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7067,
											"end": 7074,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 7022,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 7085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7184,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7171,
											"end": 7193,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 7150,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 7220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7296,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7276,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7226,
											"end": 7342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7391,
											"end": 7396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7469,
											"end": 7474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 7445,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7588,
											"end": 7595,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7584,
											"end": 7607,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 7615,
											"end": 7694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7615,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7577,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 7805,
											"end": 7812,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 7802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7760,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 7760,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7813,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7706,
											"end": 7823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7888,
											"end": 7938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 7888,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7833,
											"end": 7948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8029,
											"end": 8035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8088,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8061,
											"end": 8084,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8057,
											"end": 8089,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8092,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8092,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8054,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8262,
											"end": 8271,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8258,
											"end": 8280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8237,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8237,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8227,
											"end": 8290,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8227,
											"end": 8290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8399,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8386,
											"end": 8408,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8365,
											"end": 8418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 8365,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8355,
											"end": 8418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8355,
											"end": 8418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 8435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8621,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8441,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8566,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8486,
											"end": 8487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8586,
											"end": 8590,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8583,
											"end": 8584,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8576,
											"end": 8591,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8607,
											"end": 8608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8615,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8756,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 8836,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8824,
											"end": 8830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8820,
											"end": 8837,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 8766,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 8896,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8886,
											"end": 8892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8883,
											"end": 8897,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8913,
											"end": 8931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8857,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9102,
											"end": 9111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 9188,
											"end": 9193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 9162,
											"end": 9194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9153,
											"end": 9195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 9135,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9135,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 9342,
											"end": 9347,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9303,
											"end": 9348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 9303,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9298,
											"end": 9301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9208,
											"end": 9355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9208,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9614,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9651,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 9637,
											"end": 9646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9730,
											"end": 9731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9662,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9662,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9809,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9743,
											"end": 9815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 9743,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9901,
											"end": 9903,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9883,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9825,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9825,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9991,
											"end": 9993,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9980,
											"end": 9989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9967,
											"end": 9973,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9915,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9915,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10073,
											"end": 10076,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10058,
											"end": 10077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 10005,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10141,
											"end": 10160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 10088,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 10088,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9361,
											"end": 10168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10269,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10305,
											"end": 10310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 10278,
											"end": 10311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10462,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10447,
											"end": 10479,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 10482,
											"end": 10561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10444,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10674,
											"end": 10680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10663,
											"end": 10672,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10627,
											"end": 10691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10627,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10617,
											"end": 10691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10822,
											"end": 10829,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10802,
											"end": 10811,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10798,
											"end": 10820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10766,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10766,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10711,
											"end": 10840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 10881,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10952,
											"end": 10958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 10959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10905,
											"end": 10969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10905,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11113,
											"end": 11117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11153,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11140,
											"end": 11149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11217,
											"end": 11234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11164,
											"end": 11235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 11164,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11313,
											"end": 11315,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11302,
											"end": 11311,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11245,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11245,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11510,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11330,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11378,
											"end": 11455,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11456,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11475,
											"end": 11479,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11465,
											"end": 11480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11499,
											"end": 11503,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11504,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11579,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 11579,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11613,
											"end": 11633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11608,
											"end": 11633,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11608,
											"end": 11633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11661,
											"end": 11670,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11708,
											"end": 11719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11690,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11856,
											"end": 11871,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11854,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11850,
											"end": 11872,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11803,
											"end": 11886,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11899,
											"end": 11917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11780,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11932,
											"end": 12112,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 11932,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11980,
											"end": 12057,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11977,
											"end": 11978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 12058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12081,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12074,
											"end": 12075,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12067,
											"end": 12082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12098,
											"end": 12099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12091,
											"end": 12106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12175,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12209,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 12253,
											"end": 12271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 12253,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12238,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12288,
											"end": 12297,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12283,
											"end": 12297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12283,
											"end": 12297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12349,
											"end": 12353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12369,
											"end": 12389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12364,
											"end": 12389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12364,
											"end": 12389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 12421,
											"end": 12422,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12403,
											"end": 12423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 12403,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12440,
											"end": 12449,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12432,
											"end": 12449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12432,
											"end": 12449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12462,
											"end": 12473,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12476,
											"end": 12494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12549,
											"end": 12552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12586,
											"end": 12587,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12568,
											"end": 12588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 12620,
											"end": 12621,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12602,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12597,
											"end": 12622,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12597,
											"end": 12622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12645,
											"end": 12646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12638,
											"end": 12647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12631,
											"end": 12647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12631,
											"end": 12647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12666,
											"end": 12669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12663,
											"end": 12664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12670,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12673,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12882,
											"end": 12891,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12870,
											"end": 12896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12870,
											"end": 12896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12974,
											"end": 12975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12972,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 12976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 12956,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 12906,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 13055,
											"end": 13057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 12987,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12987,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13069,
											"end": 13141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 13069,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
								"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"smart-contract/contracts/mem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEAD_ADDRESS()": "4e6fd6c4",
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnShare()": "05bf0a54",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"excludeFromTax(address,bool)": "c6a30647",
							"isExcludedFromTax(address)": "cb4ca631",
							"liquidityShare()": "15291cd4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"rewardsShare()": "33727077",
							"sellTax()": "cc1776d3",
							"setTaxes(uint256,uint256)": "c647b20e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"uniswaprouter()": "2431ba73",
							"unpause()": "3f4ba83a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArithmeticError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TaxTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAmountMustBePositive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TaxCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswaprouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contract/contracts/mem.sol\":\"MemCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"smart-contract/contracts/mem.sol\":{\"keccak256\":\"0x0f909fede23c01459b303c399388106bc6545620b5920bebf27006d29a2ac715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3184737afd9eafd6922e310d7be93a9058d9d752528a9ea7a8f075b4b670aba9\",\"dweb:/ipfs/QmS2XqcQwEVBoMdputyBzUBCr4GKLC5fVQKAP1yUUc3ubf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1061,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 942,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1609,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "buyTax",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1612,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "sellTax",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1615,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "liquidityShare",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1618,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "burnShare",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1621,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "rewardsShare",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1624,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "uniswaprouter",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IUniswapV2Router02)1578"
							},
							{
								"astId": 1626,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1633,
								"contract": "smart-contract/contracts/mem.sol:MemCoin",
								"label": "isExcludedFromTax",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)1578": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Pausable": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 934,
							"src": "128:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "Context",
										"nameLocations": [
											"645:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "645:7:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:6"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050,
								933
							],
							"name": "Pausable",
							"nameLocation": "633:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1050,
									"src": "659:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 941,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 947,
									"name": "Paused",
									"nameLocation": "770:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "777:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:6"
									},
									"src": "764:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 952,
									"name": "Unpaused",
									"nameLocation": "881:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "890:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:6"
									},
									"src": "875:32:6"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 955,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:6"
									},
									"src": "994:22:6"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 958,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:6"
									},
									"src": "1107:22:6"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1221:32:6",
										"statements": [
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 962,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1231:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 967,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:6"
									},
									"scope": 1050,
									"src": "1207:46:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1464:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 970,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "1474:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:6"
											},
											{
												"id": 973,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 975,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:6"
									},
									"src": "1439:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "1711:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 978,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "1721:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:6"
											},
											{
												"id": 981,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:6"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 983,
									"name": "whenPaused",
									"nameLocation": "1698:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:6"
									},
									"src": "1689:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "1903:31:6",
										"statements": [
											{
												"expression": {
													"id": 989,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "1920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 988,
												"id": 990,
												"nodeType": "Return",
												"src": "1913:14:6"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1897:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:6"
									},
									"scope": 1050,
									"src": "1850:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "2053:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 996,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2067:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "2063:61:6",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "2077:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 998,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "2098:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1000,
															"nodeType": "RevertStatement",
															"src": "2091:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:6"
									},
									"scope": 1050,
									"src": "2002:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "2250:78:6",
										"statements": [
											{
												"condition": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1008,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "2260:62:6",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "2275:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1011,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "2296:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1013,
															"nodeType": "RevertStatement",
															"src": "2289:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:6"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:6"
									},
									"scope": 1050,
									"src": "2202:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "2512:66:6",
										"statements": [
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2522:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1028,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2558:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1027,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2551:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "EmitStatement",
												"src": "2546:25:6"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1020,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 975,
												"src": "2498:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:6"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:6"
									},
									"scope": 1050,
									"src": "2463:115:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2758:69:6",
										"statements": [
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2768:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1044,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2807:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1043,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2798:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "EmitStatement",
												"src": "2793:27:6"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1036,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 983,
												"src": "2747:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:6"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:6"
									},
									"scope": 1050,
									"src": "2710:117:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1051,
							"src": "615:2214:6",
							"usedErrors": [
								955,
								958
							],
							"usedEvents": [
								947,
								952
							]
						}
					],
					"src": "102:2728:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1119
						]
					},
					"id": 1120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1119,
							"linearizedBaseContracts": [
								1119
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1056,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1119,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1054,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1055,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1059,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1119,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1057,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1058,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1061,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1119,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1060,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1064,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1068,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 1119,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1075,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 1078,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1079,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1083,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1086,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1087,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 1092,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1089,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1091,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1094,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1095,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 1119,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1103,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 1119,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1114,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1116,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 1119,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1120,
							"src": "1030:2353:7",
							"usedErrors": [
								1064
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1182
						]
					},
					"id": 1183,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1121,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1182,
							"linearizedBaseContracts": [
								1182
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "36:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 1131,
									"name": "PairCreated",
									"nameLocation": "66:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "94:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "78:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "118:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "102:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "134:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "126:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "140:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77:68:8"
									},
									"src": "60:86:8"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "161:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "192:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:8"
									},
									"scope": 1182,
									"src": "152:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "215:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:8"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "252:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:8"
									},
									"scope": 1182,
									"src": "206:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "276:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "292:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "284:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "308:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "300:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:32:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "347:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "339:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:14:8"
									},
									"scope": 1182,
									"src": "267:86:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "367:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:6:8"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "413:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "405:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:14:8"
									},
									"scope": 1182,
									"src": "358:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "433:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "473:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:6:8"
									},
									"scope": 1182,
									"src": "424:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "494:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "513:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "505:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "529:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "521:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:32:8"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "563:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "555:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:14:8"
									},
									"scope": 1182,
									"src": "485:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "584:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "593:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:8"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:8"
									},
									"scope": 1182,
									"src": "575:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "625:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:8"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:8"
									},
									"scope": 1182,
									"src": "616:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1183,
							"src": "26:634:8",
							"usedErrors": [],
							"usedEvents": [
								1131
							]
						}
					],
					"src": "0:661:8"
				},
				"id": 8
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1490
						]
					},
					"id": 1491,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1184,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1490,
							"linearizedBaseContracts": [
								1490
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "103:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:9"
									},
									"scope": 1490,
									"src": "61:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:9"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "156:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:9"
									},
									"scope": 1490,
									"src": "117:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "202:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "226:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "250:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "279:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "308:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "333:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "358:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "378:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:9"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "416:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "430:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "444:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:9"
									},
									"scope": 1490,
									"src": "171:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "499:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "522:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "555:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "584:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "611:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "631:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:9"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "677:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "695:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "711:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:9"
									},
									"scope": 1490,
									"src": "465:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "766:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "790:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "814:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "838:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "863:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "888:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "908:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:9"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "946:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "960:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:9"
									},
									"scope": 1490,
									"src": "732:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1016:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1039:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1063:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1092:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1119:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1139:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:9"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1177:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1195:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:9"
									},
									"scope": 1490,
									"src": "979:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1260:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1284:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1308:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1332:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1357:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1382:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1402:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1425:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1442:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1297,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1451:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1462:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:9"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1496:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1510:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:9"
									},
									"scope": 1490,
									"src": "1216:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1576:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1599:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1623:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1652:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1679:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1699:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1722:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1739:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1748:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1759:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:9"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1793:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1811:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:9"
									},
									"scope": 1490,
									"src": "1529:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1875:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1898:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1925:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1341,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1342,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1958:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1978:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:9"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2016:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1349,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1350,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:9"
									},
									"scope": 1490,
									"src": "1832:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2087:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2111:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2137:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1358,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1359,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2170:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2190:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:9"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2228:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:9"
									},
									"scope": 1490,
									"src": "2044:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2287:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2306:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1373,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1374,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2331:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2343:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2408:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1381,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1382,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:9"
									},
									"scope": 1490,
									"src": "2256:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2467:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2483:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2501:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1390,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1391,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2526:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2538:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:9"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2587:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:9"
									},
									"scope": 1490,
									"src": "2436:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2646:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2661:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2680:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2705:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2717:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:9"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2766:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1415,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1416,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:9"
									},
									"scope": 1490,
									"src": "2615:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2825:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2841:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1422,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1423,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2866:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2878:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:9"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "2943:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1431,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:9"
									},
									"scope": 1490,
									"src": "2794:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2987:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3001:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3016:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3054:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:9"
									},
									"scope": 1490,
									"src": "2972:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3095:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3110:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3126:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:9"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3166:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:9"
									},
									"scope": 1490,
									"src": "3073:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3224:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3240:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3280:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:9"
									},
									"scope": 1490,
									"src": "3187:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3323:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3338:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1471,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:9"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3386:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1474,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1475,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:9"
									},
									"scope": 1490,
									"src": "3300:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3436:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3452:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1481,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1482,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:9"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3500:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1485,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1486,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:9"
									},
									"scope": 1490,
									"src": "3414:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1491,
							"src": "26:3499:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:9"
				},
				"id": 9
			},
			"smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1490
						],
						"IUniswapV2Router02": [
							1578
						]
					},
					"id": 1579,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1492,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1579,
							"sourceUnit": 1491,
							"src": "26:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1494,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"94:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1490,
										"src": "94:18:10"
									},
									"id": 1495,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:10"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1578,
							"linearizedBaseContracts": [
								1578,
								1490
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "185:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "208:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "232:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "261:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "288:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "308:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:10"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "346:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:10"
									},
									"scope": 1578,
									"src": "119:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "443:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "466:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "490:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "519:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "546:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "566:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "589:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "606:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1527,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "615:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "626:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:10"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "660:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:10"
									},
									"scope": 1578,
									"src": "367:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "754:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "777:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "804:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1542,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1543,
													"nodeType": "ArrayTypeName",
													"src": "804:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "837:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "857:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:10"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:10"
									},
									"scope": 1578,
									"src": "682:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "960:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "987:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1554,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1555,
													"nodeType": "ArrayTypeName",
													"src": "987:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1020:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1040:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:10"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:10"
									},
									"scope": 1578,
									"src": "891:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1151:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1174:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1201:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1568,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1569,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1234:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1254:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:10"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:10"
									},
									"scope": 1578,
									"src": "1082:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1579,
							"src": "62:1223:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1286:10"
				},
				"id": 10
			},
			"smart-contract/contracts/mem.sol": {
				"ast": {
					"absolutePath": "smart-contract/contracts/mem.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IUniswapV2Factory": [
							1182
						],
						"IUniswapV2Router01": [
							1490
						],
						"IUniswapV2Router02": [
							1578
						],
						"MemCoin": [
							2109
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1050
						],
						"ReentrancyGuard": [
							1119
						]
					},
					"id": 2110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 800,
							"src": "61:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 148,
							"src": "118:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 1051,
							"src": "172:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 1120,
							"src": "226:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "../.deps/npm/@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"id": 1585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 1183,
							"src": "287:82:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contract/.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "../.deps/npm/@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2110,
							"sourceUnit": 1579,
							"src": "371:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1587,
										"name": "ERC20",
										"nameLocations": [
											"483:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "483:5:11"
									},
									"id": 1588,
									"nodeType": "InheritanceSpecifier",
									"src": "483:5:11"
								},
								{
									"baseName": {
										"id": 1589,
										"name": "Ownable",
										"nameLocations": [
											"490:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "490:7:11"
									},
									"id": 1590,
									"nodeType": "InheritanceSpecifier",
									"src": "490:7:11"
								},
								{
									"baseName": {
										"id": 1591,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"499:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1119,
										"src": "499:15:11"
									},
									"id": 1592,
									"nodeType": "InheritanceSpecifier",
									"src": "499:15:11"
								},
								{
									"baseName": {
										"id": 1593,
										"name": "Pausable",
										"nameLocations": [
											"516:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "516:8:11"
									},
									"id": 1594,
									"nodeType": "InheritanceSpecifier",
									"src": "516:8:11"
								}
							],
							"canonicalName": "MemCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2109,
							"linearizedBaseContracts": [
								2109,
								1050,
								1119,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MemCoin",
							"nameLocation": "472:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f38f85c3",
									"id": 1596,
									"name": "TransferFromZero",
									"nameLocation": "538:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:11"
									},
									"src": "532:25:11"
								},
								{
									"errorSelector": "a38ca3d9",
									"id": 1598,
									"name": "TransferToZero",
									"nameLocation": "569:14:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:2:11"
									},
									"src": "563:23:11"
								},
								{
									"errorSelector": "1f825c6a",
									"id": 1600,
									"name": "ArithmeticError",
									"nameLocation": "598:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:11"
									},
									"src": "592:24:11"
								},
								{
									"errorSelector": "671d94d8",
									"id": 1602,
									"name": "TokenAmountMustBePositive",
									"nameLocation": "628:25:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:11"
									},
									"src": "622:34:11"
								},
								{
									"errorSelector": "af1ee134",
									"id": 1604,
									"name": "TaxTooHigh",
									"nameLocation": "668:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:11"
									},
									"src": "662:19:11"
								},
								{
									"errorSelector": "356680b7",
									"id": 1606,
									"name": "InsufficientFunds",
									"nameLocation": "693:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:11"
									},
									"src": "687:26:11"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1609,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "736:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "721:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1608,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "745:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1612,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "768:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "753:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "778:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15291cd4",
									"id": 1615,
									"mutability": "mutable",
									"name": "liquidityShare",
									"nameLocation": "802:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "787:34:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1613,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "787:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "819:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05bf0a54",
									"id": 1618,
									"mutability": "mutable",
									"name": "burnShare",
									"nameLocation": "843:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "828:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1616,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "828:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1617,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "855:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33727077",
									"id": 1621,
									"mutability": "mutable",
									"name": "rewardsShare",
									"nameLocation": "879:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "864:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "864:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1620,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "894:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2431ba73",
									"id": 1624,
									"mutability": "mutable",
									"name": "uniswaprouter",
									"nameLocation": "931:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "905:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1623,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1622,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"905:18:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1578,
											"src": "905:18:11"
										},
										"referencedDeclaration": 1578,
										"src": "905:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1626,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "966:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "951:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1625,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "951:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4e6fd6c4",
									"id": 1629,
									"mutability": "constant",
									"name": "DEAD_ADDRESS",
									"nameLocation": "1008:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "984:81:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1627,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1023:42:11",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb4ca631",
									"id": 1633,
									"mutability": "mutable",
									"name": "isExcludedFromTax",
									"nameLocation": "1106:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 2109,
									"src": "1074:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1632,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1630,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1074:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1631,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1093:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "092c6768ba45dfdc937f94a27a0c5be8334952f1558bc7dd41b3e8707502e1b6",
									"id": 1637,
									"name": "TaxCollected",
									"nameLocation": "1138:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1159:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "1151:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:16:11"
									},
									"src": "1132:35:11"
								},
								{
									"anonymous": false,
									"eventSelector": "38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b",
									"id": 1643,
									"name": "LiquidityAdded",
									"nameLocation": "1179:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1202:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1194:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "1218:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1210:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:29:11"
									},
									"src": "1173:50:11"
								},
								{
									"anonymous": false,
									"eventSelector": "3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273",
									"id": 1649,
									"name": "TokensMinted",
									"nameLocation": "1235:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1264:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "1248:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1276:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "1268:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:36:11"
									},
									"src": "1229:55:11"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "1468:277:11",
										"statements": [
											{
												"expression": {
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "uniswaprouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "1479:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1669,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "1514:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1668,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "1495:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1578_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1495:33:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "1479:49:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "1479:49:11"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1673,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "1539:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1682,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1615:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$2109",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$2109",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1607:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1607:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1607:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1684,
																		"name": "uniswaprouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "1622:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1636:4:11",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1194,
																	"src": "1622:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1622:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1675,
																				"name": "uniswaprouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1624,
																				"src": "1571:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1585:7:11",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1189,
																			"src": "1571:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1571:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1674,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "1553:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1182_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1553:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1182",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1596:10:11",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "1553:53:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1553:90:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1539:104:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "1539:104:11"
											},
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1690,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1656:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1692,
														"indexExpression": {
															"id": 1691,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "1674:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1656:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1683:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1656:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "1656:31:11"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1696,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1698:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1701,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1699,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1724:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1716:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1697,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1716:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1698:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1733:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1698:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "1698:39:11"
											}
										]
									},
									"id": 1706,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1660,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "1437:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1661,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1653,
													"src": "1444:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1662,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1659,
												"name": "ERC20",
												"nameLocations": [
													"1431:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1431:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:21:11"
										},
										{
											"arguments": [
												{
													"id": 1664,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1657,
													"src": "1461:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1665,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1663,
												"name": "Ownable",
												"nameLocations": [
													"1453:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1453:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1453:14:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1328:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1314:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1314:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1359:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1345:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1345:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "1386:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1378:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1418:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1410:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:127:11"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:0:11"
									},
									"scope": 2109,
									"src": "1292:453:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "1830:1346:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1716,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "1849:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1867:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1859:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1859:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1859:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1849:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1722,
																"name": "TransferFromZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "1871:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1871:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1841:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1841:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "1841:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1727,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "1909:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1930:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1922:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1922:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1909:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1733,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "1934:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1934:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1901:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "1901:50:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1737,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1968:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1739,
														"indexExpression": {
															"id": 1738,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "1986:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1968:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1740,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1997:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1742,
														"indexExpression": {
															"id": 1741,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "2015:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1997:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1968:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1754,
												"nodeType": "IfStatement",
												"src": "1964:153:11",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "2027:90:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1747,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "2058:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1748,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "2066:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1749,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2077:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1744,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2042:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2048:9:11",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "2042:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2042:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1751,
															"nodeType": "ExpressionStatement",
															"src": "2042:42:11"
														},
														{
															"functionReturnParameters": 1714,
															"id": 1752,
															"nodeType": "Return",
															"src": "2099:7:11"
														}
													]
												}
											},
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "2134:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "2129:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1755,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2129:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1757,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "2142:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1758,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "2155:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2142:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2129:37:11"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "2182:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "2177:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1761,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2177:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "2191:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1764,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "2201:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2191:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:35:11"
											},
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "2233:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "2225:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2225:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"nodeType": "VariableDeclarationStatement",
												"src": "2225:17:11"
											},
											{
												"condition": {
													"id": 1770,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1756,
													"src": "2256:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1781,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "2333:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1792,
													"nodeType": "IfStatement",
													"src": "2330:74:11",
													"trueBody": {
														"id": 1791,
														"nodeType": "Block",
														"src": "2341:63:11",
														"statements": [
															{
																"expression": {
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1782,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "2356:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1783,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1712,
																						"src": "2369:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1784,
																						"name": "sellTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1612,
																						"src": "2378:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2369:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1786,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2368:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2389:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "2368:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2356:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1790,
																"nodeType": "ExpressionStatement",
																"src": "2356:36:11"
															}
														]
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "2253:151:11",
												"trueBody": {
													"id": 1780,
													"nodeType": "Block",
													"src": "2263:62:11",
													"statements": [
														{
															"expression": {
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1771,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "2278:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1772,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1712,
																					"src": "2291:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1773,
																					"name": "buyTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1609,
																					"src": "2300:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2291:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1775,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2290:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2310:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2290:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2278:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1779,
															"nodeType": "ExpressionStatement",
															"src": "2278:35:11"
														}
													]
												}
											},
											{
												"assignments": [
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "2424:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "2416:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2416:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1799,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1796,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2436:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1797,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "2445:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2436:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2416:38:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "2473:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1802,
																	"name": "netAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "2483:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1803,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "2495:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2483:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2473:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1806,
																"name": "ArithmeticError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "2506:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2506:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2465:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "2465:59:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1810,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "2541:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2553:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2541:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1888,
												"nodeType": "IfStatement",
												"src": "2537:574:11",
												"trueBody": {
													"id": 1887,
													"nodeType": "Block",
													"src": "2556:555:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1816,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "2587:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1819,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2603:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2595:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2595:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2595:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1821,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "2610:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1813,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2571:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2577:9:11",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "2571:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2571:49:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "2571:49:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1825,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "2653:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1824,
																	"name": "TaxCollected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "2640:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2640:23:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1827,
															"nodeType": "EmitStatement",
															"src": "2635:28:11"
														},
														{
															"assignments": [
																1829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1829,
																	"mutability": "mutable",
																	"name": "liquidityTokens",
																	"nameLocation": "2688:15:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1887,
																	"src": "2680:23:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1828,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2680:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1836,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1830,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "2707:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1831,
																				"name": "liquidityShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1615,
																				"src": "2719:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2707:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1833,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2706:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2737:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2706:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2680:60:11"
														},
														{
															"assignments": [
																1838
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1838,
																	"mutability": "mutable",
																	"name": "burnTokens",
																	"nameLocation": "2763:10:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1887,
																	"src": "2755:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1837,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2755:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1845,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1839,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "2777:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1840,
																				"name": "burnShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1618,
																				"src": "2789:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2777:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1842,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2776:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2802:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2776:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2755:50:11"
														},
														{
															"assignments": [
																1847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1847,
																	"mutability": "mutable",
																	"name": "rewardsTokens",
																	"nameLocation": "2828:13:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1887,
																	"src": "2820:21:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2820:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1853,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "2844:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1849,
																		"name": "liquidityTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "2856:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2844:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1851,
																	"name": "burnTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "2874:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2844:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2820:64:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1859,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2925:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2917:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1857,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2917:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2917:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1861,
																		"name": "uniswapPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "2932:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1862,
																		"name": "liquidityTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "2945:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1854,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2901:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2907:9:11",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "2901:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:60:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "2901:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1870,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3010:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3002:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1868,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3002:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3002:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1872,
																		"name": "burnTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "3017:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1865,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2990:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2996:5:11",
																	"memberName": "_burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 672,
																	"src": "2990:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2990:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "2990:38:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1880,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3069:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemCoin_$2109",
																					"typeString": "contract MemCoin"
																				}
																			],
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3061:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3061:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3061:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1882,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "3076:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3076:7:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1884,
																		"name": "rewardsTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "3085:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1875,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3045:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																			"typeString": "type(contract super MemCoin)"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3051:9:11",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "3045:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3045:54:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "3045:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1892,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "3139:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1893,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3147:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1894,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3158:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1889,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3123:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																"typeString": "type(contract super MemCoin)"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3129:9:11",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "3123:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "3123:45:11"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1762:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1779:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1771:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1795:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1787:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1814:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1806:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:51:11"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1830:0:11"
									},
									"scope": 2109,
									"src": "1753:1423:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "3278:59:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1911,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "3303:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "3311:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "3322:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1908,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3289:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemCoin_$2109_$",
																"typeString": "type(contract super MemCoin)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3295:7:11",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "3289:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "3289:40:11"
											}
										]
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3193:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1906,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3269:8:11"
									},
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3209:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "3201:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3225:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "3217:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3244:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "3236:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3200:51:11"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3278:0:11"
									},
									"scope": 2109,
									"src": "3184:153:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "3422:434:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "3441:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3455:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3441:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1930,
																"name": "TokenAmountMustBePositive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "3458:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3458:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1926,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3433:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3433:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "3433:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1937,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3516:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3508:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3508:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3508:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1941,
																	"name": "uniswaprouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "3531:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3523:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3523:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1943,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "3547:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1934,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "3499:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3499:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "3499:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1957,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3654:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemCoin_$2109",
																		"typeString": "contract MemCoin"
																	}
																],
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3646:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3646:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3646:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1959,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "3674:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3700:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3716:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1962,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3732:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3732:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1964,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3754:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3760:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3754:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1946,
																"name": "uniswaprouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "3572:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1578",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3586:15:11",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1240,
															"src": "3572:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1951,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3617:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$2109",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$2109",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3609:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1949,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3609:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3609:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3623:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3609:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3572:59:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:208:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "3572:208:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1969,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "3813:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1972,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3834:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemCoin_$2109",
																			"typeString": "contract MemCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemCoin_$2109",
																			"typeString": "contract MemCoin"
																		}
																	],
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3826:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3826:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3826:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3840:7:11",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3826:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1968,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "3798:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "EmitStatement",
												"src": "3793:55:11"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1921,
												"name": "onlyOwner",
												"nameLocations": [
													"3399:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3399:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3399:9:11"
										},
										{
											"id": 1924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1923,
												"name": "nonReentrant",
												"nameLocations": [
													"3409:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "3409:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3409:12:11"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3356:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "3377:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "3369:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:21:11"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3422:0:11"
									},
									"scope": 2109,
									"src": "3347:509:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "3930:241:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3949:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3953:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3949:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3971:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3963:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1990,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3963:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3963:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3949:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1995,
																"name": "TransferToZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "3975:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3975:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3941:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3941:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "3941:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2000,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "4011:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2003,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4029:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MemCoin_$2109",
																				"typeString": "contract MemCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MemCoin_$2109",
																				"typeString": "contract MemCoin"
																			}
																		],
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4021:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2001,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4021:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4021:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4035:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4021:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4011:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2007,
																"name": "InsufficientFunds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "4044:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4044:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4003:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4003:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "4003:61:11"
											},
											{
												"assignments": [
													2012
												],
												"declarations": [
													{
														"constant": false,
														"id": 2012,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4085:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2028,
														"src": "4077:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4077:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2018,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2015,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4103:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemCoin_$2109",
																	"typeString": "contract MemCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemCoin_$2109",
																	"typeString": "contract MemCoin"
																}
															],
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4095:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2013,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4095:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4095:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4109:7:11",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4095:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4077:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2025,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "4155:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2021,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "4137:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4137:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4129:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4129:8:11",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4129:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4146:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4129:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "4129:34:11"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1982,
												"name": "onlyOwner",
												"nameLocations": [
													"3907:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3907:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3907:9:11"
										},
										{
											"id": 1985,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1984,
												"name": "nonReentrant",
												"nameLocations": [
													"3917:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "3917:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3917:12:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "3873:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3890:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "3882:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3882:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3881:16:11"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:11"
									},
									"scope": 2109,
									"src": "3864:307:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "4254:56:11",
										"statements": [
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2038,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "4265:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2040,
														"indexExpression": {
															"id": 2039,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "4283:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4265:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2041,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "4294:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4265:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "4265:37:11"
											}
										]
									},
									"functionSelector": "c6a30647",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2035,
												"name": "onlyOwner",
												"nameLocations": [
													"4244:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4244:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4244:9:11"
										}
									],
									"name": "excludeFromTax",
									"nameLocation": "4188:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4211:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "4203:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4203:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "4225:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "4220:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4220:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4202:32:11"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:11"
									},
									"scope": 2109,
									"src": "4179:131:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "4379:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "4396:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "4400:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2054,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4390:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4390:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "4390:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2051,
												"name": "onlyOwner",
												"nameLocations": [
													"4369:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4369:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4369:9:11"
										}
									],
									"name": "mint",
									"nameLocation": "4327:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4340:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "4332:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4352:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "4344:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:28:11"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:11"
									},
									"scope": 2109,
									"src": "4318:97:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "4495:129:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2070,
																	"name": "_buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "4514:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4525:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "4514:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2073,
																	"name": "_sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "4531:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4543:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "4531:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4514:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2077,
																"name": "TaxTooHigh",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "4547:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4547:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 2069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4506:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4506:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "4506:54:11"
											},
											{
												"expression": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2081,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4571:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2082,
														"name": "_buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2062,
														"src": "4580:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4571:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "4571:16:11"
											},
											{
												"expression": {
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2085,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "4598:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2086,
														"name": "_sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "4608:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4598:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "4598:18:11"
											}
										]
									},
									"functionSelector": "c647b20e",
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2067,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2066,
												"name": "onlyOwner",
												"nameLocations": [
													"4485:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4485:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4485:9:11"
										}
									],
									"name": "setTaxes",
									"nameLocation": "4432:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "_buyTax",
												"nameLocation": "4449:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4441:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "_sellTax",
												"nameLocation": "4466:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4458:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:35:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4495:0:11"
									},
									"scope": 2109,
									"src": "4423:201:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "4668:30:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2095,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "4679:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4679:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "ExpressionStatement",
												"src": "4679:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2092,
												"name": "onlyOwner",
												"nameLocations": [
													"4658:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4658:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4658:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "4641:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4646:2:11"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4668:0:11"
									},
									"scope": 2109,
									"src": "4632:66:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "4744:29:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2104,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "4755:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "4755:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2101,
												"name": "onlyOwner",
												"nameLocations": [
													"4734:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4734:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4734:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "4715:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4722:2:11"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4744:0:11"
									},
									"scope": 2109,
									"src": "4706:67:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2110,
							"src": "463:4313:11",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								955,
								958,
								1064,
								1596,
								1598,
								1600,
								1602,
								1604,
								1606
							],
							"usedEvents": [
								24,
								811,
								820,
								947,
								952,
								1637,
								1643,
								1649
							]
						}
					],
					"src": "33:4743:11"
				},
				"id": 11
			}
		}
	}
}